{"version":3,"file":"static/js/main.7d017156.js","mappings":"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","sources":["src/contexts/auth.js","src/components/home.js","src/components/FormsAgendamento.js","src/screens/psicologa/matriz.js","src/components/iconUsers.js","src/components/DiasDaSemana.js","src/components/cardHorarios.js","src/components/logosMundial.js","src/screensUsers/psicologa/GerenciamentoAtendimento.js","src/screensUsers/Reagendamento.js","src/components/reagendar.js","src/screensUsers/psicologa/historico.js","src/screensUsers/psicologa/psicologa.js","src/screens/login.js","src/screens/psicologa/achelog.js","src/screens/massoterapeuta/matriz.js","src/screens/massoterapeuta/Neolog.js","src/screens/reagendamento.js","src/screensUsers/massoterapeuta/historico.js","src/screensUsers/massoterapeuta/gerenciarAtendimento.js","src/screensUsers/massoterapeuta/massoterapia.js","src/screens/cancelar.js","src/rotas.js","src/linking.js","App.js","src/style.js","src/styleUsers.js","src/util/util.js","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport axios from \"axios\";\r\nimport util from \"../util/util\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n export const AuthContext = createContext({});\r\n\r\nfunction AuthProvider({ children }) {\r\n     const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n // const navigation = useNavigate();\r\n\r\n\r\n \r\n\r\n    async function SignIn({email, senha}) {\r\n    try {\r\n      const data = { email, senha };\r\n   \r\n    const response = await axios.post(util.urllogin, data);\r\n  //console.log(response)\r\n      if (response.data) {\r\n         \r\n       \r\n       sessionStorage.setItem('dados', JSON.stringify(response.data));\r\n       \r\n\r\n        if (response.data.status === '200') {\r\n            //console.log(response.data.especialidade)\r\n         const tela = response.data.telasRenderizada\r\n   // console.log(tela)\r\n        \r\n         navigation(tela)\r\n        }\r\n  \r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      alert(\"Usuário ou senha inválidos\");\r\n      refreshPage()\r\n     \r\n    }\r\n  }\r\n \r\n\r\n  return (\r\n    <AuthContext.Provider value={{ SignIn }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthProvider;\r\n","\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { Router, useRoute, useNavigation, Link } from '@react-navigation/native';\r\n\r\nimport { StyleSheet, Text, TouchableOpacity, View, Image, ScrollView, Pressable } from 'react-native';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst HomeScreen = () => {\r\n  const navigation = useNavigate();\r\n\r\n  const handleCardPress = (screenName) => {\r\n   \r\n    navigation(screenName);\r\n  };\r\n\r\n  return (\r\n    <View style={{backgroundColor: '#eeeeec',  flex:1}}>\r\n   \r\n    \r\n      <View style={styles.header}>\r\n        <View style={styles.login}>\r\n          <Pressable  onPress={() => navigation('Login')}>\r\n          <FontAwesome5 name=\"user\" size={40}/> \r\n          <Text style={{ fontFamily: 'Harabara'}}>Entrar</Text>        \r\n\r\n          </Pressable>\r\n\r\n        </View>\r\n      \r\n        <View><Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{width: 150, height:150, marginBottom: 10}}/></View>\r\n        <Text style={styles.title}>Agendamento Bem Estar</Text>\r\n\r\n        <View>\r\n          \r\n    \r\n        </View>\r\n        \r\n      </View>\r\n            <View style={styles.subtitle}>\r\n                  <Text style={styles.heading}>Bem-vindo à Tela de Home</Text>\r\n                  <Text style={styles.subheading}>Escolha uma opção:</Text>\r\n            </View>\r\n     \r\n      <View style={styles.cards}>\r\n      \r\n      \r\n     \r\n      <TouchableOpacity\r\n        style={styles.card}\r\n        onPress={() => handleCardPress('psicologaMatriz')}\r\n      >\r\n        <Text style={styles.cardTitle}>Psicóloga Matriz</Text>\r\n        <Text style={styles.cardDescription}>Agende uma consulta com a psicóloga na Matriz.</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.card}\r\n        onPress={() => handleCardPress('psicologaGLP')}\r\n      >\r\n        <Text style={styles.cardTitle}>Psicóloga GLP</Text>\r\n        <Text style={styles.cardDescription}>Agende uma consulta com a psicóloga no GLP.</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.card}\r\n        onPress={() => handleCardPress('massoterapiaGLP')}\r\n      >\r\n        <Text style={styles.cardTitle}>Massoterapia Neolog</Text>\r\n        <Text style={styles.cardDescription}>Agende uma consulta com a Massoterapia no GLP.</Text>\r\n\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.card}\r\n        onPress={() => handleCardPress('massoterapiaMatriz')}\r\n      >\r\n        <Text style={styles.cardTitle}>Massoterapia Matriz</Text>\r\n        <Text style={styles.cardDescription}>Agende uma consulta com a Massoterapia na Matriz.</Text>\r\n\r\n      </TouchableOpacity>\r\n    \r\n    </View>\r\n    \r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  cards: {\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap'\r\n  },\r\n  heading: {\r\n    marginTop: 30,\r\n    color: 'black',\r\n    fontFamily: 'Harabara',\r\n    fontSize: 20,\r\n    fontWeight: 'bold'\r\n\r\n  },\r\n  header: {\r\n    \r\n    maxheight: 250,\r\n    alignItems: 'center',\r\n    justifyContent: 'top',\r\n    padding: 16,\r\n    backgroundColor: 'white',\r\n    alignSelf: 'stretch',\r\n\r\n    \r\n\r\n  },\r\n  subheading: {\r\n    fontFamily: 'source sans pro'\r\n  },\r\n  login: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: '10%',\r\n    margin: 10,\r\n    alignItems: 'flex-end',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Harabara',\r\n    marginBottom: 16,\r\n  },\r\n  subtitle: {\r\n    fontSize: 20,\r\n    color: 'gray',\r\n    marginBottom: 16,\r\n    textAlign: 'center'\r\n  },\r\n  \r\n  card: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n    minWidth: 300,\r\n    maxWidth: 300,\r\n    minHeight: 70,\r\n    maxHeight: 100,\r\n    \r\n  },\r\n  cardTitle: {\r\n    fontSize: 18,\r\n    fontFamily: 'Harabara',\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  cardDescription: {\r\n    fontSize: 14,\r\n    fontFamily: 'source sans pro',\r\n    color: 'black',\r\n  },\r\n\r\n});\r\n\r\n\r\n","import moment from 'moment';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Button, Image, Dimensions } from 'react-native';\r\nimport { MaterialIcons,Feather  } from '@expo/vector-icons'; \r\nimport axios from 'axios';\r\nimport util from '../util/util';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport styleWebMobile from '../style';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst FormsAgendamento = ({ dataSelecionada, horarioSelecionada, id_especialista, servicoId}) => {\r\n\r\n//const { selectedDate, selectedHorario } = route.params;\r\nconst navigation = useNavigate();\r\n\r\nconst [selectedDate, setSelectedDate] = useState();\r\nconst [selectedHorario, setSelectedHorario] = useState();\r\nconst [name, setName] = useState('');\r\nconst [email, setEmail] = useState('');\r\nconst [fone, setTelefone] = useState('');\r\nconst [setor, setSetor] = useState('ADM');\r\n\r\nuseEffect(() => {\r\n    setSelectedDate(dataSelecionada);\r\n    setSelectedHorario(horarioSelecionada);\r\n  }, [])\r\n\r\n  const dataCombinada = moment(selectedDate).format('YYYY-MM-DD') + ' ' + selectedHorario;\r\n  const dataFormatada = moment(dataCombinada, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD HH:mm');\r\n\r\n  function Validation(tel){\r\n\r\n    const telLimpo = tel.replace(/\\D/g, '');\r\n    if(!/^\\d{11}/.test(telLimpo)){\r\n        console.log('invalidado', telLimpo)\r\n        }\r\n        else{\r\n          console.log('validado', telLimpo)\r\n          setTelefone(telLimpo)\r\n        }\r\n  }\r\n\r\n  function handleTelefone(tex){\r\n   // setTelefone(tex)\r\n    Validation(tex)\r\n  }\r\n\r\n async function agendar() {\r\n    const dados ={\r\n        \"data\": selectedDate,\r\n        \"email\":email,\r\n        \"telefone\": fone,\r\n        \"nome\": name,\r\n        \"hora\": dataFormatada,\r\n        \"setor\": setor,\r\n        \"id_especialista\": id_especialista,\r\n        \"servicoId\": servicoId\r\n }\r\n if(\r\n  name === '' || email ===''||\r\n  dataFormatada === '' ||\r\n  setor === '' || fone === '' ||\r\n  id_especialista === '' ||\r\n  servicoId === ''\r\n )\r\n {\r\n   alert('Erro! Formulário de agendamento preenchido incorretamente!')\r\n   setName('')\r\n   setSetor('')\r\n   setEmail('')\r\n   setTelefone('')\r\n   util.refrestPage();\r\n }\r\n else{\r\n\r\n   try{\r\n   const response = await axios.post(util.urlAgendamento, dados)\r\n   // console.log(response)\r\n   \r\n    alert(`Você está agendando para ${name}, dia ${selectedDate}. Horário: ${selectedHorario} no email: ${email}`)\r\n    alert(`Reserva realizada com sucesso!`)\r\n    setTimeout(() => {\r\n      navigation('/');\r\n      setSelectedDate('')\r\n      setSelectedHorario('')\r\n      setName('')\r\n      setSetor('')\r\n      setEmail('')\r\n   setTelefone('')\r\n\r\n      }, 2000);\r\n\r\n   \r\n  }\r\n  catch(err){\r\n    console.error(err)\r\n   \r\n    alert(err.response.data.erro.toString() || 'erro ao agendar!')\r\n    setTimeout(() => {\r\n    navigation('/');\r\n      setSelectedDate('')\r\n      setSelectedHorario('')\r\n      setName('')\r\n      setSetor('')\r\n      setEmail('')\r\n   setTelefone('')\r\n\r\n      }, 2000);\r\n\r\n    \r\n  \r\n  }\r\n}\r\n }\r\n\r\nfunction voltar(tela) {\r\n // console.log(`${tela}`)\r\n  setSelectedDate('');\r\n  setSelectedHorario('');\r\n\r\n  navigation('/');\r\n\r\n}\r\n\r\nfunction handleSelectChange(event){\r\n  const selectedValue = event.target.value;\r\n  setSetor(selectedValue)\r\n}\r\n\r\nconst width = Dimensions.get('window').width\r\n//setDimension(width)\r\n//console.log(width)\r\nif (width < 800) {\r\n\r\n  return (\r\n  <View style={{justifyContent: 'center', alignItems: 'center'}}>\r\n    <View style={styles.containerM}>\r\n      <View style={styles.containerGridM}>\r\n        <View style={styles.containerInfoM}>\r\n          <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n                   \r\n          <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Espaço Bem Estar</Text>\r\n         \r\n          <Text style={styles.textDateh}> <MaterialIcons name=\"supervised-user-circle\" size={24} color=\"black\" style={{marginRight: 6}} />{servicoId}</Text>\r\n          \r\n          </View>\r\n            <View style={{justifyContent:  'center'}} aria-valuetext='image'>\r\n                      <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{width: 250, height: 250, alignItems: 'center', marginTop: 15}}/> \r\n\r\n            </View>\r\n\r\n        </View>\r\n        \r\n       <View style={styles.containerInputM}>\r\n            <Text style={styles.inputBtnM}>Data:</Text>\r\n            <TextInput\r\n            nativeID='diaSelecionado'\r\n            style={styles.input}\r\n            onChangeText={(text) => setSelectedDate(text)}\r\n            defaultValue={selectedDate}\r\n            editable={false}/>\r\n            <Text style={styles.inputBtnM}>Horario:</Text>\r\n            <TextInput\r\n             nativeID='horarioSelecionado'\r\n            style={styles.input}\r\n            onChangeText={(text) => setSelectedHorario(text)}\r\n            defaultValue={selectedHorario}\r\n            editable={false}/>\r\n             <Text style={styles.inputBtnM}>Nome:</Text>\r\n            <TextInput\r\n             nativeID='nome'\r\n            \r\n            style={styles.input}\r\n            onChangeText={(text) => setName(text)}\r\n            />\r\n\r\n            <Text style={styles.inputBtnM}>E-mail:</Text>\r\n            <TextInput\r\n             nativeID='email'\r\n             //maxLength={14}\r\n            style={styles.input}\r\n            onChangeText={(text) => setEmail(text)}\r\n            />\r\n\r\n            <Text style={styles.inputBtnM}>Telefone:</Text>\r\n            <TextInput\r\n             nativeID='telefone'\r\n            style={styles.input}\r\n            onChangeText={(text) => handleTelefone(text)}\r\n            />\r\n\r\n            <Text style={styles.inputBtnM}>Setor:</Text>\r\n            <select name='Seleção-setor'style={styles.input} required onChange={(event) => handleSelectChange(event)}>\r\n                    <option value='ADM' style={{color: 'black'}}>ADM</option>\r\n                    <option value='Operacional' style={{color: 'black'}}>Operacional</option>\r\n                  </select>\r\n          <View style={styles.button}>\r\n\r\n            <Button title='agendar' accessibilityLabel='agendar' color={'orange'}  onPress={() => agendar()} />\r\n            <Button title='Voltar' accessibilityLabel='voltar'  color={'orange'} onPress={() => voltar(servicoId)}/>\r\n            \r\n          </View>\r\n           \r\n\r\n       </View>\r\n           \r\n\r\n        </View>\r\n    </View>\r\n  </View>\r\n  );\r\n}else{\r\n  return (\r\n  <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n      <View style={[styles.container, {width: '45%'}]}>\r\n        <View style={[styles.containerGrid, {justifyContent:'space-between'}]}>\r\n          <View style={[styles.containerInfo, {padding: 10, width: '50%'}]}>\r\n            <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n                    \r\n            <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Espaço Bem Estar</Text>\r\n         \r\n            <Text style={styles.textDateh}> <MaterialIcons name=\"supervised-user-circle\" size={20} color=\"white\" style={{marginRight: 6}} />{servicoId}</Text>\r\n         \r\n            </View>\r\n              <View style={{justifyContent:  'flex-start', left: 5}} aria-valuetext='image'>\r\n                        <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{width: 250, height: 250, alignItems: 'center', marginTop: 15}}/> \r\n\r\n              </View>\r\n\r\n          </View>        \r\n            <View style={styles.containerInput}>\r\n                  <Text style={styles.inputBtnM}>Data:</Text>\r\n                  <TextInput\r\n                  nativeID='diaSelecionado'\r\n                  style={styles.input}\r\n                  onChangeText={(text) => setSelectedDate(text)}\r\n                  defaultValue={selectedDate}\r\n                  editable={false}/>\r\n                  <Text style={styles.inputBtnM}>Horario:</Text>\r\n                  <TextInput\r\n                  nativeID='horarioSelecionado'\r\n                  style={styles.input}\r\n                  onChangeText={(text) => setSelectedHorario(text)}\r\n                  defaultValue={selectedHorario}\r\n                  editable={false}/>\r\n                  <Text style={styles.inputBtnM}>Nome:</Text>\r\n                  <TextInput\r\n                  nativeID='nome'\r\n                  \r\n                  style={styles.input}\r\n                  onChangeText={(text) => setName(text)}\r\n                  />\r\n\r\n                  <Text style={styles.inputBtnM}>E-mail:</Text>\r\n                  <TextInput\r\n                  nativeID='email'\r\n                  style={styles.input}\r\n                  onChangeText={(text) => setEmail(text)}\r\n                  />\r\n                  <Text style={styles.inputBtnM}>Telefone:</Text>\r\n                    <TextInput\r\n                    nativeID='telefone'\r\n                    style={styles.input}\r\n                    onChangeText={(text) => handleTelefone(text)}\r\n                    />\r\n                  <Text style={styles.inputBtnM}>Setor:</Text>\r\n                  <select name='Seleção-setor'style={styles.input} required onChange={(event) => handleSelectChange(event)}>\r\n                    <option value='ADM' style={{color: 'black'}}>ADM</option>\r\n                    <option value='Operacional' style={{color: 'black'}}>Operacional</option>\r\n                  </select>\r\n                \r\n                <View style={styles.button}>\r\n\r\n                  <Button title='agendar' accessibilityLabel='agendar' color={'orange'}  onPress={() => agendar()} />\r\n                  <Button title='Voltar' accessibilityLabel='voltar'  color={'orange'} onPress={() => voltar()}/>\r\n                  \r\n                </View>\r\n                \r\n\r\n            </View>\r\n            \r\n\r\n        </View>\r\n      </View>\r\n  </View>\r\n  );\r\n}\r\n}\r\nconst styles = styleWebMobile;\r\n\r\n\r\nexport default FormsAgendamento;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Text,Linking, View, StyleSheet,Image, Button,ActivityIndicator, TouchableOpacity, Pressable, Alert, Dimensions } from 'react-native';\r\nimport moment from 'moment/moment';\r\nimport {Calendar,LocaleConfig} from 'react-native-calendars';\r\nimport axios from  'axios';\r\nimport { MaterialIcons,Feather,Ionicons   } from '@expo/vector-icons'; \r\n//import { MaterialIcons,Feather  } from '@expo/vector-icons'; \r\nimport { FlatList, ScrollView } from 'react-native-web';\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\r\nimport FormsAgendamento from '../../components/FormsAgendamento';\r\nimport util, { refrestPage } from '../../util/util';\r\nimport styleWebMobile from '../../style';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst AgendamentoPsicologaMatriz =   () => {\r\n\r\n  const [date, setDate] = useState(new Date())\r\n  const [markedDates, setMarkedDates] = useState({});\r\n  const [hora, setHorario] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedHorario, setselectedHorario] = useState();\r\n  const [horaa, sethoraa] = useState([]);\r\n  const [showCalendar, setshowCalendar] = useState(true);\r\n  const [showHorarios, setshowHorarios] = useState(false);\r\n  const [navegar, setNavegar] = useState();\r\n  const [dimensions, setDimension] = useState();\r\n\r\n  const navigation = useNavigate();\r\n  const especialidade = 'psicologa';\r\n  const servicoId = 'psicologaMatriz';\r\n \r\n\r\n    const fetchApi = async () => {\r\n      const especialidade = 'psicologa';\r\n      const servicoId = 'psicologaMatriz';\r\n      const dataApi = new Date();\r\n      const dados = {\r\n        dataApi,\r\n        especialidade,\r\n        servicoId\r\n      };\r\n  try{\r\n      const response = await axios.post(util.urlHorariosDisponiveis, dados);\r\n      const diasSemanaDisponiveis = response.data.agenda || [];\r\n     \r\n      if(diasSemanaDisponiveis.length <= 0){\r\n        alert('Sem horarios disponiveis!!');\r\n         navigation('/')\r\n       }\r\n       else{\r\n       setHorario(diasSemanaDisponiveis)\r\n       // Atualize as marcações de datas\r\n       const marked = {};\r\n       diasSemanaDisponiveis.forEach((dia) => {\r\n         marked[dia.data[0]] = { selected: true, selectedColor: '#e77825' };\r\n       });\r\n   \r\n       setMarkedDates(marked);\r\n       setshowCalendar(true)\r\n       setIsLoading(false);\r\n     }}\r\n    catch (erro){\r\n      console.warn('Não foi possível buscar os dados da API');\r\n      alert('Não foi possível buscar os dados da API');\r\n      navigation('/');\r\n    }\r\n    };\r\n  \r\n    useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchApi();\r\n      \r\n    }, []);\r\n  \r\n  \r\n\r\n  function CompCalendario() {\r\n\r\n    LocaleConfig.locales['pt-br'] = {\r\n      monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n  \r\n      monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n      dayNames: [\r\n  \r\n        'Domingo',\r\n        'Segunda-feira',\r\n        'Terça-feira',\r\n        'Quarta-feira',\r\n        'Quinta-feira',\r\n        'Sexta-feira',\r\n        'Sábado'\r\n  \r\n      ],\r\n      dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\r\n      today: 'Hoje',\r\n    }\r\n  \r\n    LocaleConfig.defaultLocale='pt-br';\r\n\r\n    // Dia pressionado\r\n   const handleDayPress = (day) => {\r\n      setSelectedDate(day.dateString);\r\n      \r\n    const horarioSelecionado = hora.find(\r\n        (horario) => horario.data.toString() === day.dateString\r\n      );\r\n\r\n  if(horarioSelecionado){\r\n    const horariosDisponiveis =  horarioSelecionado.horariosLivres;\r\n   \r\n    sethoraa(horariosDisponiveis)\r\n    setshowHorarios(true)\r\n    setshowCalendar(false)\r\n     \r\n}\r\n\r\nsetselectedHorario('')\r\n}\r\n     \r\n  \r\n    return (\r\n      <View>\r\n        {isLoading ? (\r\n          <ActivityIndicator size=\"large\" color=\"blue\" />\r\n        ) : (\r\n          <>\r\n            <Calendar\r\n            style={{width: '99%', height: '99%'}}\r\n               onDayPress={handleDayPress}\r\n              markedDates={{\r\n                ...markedDates,\r\n                [selectedDate]: { selected: true, selectedColor: 'orange' },\r\n                //disableTouchEvent: {...markedDates} \r\n              }\r\n             \r\n            }\r\n              //disableAllTouchEventsForDisabledDays={true}\r\n              \r\n              theme={{\r\n                backgroundColor: 'white',\r\n                calendarBackground: 'black',\r\n               // todayBackgroundColor: 'orange',\r\n                textSectionTitleColor: 'white',\r\n                selectedDayBackgroundColor: 'white',\r\n                selectedDayTextColor: 'white',\r\n                todayTextColor: 'white',\r\n                dayTextColor: 'white',\r\n                textDisabledColor: 'gray',\r\n                arrowHeight: 20,\r\n                monthTextColor: 'white',\r\n                 arrowWidth: 20,\r\n                arrowColor: 'white',\r\n                arrowsHitSlop: 20,\r\n                textMonthFontSize: 20,\r\n                textDayHeaderFontSize: 14,\r\n                \r\n               // contentStyle: styles.containerDate\r\n              }}\r\n              minDate= {moment().format('YYYY-MM-DD')}\r\n             disabledByDefault={true}\r\n            />\r\n          </>\r\n        )\r\n       }\r\n      </View>\r\n        )\r\n        \r\n  }\r\n\r\n  // Array de dias disponíveis\r\n  const dataFormat = moment(date).format('DD/MM/YYYY')\r\n\r\n  //Selecionar horario disponivel\r\n\r\n  function handleHorarioSelecionado(event, horarios) {\r\n    console.log('Horário selecionado:', horarios);\r\n    setselectedHorario(horarios)\r\n    \r\n    \r\n  }\r\n\r\n  // Navegar para tela forms\r\n\r\n  function agendar(tela) {\r\n   setNavegar(tela)\r\n   \r\n  }\r\n  const dataHoje = moment().format('YYYY-MM-DD')\r\n  const horaHoje = moment().format('HH:mm')\r\n    //navegação para telas\r\n  \r\n  if(navegar) {    \r\n    return <FormsAgendamento  dataSelecionada= {selectedDate} horarioSelecionada= {selectedHorario} id_especialista={especialidade} servicoId={servicoId}/>\r\n  \r\n  }\r\n  \r\n  \r\n  const width = Dimensions.get('window').width\r\n  //setDimension(width)\r\n//console.log(width)\r\n  if (width > 800) {\r\n  return (\r\n    <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n    <View style={styles.container}>\r\n      <View style={styles.containerGrid}>\r\n        <View style={styles.containerInfo}>\r\n          <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n          <Text style={styles.textDate}>Data: {dataFormat}</Text>\r\n          \r\n          <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Psicologa GLP</Text>\r\n         \r\n          <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>1h</Text>\r\n          \r\n          </View>\r\n            <View style={{justifyContent:  'center'}} aria-valuetext='image'>\r\n                      <Image source={require('../../../assets/logo_mundial_cores.png')} style={{width: 250, height: 250, alignItems: 'center', marginTop: 15}}/> \r\n\r\n            </View>\r\n\r\n        </View>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>\r\n                  <Text style={styles.textDate}\r\n                          >Escolha uma data e horário</Text>\r\n                <View style={styles.containerDate}>\r\n                <CompCalendario />\r\n                \r\n                \r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n    \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorario}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorario}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n\r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n\r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorario}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n      </View>\r\n\r\n     \r\n    </View>\r\n    </View>\r\n  \r\n  \r\n  )}\r\n  else{\r\n    return(\r\n      <>\r\n     <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1, width: '100%'}}>\r\n      <View style={styles.containerM}>\r\n          <View style={styles.containerGridM}>\r\n            <View style={styles.containerInfoM}>\r\n              <Text style={styles.textDate}>Data: {dataFormat}</Text>\r\n              \r\n              <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Massoterapeuta Matriz</Text>\r\n            \r\n              <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>20 min</Text>\r\n            \r\n            </View>\r\n            {/* Calendário!! */}\r\n            {\r\n              showCalendar? \r\n            <View style={styles.Calendar}>\r\n\r\n            <CompCalendario/>\r\n            </View>\r\n              : null\r\n\r\n            }\r\n\r\n            {/* Horarios*/}\r\n            {\r\n              showHorarios? \r\n              <View style={styles.containerGridsM}>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>   \r\n                 <Text style={styles.textDate}>Data Selecionada: {selectedDate}</Text>\r\n                 <View style={{alignContent: 'flex-start', alignItems: 'flex-start'}}>\r\n                        <TouchableOpacity  onPress={() => {setshowHorarios(false), setshowCalendar(true), setSelectedDate('')}}><Ionicons name=\"ios-arrow-back\" size={24} color=\"white\"  /></TouchableOpacity>\r\n\r\n                  </View>\r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                       \r\n\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n        \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorarioM}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorarioM}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n        \r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n        \r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorarioM}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n              : null\r\n            }\r\n           \r\n           \r\n\r\n          </View>\r\n\r\n        </View>\r\n    </View>\r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n//const widht = Dimensions.get('') \r\nconst styles = styleWebMobile;\r\n//const stylesM = styleMobile;\r\nexport default AgendamentoPsicologaMatriz;\r\n","import { Feather,FontAwesome,FontAwesome5  } from '@expo/vector-icons'; \r\nimport { useNavigation } from '@react-navigation/native';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport {View, Text,TouchableOpacity, Pressable} from 'react-native';\r\nimport { StyleSheet } from 'react-native';\r\nimport util from '../util/util';\r\n\r\n\r\nconst UserIcon = () => {\r\n\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const [isLoggedIn, setisLoggedIn] = useState(false);\r\n\r\n    const navigation = useNavigation();  \r\n\r\n\r\n    const tokeen = sessionStorage.getItem('token')\r\n    \r\n    useEffect(() => {\r\n      if(tokeen != '' ||  null){\r\n\r\n      setisLoggedIn(true);\r\n     }else{\r\n       alert(\"Você precisa logar primeiro!\");\r\n\r\n     setisLoggedIn(false);\r\n\r\n     }\r\n\r\n    }, [tokeen])\r\n\r\n\r\n    const handleExpand = () => {\r\n      setIsExpanded(!isExpanded);\r\n    };\r\n    //const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const handleLogin = () => {\r\n      navigation.navigate('Login')};\r\n  \r\n    \r\n  \r\n    const handleSair = async () => {\r\n      try{\r\n        \r\n      await axios.post(util.urllogout)\r\n        setisLoggedIn(false);\r\n        navigation.navigate('Home');\r\n      } catch (error) {\r\n        console.log('erro:', error);\r\n        sessionStorage.removeItem('dados');\r\n        navigation.navigate('Home');\r\n\r\n      }\r\n   \r\n    \r\n    };\r\n    \r\n    return (\r\n        <View >\r\n            <TouchableOpacity onPress={handleExpand}>\r\n        \r\n          <FontAwesome5 name=\"user-circle\" size={50} color=\"black\" />\r\n        \r\n    \r\n        {isExpanded && (\r\n        <View style={[style.containerUser, { marginTop: 60 }]}>\r\n        {!isLoggedIn ? (\r\n          <Pressable onPress={handleLogin}>\r\n            <Text>Entrar</Text>\r\n          </Pressable>\r\n        ) : (\r\n          <Pressable onPress={() => handleSair()}>\r\n            <Text>Sair</Text>\r\n          </Pressable>\r\n        )}\r\n      </View>\r\n        )}\r\n      </TouchableOpacity>\r\n      </View>\r\n    );\r\n    \r\n}\r\nconst style = StyleSheet.create({\r\n    containerUser: {\r\n        position: 'absolute',\r\n        backgroundColor:'gray',\r\n        width:150,\r\n        height:200,\r\n        padding: 20,\r\n        alignItems: 'flex-start',\r\n        \r\n        },\r\n\r\n})\r\n\r\nexport default UserIcon;","import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet,CheckBox,ScrollView, ActivityIndicator } from 'react-native';\r\n//import CheckBox from '@react-native-community/checkbox';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport util, { refrestPage } from '../util/util';\r\n\r\n\r\n\r\nconst WeekdayButtons = () => {\r\n  const [selectedDays, setSelectedDays] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState([]);\r\n  const [selectedHours, setSelectedHours] = useState([]);\r\n   const [press, setPress] = useState(false);\r\n   const availableHours = [\r\n    '08:00',\r\n    '09:00',\r\n    '10:00',\r\n    '11:00',\r\n    '12:00',\r\n    '13:00',\r\n    '14:00',\r\n    '15:00',\r\n    '16:00',\r\n    '17:00',\r\n    '18:00',\r\n    '19:00',\r\n    '20:00',\r\n  ];\r\n\r\n  const dadosArmazenados = sessionStorage.getItem('dados');\r\n  const dadosLogados = JSON.parse(dadosArmazenados);\r\n\r\nconst config ={\r\nheaders: {\r\n'authorization': `Bearer ${dadosLogados.token}`\r\n}\r\n}\r\n//console.log(dadosArmazenados)\r\n\r\nconst especialidade = dadosLogados.especialidade\r\nconst servicoId = dadosLogados.user\r\n\r\n\r\n\r\n  const handleDaySelection = (day, index) => {\r\n    if (selectedIndex.includes(index) && selectedDays.includes(day)) {\r\n      setSelectedIndex(selectedIndex.filter((selectedIndex) => selectedIndex !== index));\r\n      setSelectedDays(selectedDays.filter((selectedDay) => selectedDay !== day));\r\n    } else {\r\n      setSelectedIndex([...selectedIndex, index]);\r\n      setSelectedDays([...selectedDays, day]);\r\n    }\r\n  };\r\n\r\n  const renderButton = (day, index) => {\r\n    const isDaySelected = selectedDays.includes(day);\r\n    const buttonStyle = isDaySelected ? styles.selectedButton : styles.button;\r\n    const textStyle = isDaySelected ? styles.selectedButtonText : styles.buttonText;\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        key={index}\r\n        id={`especialidade-${index}`}\r\n        style={buttonStyle}\r\n        onPress={() => handleDaySelection(day, index)}\r\n      >\r\n        <CheckBox\r\n          id={`especialidade-${index}`}\r\n          name='check'\r\n          value={isDaySelected}\r\n          onValueChange={() => handleDaySelection(day, index)}\r\n          tintColors={{ true: '#e77825', false: 'white' }}\r\n        />\r\n        <Text style={textStyle}>{moment().weekday(index).locale('pt-br').format('dddd').toUpperCase()}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setPress(true);\r\n\r\n    const IndexDia = selectedIndex;\r\n    const HorarioInicio = selectedHours[0];\r\n    const HorarioFim = selectedHours[1];\r\n\r\n    const horaInicio = new Date(`1970-01-01T${HorarioInicio}:00`);\r\n    const horaFim = new Date(`1970-01-01T${HorarioFim}:00`);\r\n\r\n    if (horaInicio > horaFim) {\r\n      alert(\r\n        'Horario de inicio maior que o horario fim! \\n Por gentileza refazer corretamente a seleção'\r\n      );\r\n      setPress(false); // Resetando o indicador\r\n      return;\r\n    }\r\n\r\n    //const especialidade = 'psicologa';\r\n    //const colaboradorId = especialidade;\r\n    const dias = IndexDia;\r\n    const inicio = horaInicio;\r\n    const fim = horaFim;\r\n\r\n    const dados = {\r\n      especialidade,\r\n     colaboradorId: [servicoId],\r\n      dias,\r\n      inicio,\r\n      fim,\r\n      servicoId\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(util.urlPosthorarioServico, dados,config\r\n        );\r\n       // console.log(response)\r\n      if(response.data.status === 201){\r\n        alert(response.data.mensagem)\r\n        refrestPage()\r\n      } \r\n      else{\r\n      alert('Horario de atendimento alterado!');\r\n      setSelectedDays('');\r\n      setSelectedHours('');\r\n      setSelectedIndex('');\r\n      //setEspecialidade('');\r\n      refrestPage()\r\n    }\r\n  } catch (error) {\r\n      console.log(error);\r\n      alert('Erro ao realizar a requisição. Por favor, tente novamente.');\r\n      util.refrestPage()\r\n    }\r\n\r\n    setPress(false); // Resetando o indicador após a requisição\r\n  };\r\n \r\n  const handleHourSelection = (hour) => {\r\n\r\nconsole.log(hour)\r\n\r\n      if (selectedHours.includes(hour)) {\r\n        setSelectedHours(selectedHours.filter((selectedHour) => selectedHour !== hour));\r\n  \r\n      } else {\r\n        setSelectedHours([...selectedHours, hour]);\r\n      }\r\n    };\r\n  \r\n\r\n    return (\r\n      <View style={{flex:1, flexWrap:'wrap', maxWidth: 700}}>\r\n        <View style={{ flexDirection: 'row', justifyContent:'center', }}>\r\n          <TouchableOpacity\r\n            id='especialidade-psicologaGLP'\r\n            //onPress={() => handleEspeciladade(servicoId)}\r\n            style={[\r\n              styles.colaboradorIdrButton,\r\n              servicoId === 'psicologaGLP' && styles.selectedcolaboradorIdButton,\r\n            ]}\r\n          >\r\n            <Text style={{ fontFamily: 'Harabara', fontSize: 20}}>ID especialidade logada: {servicoId}</Text>\r\n          </TouchableOpacity>\r\n  \r\n         </View>\r\n  \r\n        <View style={styles.buttonsContainer}>\r\n          {moment.weekdays().map((day, index) => renderButton(day, index))}\r\n        </View>\r\n      {\r\n      press && <ActivityIndicator size={100} color={'orange'} />\r\n    }\r\n      <Text style={{ fontFamily: 'Harabara', fontSize: 20, textAlign: 'center'}}>Horários Disponíveis Selecionados:</Text>\r\n      <ScrollView horizontal={true} contentContainerStyle={{flex:1, flexGrow: 1, flexDirection: 'row' }}>\r\n    <View style={{flexDirection:'column'}}>\r\n      <View>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        {availableHours.slice(0, 6).map((hour) => (\r\n          <TouchableOpacity\r\n            key={hour}\r\n            id='especialidade3'\r\n            style={[\r\n              styles.hourButton,\r\n              selectedHours.includes(hour) && styles.selectedHourButton,\r\n            ]}\r\n            onPress={() => handleHourSelection(hour)}\r\n          >\r\n            <Text style={styles.hourButtonText}>{hour}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  \r\n    <View>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        {availableHours.slice(6).map((hour) => (\r\n          <TouchableOpacity\r\n          id='especialidade1'\r\n          \r\n            key={hour}\r\n            style={[\r\n              styles.hourButton,\r\n              selectedHours.includes(hour) && styles.selectedHourButton,\r\n            ]}\r\n            onPress={() => handleHourSelection(hour)}\r\n          >\r\n            <Text style={styles.hourButtonText}>{hour}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n    </View>\r\n  \r\n    </ScrollView>\r\n   \r\n      <TouchableOpacity  id='especialidade9' onPress={() => handleSave()} style={styles.saveButton}>\r\n        <Text style={styles.saveButtonText}>Salvar</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 10,\r\n  fontFamily: 'source sans pro',\r\n  fontSize:'small',\r\n  },\r\n  button: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    margin: 5,\r\n    padding: 5,\r\n    backgroundColor: '#e77825',\r\n    borderRadius: 5,\r\n  },\r\n  selectedButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    margin: 5,\r\n    padding: 5,\r\n    backgroundColor: '#e77825',\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    marginLeft: 5,\r\n  },\r\n  selectedButtonText: {\r\n    marginLeft: 5,\r\n    fontWeight: 'bold',\r\n  },\r\n  hourButton: {\r\n    width: 80,\r\n    height: 30,\r\n    margin: 5,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: '#e77825',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  selectedHourButton: {\r\n    backgroundColor: 'lightblue',\r\n  },\r\n  hourButtonText: {\r\n    fontSize: 12,\r\n  },\r\n  colaboradorIdrButton: {\r\n    flexGrow: 1,\r\n    width: 50,\r\n    height: 30,\r\n    margin: 5,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: '#e77825',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  selectedcolaboradorIdButton: {\r\n    \r\n    minWidth: 200,\r\n    maxWidth: 400,\r\n    backgroundColor: '#e77825',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#e77825',\r\n    shadowColor: \"#000\",\r\n    elevation: 5,\r\n    shadowOffset: {\r\n      width: -4.9876e-314,\r\n      height: 1.5,\r\n      },\r\n      shadowOpacity: 0.5,\r\n      shadowRadius: 1.5,\r\n      opacity: .9,\r\n\r\n    \r\n\r\n  },\r\n  saveButton: {\r\n    position:\"absolute\",\r\n    bottom:-20,\r\n    left:10,\r\n    zIndex:1,\r\n  \r\n\r\n\r\n\r\n\r\n  },\r\n  saveButtonText: {\r\n    backgroundColor: '#e77825',\r\n    color:'white',\r\n    width: 120,\r\n    textAlign: 'center',\r\n    alignItems: 'center',\r\n  }\r\n});\r\n\r\nexport default WeekdayButtons;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Text, View, StyleSheet, Image, Button, TextInput, TouchableOpacity, FlatList, Alert, Pressable } from 'react-native';\r\nimport moment from 'moment/moment';\r\nimport axios from 'axios';\r\nimport util from '../util/util';\r\n\r\n\r\nexport function Card({ data, setNull }) {\r\n  const [editedData, setEditedData] = useState([]);\r\n  const [edit, setEdit] = useState(null);\r\n  const [expandedIndex, setExpandedIndex] = useState(-1);\r\n\r\n\r\n  const dadosArmazenados = sessionStorage.getItem('dados');\r\n  const dadosLogados = JSON.parse(dadosArmazenados);\r\n\r\n\r\n  const config = {\r\n    headers: {\r\n      'authorization': `Bearer ${dadosLogados.token}`\r\n    }\r\n  }\r\n\r\n\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      setEditedData(data.map(horario => ({ ...horario, editMode: false })));\r\n    }\r\n  }, [data]);\r\n\r\n  const handleEdit = (text, index, field) => {\r\n\r\n    const newData = [...editedData];\r\n\r\n    newData[index][field] = text;\r\n    setEditedData(newData);\r\n\r\n    //handleSave();\r\n\r\n  };\r\n\r\n  // console.log(editedData)\r\n\r\n  const handleSave = async (inicio, fim, dias, id) => {\r\n\r\n    //  console.log(inicio, fim, dias, id)\r\n\r\n\r\n    const dados = {\r\n      inicio,\r\n      fim,\r\n      dias,\r\n      id,\r\n      especialidade: dadosLogados.especialidade,\r\n      servicoId: dadosLogados.user\r\n    }\r\n\r\n    try {\r\n      await axios.put(util.urlPUThorarioFuncio, dados, config)\r\n      //console.log(dados, editedData)\r\n      alert('Horário Alterado!')\r\n    } catch (error) {\r\n      console.log(error)\r\n      alert('Ocorreu um erro', error)\r\n\r\n\r\n    }\r\n\r\n    // console.log(editedData)\r\n  };\r\n  //console.log(moment(horario.dias).locale('pt-br').format('ddd').toLocaleUpperCase()) \r\n  return (\r\n    <View ref={ref} style={{ justifyContent: 'center', alignItems: 'center' }} >\r\n      <Text style={styles.cardTitle}>Horarios de Atendimento</Text>\r\n\r\n      <TouchableOpacity onPress={() => util.refrestPage()}><Text>Atualizar dados</Text></TouchableOpacity>\r\n      <View style={styles.cardContainer}>\r\n        {editedData.map((horario, index) => (\r\n\r\n          <View key={index} style={styles.editableItem}>\r\n            <TouchableOpacity\r\n              style={styles.cardHeader}\r\n              onPress={() => setExpandedIndex(index === expandedIndex ? -1 : index)}\r\n            >\r\n              <Text style={styles.label}>\r\n                {moment().weekday(horario.dias).locale('pt-br').format('ddd').toLocaleUpperCase()}:\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {index === expandedIndex && (\r\n              <View style={styles.expandedContent}>\r\n                {!horario.editMode ? (\r\n                  <>\r\n                    <TextInput\r\n                      style={styles.input}\r\n                      value={moment(horario.inicio).format('HH:mm')}\r\n                      autoFocus={true}\r\n                    />\r\n                    <TextInput\r\n                      style={styles.input}\r\n                      value={moment(horario.fim).format('HH:mm')}\r\n                    />\r\n                    <Button\r\n                      title='Editar'\r\n                      onPress={() => setEdit(horario.editMode = true)}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <TextInput\r\n                      style={styles.input}\r\n                      value={horario.inicio}\r\n                      onChangeText={(text) => handleEdit(text, index, 'inicio')}\r\n                    />\r\n                    <TextInput\r\n                      style={styles.input}\r\n                      value={horario.fim}\r\n                      onChangeText={(text) => handleEdit(text, index, 'fim')}\r\n                    />\r\n                    <Button\r\n                      title='cancelar'\r\n                      color='orange'\r\n                      onPress={() => setEdit(horario.editMode = false)}\r\n                    />\r\n\r\n                    <Button title='Alterar horarios' onPress={() => handleSave(horario.inicio, horario.fim, horario.dias, horario.id)} color={'orange'} />\r\n\r\n                  </>\r\n                )}\r\n              </View>\r\n            )}\r\n\r\n          </View>\r\n        ))}\r\n\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  cardHeader: {\r\n    //  flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n    backgroundColor: '#e77825',\r\n    borderRadius: 5,\r\n    marginBottom: 8,\r\n  },\r\n  title: {\r\n    fontSize: 100,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  expandedContent: {\r\n    paddingTop: 10,\r\n    paddingHorizontal: 16,\r\n    paddingBottom: 8,\r\n    borderWidth: 1,\r\n    borderColor: 'orange',\r\n    // flexDirection: 'row',\r\n  },\r\n  cardContainer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 16,\r\n  },\r\n  cardTitle: {\r\n\r\n    fontSize: 22,\r\n    alignItems: 'center',\r\n    fontFamily: 'Harabara',\r\n    // width: 250,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginBottom: 8,\r\n  },\r\n  editableItem: {\r\n    //  flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n\r\n\r\n\r\n  },\r\n  label: {\r\n    // fontSize: 30,\r\n    marginRight: 8,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    padding: 8,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: 'blue',\r\n    borderRadius: 4,\r\n    padding: 8,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n})","import { Image, StyleSheet,View } from \"react-native\";\r\n\r\n\r\n\r\nexport default function LogoMundial() {\r\n    return (\r\n        <>\r\n        <Image source={require('../../assets/logo_mundial_cores.png')} style={styles.logo} />\r\n            <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={styles.logo2} />\r\n        \r\n        </>\r\n            \r\n    ) \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    logo: {\r\n        //resizeMode:'contain',\r\n        width: 100,\r\n        height: 100,\r\n        position: \"absolute\",\r\n        justifyContent: 'flex-start',\r\n        alignContent: 'flex-start',\r\n        left: '9%',\r\n        marginTop: -7,\r\n        top: 7\r\n  },\r\n  logo2: {\r\n    //resizeMode:'contain',\r\n    width: 100,\r\n    height: 100,\r\n    position: \"absolute\",\r\n    justifyContent: 'flex-start',\r\n    alignContent: 'flex-start',\r\n    left: '15%',\r\n      marginTop: -7,\r\n      top: 7\r\n    \r\n  },\r\n})","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\nimport TelaPsicologa from './psicologa';\r\nimport Telahistorico from './historico';\r\nimport UserIcon from '../../components/iconUsers';\r\nimport WeekdayButtons from '../../components/DiasDaSemana'\r\nimport axios from 'axios';\r\nimport ControleAgendas from '../../components/controlAgendas';\r\nimport LogoMundial from '../../components/logosMundial';\r\n\r\n\r\n\r\n\r\nconst AtendimentoEspecialista = ({ navigation }) => {\r\n  const [diasSelecionados, setDiasSelecionados] = useState([]);\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n  const [exibirTela, setexibirTela] = useState(false);\r\n  const [navegacao, setnavegacao] = useState();\r\n  const [dados, setDados] = useState();\r\n\r\n\r\n  const handleTelaPsicologa = (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n    setexibirTela(true)\r\n\r\n\r\n  }\r\n  const handleTelaHistórico = (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n    setexibirTela(true)\r\n\r\n  }\r\n  const handleTelaDisponibilidade = (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n    setexibirTela(true)\r\n\r\n  }\r\n\r\n  if (exibirTela && navegacao === 'UserPsicologa') {\r\n    // setexibirTela(false)\r\n    return (\r\n      <View><TelaPsicologa /></View>\r\n    )\r\n\r\n\r\n  } else if (exibirTela && navegacao === 'Tela Historico') {\r\n    // setexibirTela(false)\r\n    return (\r\n      <View><Telahistorico /></View>\r\n    )\r\n  } else if (exibirTela && navegacao === 'Atendimento Especialista') {\r\n    return (\r\n      <View><AtendimentoEspecialista /></View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{ justifyContent: 'center' }}>\r\n      <View style={[styles.header, { justifyContent: 'center' }]}>\r\n        <View style={{ left: '33%' }}>\r\n          <UserIcon />\r\n\r\n        </View>\r\n        <LogoMundial />\r\n\r\n        <View style={styles.headerBtn}>\r\n          <TouchableOpacity id='especialidade' style={styles.btn} onPress={() => handleTelaPsicologa('UserPsicologa')}>\r\n            <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Pendentes</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity id='especialidade' style={styles.btn} onPress={() => handleTelaHistórico('Tela Historico')}>\r\n            <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Histórico</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity id='especialidade' style={styles.btn} onPress={() => handleTelaDisponibilidade('Atendimento Especialista')}>\r\n            <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Disponibilidade</Text>\r\n          </TouchableOpacity>\r\n\r\n        </View>\r\n      </View>\r\n\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ScrollView contentContainerStyle={styles.container} showsVerticalScrollIndicator={true} >\r\n          <Text style={{ fontFamily: 'Harabara', fontSize: 20 }}>Definir Dias de Atendimento</Text>\r\n          <WeekdayButtons />\r\n          <View>\r\n            <ControleAgendas />\r\n\r\n          </View>\r\n\r\n\r\n\r\n        </ScrollView>\r\n\r\n\r\n      </View>\r\n\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AtendimentoEspecialista;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    backgroundColor: '#ffff',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 50, // Ajuste este valor conforme necessário\r\n  },\r\n  header: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 4,\r\n  },\r\n  headerBtn: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    marginTop: 10,\r\n  },\r\n  btn: {\r\n    width: '33,3%',\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    fontSize: 22\r\n  },\r\n  logo: {\r\n    //resizeMode:'contain',\r\n    width: 100,\r\n    height: 100,\r\n    position: \"absolute\",\r\n    justifyContent: 'flex-start',\r\n    alignContent: 'flex-start',\r\n    left: '9%',\r\n    marginTop: -15\r\n  },\r\n  logo2: {\r\n    //resizeMode:'contain',\r\n    width: 100,\r\n    height: 100,\r\n    position: \"absolute\",\r\n    justifyContent: 'flex-start',\r\n    alignContent: 'flex-start',\r\n    left: '15%',\r\n    marginTop: -15\r\n\r\n  },\r\n\r\n});","import moment from 'moment';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, Button, Image } from 'react-native';\r\nimport { MaterialIcons,Feather  } from '@expo/vector-icons'; \r\nimport axios from 'axios';\r\nimport util from '../util/util';\r\n\r\n\r\nconst Reagendar = ({ dataSelecionada, horarioSelecionada, id, id_especialista, servicoId, email}) => {\r\n\r\n//const { selectedDate, selectedHorario } = route.params;\r\n\r\nconst [selectedDate, setSelectedDate] = useState();\r\nconst [selectedHorario, setSelectedHorario] = useState();\r\nconst [name, setName] = useState();\r\n//const [email, setEmail] = useState();\r\nconst [setor, setSetor] = useState();\r\nconst [telefone, setTelefone] = useState();\r\n\r\nconst queryString = window.location.search;\r\n\r\n  // Cria um objeto URLSearchParams a partir da string de consulta\r\n  const params = new URLSearchParams(queryString);\r\n  \r\n  // Obtém os valores dos parâmetros\r\n  const param1 = params.get('param1');\r\n\r\nuseEffect(() => {\r\n    setSelectedDate(dataSelecionada);\r\n    setSelectedHorario(horarioSelecionada);\r\n  }, []);\r\n\r\n  const dataCombinada = moment(selectedDate).format('YYYY-MM-DD') + ' ' + selectedHorario;\r\n  const dataFormatada = moment(dataCombinada, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DD HH:mm');\r\n\r\n\r\n\r\n async function agendar() {\r\n    const dados ={\r\n        \"id\": id,\r\n        \"data\": selectedDate,\r\n        \"email\":email,\r\n        \"nome\": name,\r\n        \"hora\": dataFormatada,\r\n        \"setor\": setor,\r\n        \"telefone\": telefone,\r\n        \"id_especialista\":id_especialista,\r\n        \"servicoId\": servicoId\r\n }\r\n   try{\r\n   const response = await axios.put(util.urlReagendamento + id, dados)\r\n    //console.log(response)\r\n   \r\n  alert(`Você está agendando para ${name}, dia ${selectedDate}. Horário: ${selectedHorario} no email: ${email}`)\r\n   \r\n  }\r\n  catch(err){\r\n    console.error('Erro ao tentar realizar o cadastro')\r\n    throw err\r\n    //alert(\"Não foi possível fazer a reserva\")\r\n  \r\n  }\r\n}\r\nfunction Validation(tel){\r\n\r\n  const telLimpo = tel.replace(/\\D/g, '');\r\n  if(!/^\\d{11}/.test(telLimpo)){\r\n      console.log('invalidado', telLimpo)\r\n      }\r\n      else{\r\n        console.log('validado', telLimpo)\r\n        setTelefone(telLimpo)\r\n      }\r\n}\r\n\r\nfunction handleTelefone(tex){\r\n // setTelefone(tex)\r\n  Validation(tex)\r\n}\r\n\r\nfunction voltar() {\r\n  navigation.navigate(servicoId);\r\n  setSelectedDate('');\r\n  setSelectedHorario('');\r\n}\r\nfunction handleSelectChange(event){\r\n  const selectedValue = event.target.value;\r\n  setSetor(selectedValue)\r\n}\r\n\r\n  return (\r\n    <View style={{justifyContent: 'center', alignItems: 'center', flex:1, backgroundColor: '#4B4544'}}>\r\n      <View style={styles.container}>\r\n        <View style={styles.containerGrid}>\r\n        <View style={styles.containerInfo}>\r\n          <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n                   \r\n          <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />{servicoId || param1}</Text>\r\n         \r\n          \r\n          </View>\r\n            <View style={{justifyContent:  'center'}} aria-valuetext='image'>\r\n                      <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{width: 250, height: 250, alignItems: 'center', marginTop: 15}}/> \r\n\r\n            </View>\r\n\r\n        </View>\r\n        \r\n       <View style={styles.containerInput}>\r\n            <Text style={styles.inputBtn}>Data:</Text>\r\n            <TextInput\r\n            nativeID='diaSelecionado'\r\n            style={styles.input}\r\n            onChangeText={(text) => setSelectedDate(text)}\r\n            defaultValue={selectedDate}\r\n            editable={false}/>\r\n            <Text style={styles.inputBtn}>Horario:</Text>\r\n            <TextInput\r\n             nativeID='horarioSelecionado'\r\n            style={styles.input}\r\n            onChangeText={(text) => setSelectedHorario(text)}\r\n            defaultValue={selectedHorario}\r\n            editable={false}/>\r\n             <Text style={styles.inputBtn}>Nome:</Text>\r\n            <TextInput\r\n             nativeID='nome'\r\n            \r\n            style={styles.input}\r\n            onChangeText={(text) => setName(text)}\r\n            />\r\n\r\n            <Text style={styles.inputBtn}>E-mail:</Text>\r\n            <TextInput\r\n             nativeID='email'\r\n            style={styles.input}\r\n            value = {email}\r\n            //onChangeText={(text) => setEmail(text)}\r\n            />\r\n            <Text style={styles.inputBtn}>Telefone:</Text>\r\n            <TextInput\r\n             nativeID='telefone'\r\n            style={styles.input}\r\n            onChangeText={(text) => handleTelefone(text)}\r\n            />\r\n            <Text style={styles.inputBtn}>Setor:</Text>\r\n            <select name='Seleção-setor'style={styles.input} required onChange={(event) => handleSelectChange(event)}>\r\n                    <option value='ADM' style={{color: 'black'}}>ADM</option>\r\n                    <option value='Operacional' style={{color: 'black'}}>Operacional</option>\r\n            </select>\r\n          <View style={styles.button}>\r\n\r\n            <Button title='agendar' accessibilityLabel='agendar' color={'orange'}  onPress={() => agendar()} />\r\n            <Button title='Voltar' accessibilityLabel='voltar'  color={'orange'} onPress={() => voltar()}/>\r\n            \r\n          </View>\r\n           \r\n\r\n       </View>\r\n           \r\n\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#e77825',\r\n    width: '60%',\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    margin: 30,\r\n    flexDirection: 'column',\r\n  }, \r\n  containerGrid: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#090707',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    width: '98%',\r\n    height: '98%',\r\n    //maxWidth: 800,\r\n  \r\n    \r\n  },\r\ntextDate: {\r\n  fontSize: 22,\r\n  fontWeight: 'bold',\r\n  color: 'white',\r\n  alignItems: 'center',\r\n  height: 50,\r\n  textAlign: 'center'\r\n},\r\ntextDateh: {\r\n  fontSize: 15,\r\n  color: 'white',\r\n  marginTop: 10\r\n},\r\ncontainerInput: {\r\nflex: 1,\r\nalignItems: 'center',\r\nflexWrap: 'wrap-reverse',\r\n},\r\ninputBtn:{\r\ncolor: 'white',\r\nflexDirection:'row'\r\n},\r\ncontainerInfo: {\r\n        alignItems: 'center',\r\n        padding: 50,\r\n        marginBottom: 10,\r\n        borderRightColor: 'white',\r\n        borderRightWidth: 1,\r\n        width: 350\r\n      },\r\n input: {\r\n    height: 50,\r\n    borderColor: '#7159c1',\r\n    borderWidth: 3,\r\n    borderRadius: 8,\r\n    backgroundColor: '#fff',\r\n    marginVertical: 8,\r\n    paddingHorizontal: 16,\r\n    \r\n    \r\n\r\n  },\r\n  button: {\r\n    alignSelf: \"center\",\r\n    justifyContent:\"space-between\",\r\n    flexDirection: 'row',\r\n    padding:10,\r\n    marginRight: 5\r\n\r\n  }\r\n});\r\n\r\nexport default Reagendar;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Text, View, StyleSheet,Image, Button,ActivityIndicator, TouchableOpacity, Pressable, Alert } from 'react-native';\r\nimport moment from 'moment/moment';\r\nimport {Calendar,LocaleConfig} from 'react-native-calendars';\r\nimport axios from  'axios';\r\nimport { MaterialIcons,Feather  } from '@expo/vector-icons'; \r\nimport { ScrollView } from 'react-native-web';\r\nimport {  useNavigation } from '@react-navigation/native';\r\nimport Reagendar from '../screensUsers/Reagendamento';\r\nimport util from '../util/util';\r\nimport styleWebMobile from '../style';\r\nimport styleWebMobileUsers from '../styleUsers';\r\nimport { Dimensions } from 'react-native';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Reagendamento =   ({data, horario , id, id_especialista, servicoId, email}) => {\r\n\r\n  const [date, setDate] = useState(new Date())\r\n  const [markedDates, setMarkedDates] = useState({});\r\n  const [hora, setHorario] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedHorario, setselectedHorario] = useState();\r\n  const [setdados, setDados] = useState();\r\n  const [dados, setDatas] = useState([]);\r\n  const [horaa, sethoraa] = useState([]);\r\n  const [navegar, setNavegar] = useState();\r\n  const [showCalendar, setshowCalendar] = useState(true);\r\n  const [showHorarios, setshowHorarios] = useState(false);\r\n\r\n  const navigation = useNavigation();\r\n\r\n // console.log(servicoId)\r\n\r\n    const fetchApi = async () => {\r\n        const especialidade = id_especialista;\r\n       // const servicoId = servicoid;\r\n        const dataApi = new Date();\r\n    \r\n        const dados = {\r\n          dataApi,\r\n          especialidade,\r\n          servicoId\r\n        };\r\n       // console.log(dados)\r\n               \r\n  try{\r\n    \r\n    \r\n    const response = await axios.post(util.urlHorariosDisponiveis, dados);\r\n    const diasSemanaDisponiveis = response.data.agenda || [];\r\n   \r\n    setHorario(diasSemanaDisponiveis)\r\n    // Atualize as marcações de datas\r\n    const marked = {};\r\n    diasSemanaDisponiveis.forEach((dia) => {\r\n      marked[dia.data[0]] = { selected: true, selectedColor: '#e77825' };\r\n    });\r\n\r\n    setMarkedDates(marked);\r\n    setshowCalendar(true)\r\n    setIsLoading(false);\r\n  }\r\n  catch (erro){\r\n    console.warn('Não foi possível buscar os dados da API');\r\n    alert('Não foi possível buscar os dados da API');\r\n   refrestPage()\r\n  }\r\n  \r\n  }; \r\n \r\n  \r\n    useEffect(() => {\r\n    setIsLoading(true);\r\n    //fetchApiReagendar();\r\n    fetchApi();\r\n      \r\n    }, []);\r\n  \r\n  \r\n\r\n  function CompCalendario() {\r\n\r\n    LocaleConfig.locales['pt-br'] = {\r\n      monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n  \r\n      monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n      dayNames: [\r\n  \r\n        'Domingo',\r\n        'Segunda-feira',\r\n        'Terça-feira',\r\n        'Quarta-feira',\r\n        'Quinta-feira',\r\n        'Sexta-feira',\r\n        'Sábado'\r\n  \r\n      ],\r\n      dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\r\n      today: 'Hoje',\r\n    }\r\n  \r\n    LocaleConfig.defaultLocale='pt-br';\r\n\r\n    // Dia pressionado\r\n   const handleDayPress = (day) => {\r\n      setSelectedDate(day.dateString);\r\n      \r\n    const horarioSelecionado = hora.find(\r\n        (horario) => horario.data.toString() === day.dateString\r\n      );\r\n\r\n  if(horarioSelecionado){\r\n    const horariosDisponiveis =  horarioSelecionado.horariosLivres;\r\n   \r\n    sethoraa(horariosDisponiveis)\r\n     \r\n}\r\n\r\nsetselectedHorario('')\r\n}\r\n     \r\n  \r\n    return (\r\n      <View>\r\n        {isLoading ? (\r\n          <ActivityIndicator size=\"large\" color=\"blue\" />\r\n        ) : (\r\n          <>\r\n            <Calendar\r\n            style={styles.Calendar}\r\n               onDayPress={handleDayPress}\r\n              markedDates={{\r\n                ...markedDates,\r\n                [selectedDate]: { selected: true, selectedColor: 'orange' },\r\n                \r\n              }}\r\n              theme={{\r\n                backgroundColor: 'white',\r\n                calendarBackground: 'black',\r\n               // todayBackgroundColor: 'orange',\r\n                textSectionTitleColor: 'white',\r\n                selectedDayBackgroundColor: 'white',\r\n                selectedDayTextColor: 'white',\r\n                todayTextColor: 'white',\r\n                dayTextColor: 'white',\r\n                textDisabledColor: 'gray',\r\n                arrowHeight: 20,\r\n                monthTextColor: 'white',\r\n                 arrowWidth: 20,\r\n                arrowColor: 'white',\r\n                arrowsHitSlop: 20,\r\n                textMonthFontSize: 20,\r\n                textDayHeaderFontSize: 14,\r\n                \r\n               // contentStyle: styles.containerDate\r\n              }}\r\n              minDate= {moment().format('YYYY-MM-DD')}\r\n              disabledByDefault={true}\r\n            />\r\n          </>\r\n        )\r\n       }\r\n      </View>\r\n        )\r\n        \r\n  }\r\n\r\n  //Selecionar horario disponivel\r\n\r\n  function handleHorarioSelecionado(event, horarios) {\r\n    console.log('Horário selecionado:', horarios);\r\n    setselectedHorario(horarios)\r\n    \r\n    \r\n  }\r\n\r\n  // Navegar para tela forms\r\n\r\n  function agendar(tela) {\r\n   setNavegar(tela)\r\n   \r\n  }\r\n  const dataHoje = moment(data).format('DD/MM/YYYY')\r\n  const dataHojeHoras = moment(horario).format('HH:mm')\r\n\r\n\r\n    //navegação para telas\r\n  \r\n  if(navegar) {    \r\n    return (\r\n      <View>\r\n    <Reagendar  dataSelecionada= {selectedDate} horarioSelecionada= {selectedHorario} id={id} id_especialista={id_especialista} servicoId={servicoId} email={email}/>\r\n\r\n      </View>\r\n  )\r\n  }\r\n  const width = Dimensions.get('window').width\r\n  //setDimension(width)\r\n//console.log(width)\r\n  if (width > 800) {\r\n\r\n  return (\r\n    <>\r\n    <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n      <View style={styles.container}>\r\n        <View style={styles.containerGrid}>\r\n          <View style={styles.containerInfo}>\r\n            <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n              \r\n            <Text style={styles.textDate}>Data agendada: {dataHoje}</Text>\r\n            <Text style={styles.textDate}>Hora agendada: {dataHojeHoras}</Text>\r\n            \r\n            <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Psicologa Matriz</Text>\r\n          \r\n            <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>1h</Text>\r\n            \r\n            </View>\r\n            <View style={{justifyContent:  'center'}} aria-valuetext='image'>\r\n                      <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{width: 250, height: 250, alignItems: 'center', marginTop: 15}}/> \r\n\r\n            </View>\r\n\r\n          </View>\r\n                <View style={{flexDirection: 'column', justifyContent:'center'}}>\r\n                    <Text style={styles.textDate}\r\n                            >Escolha uma data e horário</Text>\r\n                  <View style={styles.containerDate}>\r\n                  <CompCalendario />\r\n                  \r\n                      <View style={styles.containerHorario}>\r\n                        <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                        <View style={styles.containerHorariosDisponiveis}>\r\n                            <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                      \r\n                              { hora ? horaa.map((horario, indice1) => {\r\n                                return(\r\n                                \r\n                                horario.map((horarios, indice2) => {\r\n                                          \r\n                                  if(selectedHorario === horarios){\r\n                                    if(selectedDate === dataHoje && horarios < dataHoje){\r\n                                      alert('HORARIO INDISPONIVEL');\r\n                                    } else{                             \r\n                                      \r\n                                    \r\n                                  return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View style={{padding: 10}}>\r\n                                      <TouchableOpacity \r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorario}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    \r\n                                    </TouchableOpacity>\r\n                                      \r\n                                      </View>\r\n                                      <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n\r\n                                  </View>\r\n                                \r\n                                );}}else{\r\n                                \r\n                                  return(\r\n                                    \r\n                                    <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                        <View>\r\n\r\n                                        <TouchableOpacity\r\n                                        onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                        style={styles.btnHorario}\r\n                                      >\r\n                                        <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                      </TouchableOpacity>\r\n                                        </View>\r\n                                    </View>\r\n                                  );\r\n                                }\r\n                                \r\n                              \r\n                              })); \r\n                            })\r\n                            : \r\n                            <ActivityIndicator size={30} color={'blue'}/> \r\n                            }\r\n                        </View>\r\n                        </ScrollView> \r\n                      </View>\r\n                      \r\n                  </View>\r\n                </View>\r\n        </View>\r\n\r\n      \r\n      </View>\r\n  </View>\r\n  </>\r\n  \r\n  )}\r\n  else{\r\n    return(\r\n      <>\r\n     <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n      <View style={styles.containerM}>\r\n          <View style={styles.containerGridM}>\r\n            <View style={styles.containerInfoM}>\r\n              <Text style={styles.textDate}>Data: {dataHoje}</Text>\r\n              \r\n              <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Massoterapeuta Matriz</Text>\r\n            \r\n              <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>20 min</Text>\r\n            \r\n            </View>\r\n            {/* Calendário!! */}\r\n            {\r\n              showCalendar? \r\n            <View style={styles.Calendar}>\r\n\r\n            <CompCalendario/>\r\n            </View>\r\n              : null\r\n\r\n            }\r\n\r\n            {/* Horarios*/}\r\n            {\r\n              showHorarios? \r\n              <View style={styles.containerGridsM}>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>   \r\n                 <Text style={styles.textDate}>Data Selecionada: {selectedDate}</Text>\r\n                 <View style={{alignContent: 'flex-start', alignItems: 'flex-start'}}>\r\n                        <TouchableOpacity  onPress={() => {setshowHorarios(false), setshowCalendar(true), setSelectedDate('')}}><Ionicons name=\"ios-arrow-back\" size={24} color=\"white\"  /></TouchableOpacity>\r\n\r\n                  </View>\r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                       \r\n\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n        \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorarioM}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorarioM}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n        \r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n        \r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorarioM}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n              : null\r\n            }\r\n           \r\n           \r\n\r\n          </View>\r\n\r\n        </View>\r\n    </View>\r\n    \r\n      </>\r\n    )\r\n  }};\r\n  \r\n \r\nconst styles = styleWebMobile;\r\n/*\r\nStyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#e77825',\r\n    width: '60%',\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    margin: 30,\r\n    flexDirection: 'column',\r\n  }, \r\n  containerGrid: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#090707',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    width: '98%',\r\n    height: '98%',\r\n  \r\n    \r\n  },\r\nCalendar: {\r\n  flex: 1,\r\n  justifyContent:  'center',\r\n  width: 300\r\n\r\n\r\n},\r\ncontainerDate: {\r\n  marginRight: 10,\r\n  width:500,\r\n  height: 500,\r\n  alignItems: 'center',\r\n  justifyContent: 'space-evenly',\r\n  borderRadius: 1,\r\n  flexDirection: 'row'\r\n},\r\ncontainerInfo: {\r\n  alignItems: 'center',\r\n  padding: 50,\r\n  marginBottom: 10,\r\n  borderRightColor: 'white',\r\n  borderRightWidth: 1,\r\n  width: 350\r\n},\r\n\r\ncontainerHeaderCalendario: {\r\n  flex: 1,\r\n  flexDirection: 'row',\r\n  alignItems: 'flex-start',\r\n  justifyContent: 'center',\r\n  height: 100,\r\n} ,\r\ntextDate: {\r\n  fontSize: 22,\r\n  fontWeight: 'bold',\r\n  color: 'white',\r\n  alignItems: 'center',\r\n  height: 50,\r\n  textAlign: 'center'\r\n},\r\ntextDateh: {\r\n  fontSize: 15,\r\n  color: 'white',\r\n  marginTop: 10\r\n},\r\ncontainerHorario: {\r\n  alignItems: 'center',\r\n  maxHeight: 350,\r\n \r\n\r\n},\r\nScrollContainer: {\r\n  paddingVertical: 20,\r\n  color: 'black',\r\n\r\n},\r\ncontainerHorariosDisponiveis: {\r\n  flexDirection: 'column',\r\n  flexWrap: 'wrap',\r\n},\r\nhorarioContainer: {\r\n  marginRight: 10,\r\n  marginBottom: 10,\r\n  alignItems: 'center',\r\n  \r\n\r\n},\r\nbtnHorario: {\r\n  fontFamily: 'sans-serif',\r\n  color: 'white',\r\n  padding: 6,\r\n  borderColor: '#e77825',\r\n  borderWidth: 1\r\n\r\n},\r\n\r\nheading: {\r\n  fontSize: 20,\r\n  textAlign: 'center',\r\n  margin: 10,\r\n  color: 'white'\r\n  \r\n\r\n},\r\ndatas: {\r\n    color: 'blue'\r\n  },\r\n\r\n  horarios: {\r\n  color: 'black',\r\n  fontSize: 20,\r\n  borderWidth: 1,\r\n  borderColor: 'blue',\r\n  padding: 20,\r\n  marginBottom: 5,\r\n  textAlign: 'center',\r\n  flexDirection: 'column',\r\n  },\r\n  containerHorarios: {\r\n    width: '100%',\r\n    color: 'black',\r\n    fontSize: 20,\r\n    padding: 20,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    fontWeight: 'bold',\r\n    flexWrap: 'wrap',\r\n    flex:1,\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n   \r\n\r\n  },\r\n\r\n  textHorariosSelecionado: {\r\n  borderWidth: 1,\r\n  borderColor: 'black',\r\n  padding: 20,\r\n  marginBottom: 5,\r\n  textAlign: 'center',\r\n\r\n  },\r\n  textHorarios: {\r\n  borderWidth: 1,\r\n  borderColor: 'blue',\r\n  padding: 20,\r\n  marginBottom: 5,\r\n  textAlign: 'center',   \r\n    \r\n  },\r\n  containerButton: {\r\n  marginTop: 20,\r\n  alignItems: 'center',\r\n  },\r\n  });\r\n*/\r\nexport default Reagendamento;\r\n","import {View, TouchableOpacity, Text,Image, StyleSheet,ScrollView, Pressable, Button, ActivityIndicator} from 'react-native';\r\nimport { useState, useEffect } from 'react';\r\nimport TelaPsicologa from './psicologa';\r\nimport AtendimentoEspecialista from \"./GerenciamentoAtendimento\";\r\nimport Reagendamento from '../../components/reagendar';\r\nimport { Feather,FontAwesome,FontAwesome5, MaterialCommunityIcons  } from '@expo/vector-icons'; \r\nimport UserIcon from '../../components/iconUsers';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport util from '../../util/util';\r\nimport LogoMundial from '../../components/logosMundial';\r\nimport styleWebMobileUsers from '../../styleUsers';\r\nimport { Dimensions } from 'react-native';\r\n\r\n\r\nconst Telahistorico = () => {\r\n\r\n  const [exibirTela, setexibirTela] = useState(false);\r\n  const [navegacao, setnavegacao] = useState();\r\n  const [dados, setDados] = useState([]);\r\n  const [pageAtual, setPageAtual] = useState(1);\r\n  const [reAgendar, setReagendar] = useState();\r\n\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const dadosArmazenados = sessionStorage.getItem('dados');\r\n  const dadosLogados = JSON.parse(dadosArmazenados);\r\n\r\n  const headers ={\r\n    headers: {\r\n    'authorization': `Bearer ${dadosLogados.token}`\r\n  }\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  useEffect(() => {  \r\n\r\n    async function fetchApi () {\r\n\r\n      try {\r\n        const response = await axios.get(util.urlGEThistorico+ dadosLogados.especialidade+ '/' + dadosLogados.user,\r\n           headers\r\n        \r\n        );\r\n        setDados(response.data)\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert('erro ao buscar informações, faça o login novamente')\r\n     }\r\n    }\r\n    fetchApi();\r\n  }, []);\r\n\r\n//Config navegação \r\nfunction Navegar(tela){\r\n\r\n\r\n  \r\n      navigation.navigate(tela)\r\n\r\n\r\n}\r\n\r\nconst handleTelaPsicologa =  (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n   setexibirTela(true)\r\n  \r\n  \r\n  }\r\n  const handleTelaHistórico = (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n    setexibirTela(true)\r\n\r\n}\r\nconst handleTelaDisponibilidade = (event) => {\r\n    // console.log(event)\r\n     setnavegacao(event)\r\n     setexibirTela(true)\r\n     }\r\n\r\nif(exibirTela && navegacao === 'UserPsicologa'){\r\n  return(\r\n      <View>\r\n          <TelaPsicologa />\r\n      </View>\r\n  )\r\n} if(exibirTela && navegacao === 'Tela Historico'){\r\n  return(\r\n    <View>\r\n        <Telahistorico/>\r\n      </View>\r\n  )\r\n}else if(exibirTela && navegacao === 'Atendimento Especialista'){\r\n    return(\r\n         <View>\r\n        <AtendimentoEspecialista/>\r\n        </View>\r\n        )\r\n  }\r\n  else if (exibirTela && navegacao === 'reagendar') {\r\n    return (\r\n      <View>\r\n        <Reagendamento data={reAgendar.data} horario={reAgendar.hora} id={reAgendar.id} id_especialista={reAgendar.id_especialista} servicoId={reAgendar.servicoId} email={reAgendar.email} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  // exporar dados execel\r\n\r\n\r\n  function filtroDataRecente(itens, pageAtual, limitador){\r\n    // let data = moment().format('DD/MM/YYYY')\r\n     let result = [];\r\n   \r\n     itens.sort((a, b) => moment(b.data).diff(moment(a.data)));\r\n   \r\n     let totalPage = Math.ceil(pageAtual * limitador /  pageAtual);\r\n   \r\n     let count = ( pageAtual * limitador) - limitador;\r\n   \r\n     let delimitador = count + limitador\r\n   \r\n   \r\n     if (pageAtual <= totalPage){\r\n       for (let i=count ;i<delimitador;i++){\r\n         if (itens[i] != null){\r\n           //result.push(<Agenda key={i+1}/>)\r\n           result.push(itens[i]);\r\n   }\r\n     count++;\r\n   }\r\n   \r\n   return {\r\n     resultado: result,\r\n    totalPages: totalPage\r\n   };\r\n   }\r\n   \r\n   }\r\n    const limitador = 10\r\n   \r\n   \r\n   function nextPreviuos(value){\r\n    // console.log(value)\r\n     let NovapageAtual = pageAtual + value;\r\n   \r\n     if (NovapageAtual > 0 && NovapageAtual <= Math.ceil(dados.length / limitador)){\r\n       setPageAtual(NovapageAtual)\r\n     }\r\n   }\r\n\r\n   //dados filtrados e ordenados pelo mais recente\r\n   const {resultado, totalPages} = filtroDataRecente(dados,pageAtual,limitador);\r\n\r\n   async function exportToExcel() {\r\n    try {\r\n      if (resultado.length === 0) {\r\n        console.log('Não há dados para exportar para o Excel.');\r\n        return;\r\n      }\r\n  \r\n      await util.ExportToExcel('historico',resultado);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //console.log(resultado)\r\n  function reagendar(event, tela) {\r\n    alert('Tem certeza que deseja reagendar?')\r\n    setReagendar(event)\r\n    setnavegacao(tela)\r\n    setexibirTela(true)\r\n  }\r\n  \r\n  const width = Dimensions.get('window').width\r\n\r\n // console.log(width)\r\n   const Card = ({ title, description }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    let comp = description.comparecimento === true ? 'SIM' : 'NÃO CONFIRMADO';\r\n    const styleM = width < 800 ? styles.infoContainerM : styles.infoContainer\r\n\r\n   //console.log(styleM)\r\n  \r\n    const handleCardPress = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n    if(!title && !description){\r\n        return(<>\r\n        <ActivityIndicator size={100}  />\r\n        <Text>Nenhum agendamento pendente</Text>\r\n        </>);\r\n      }\r\n  \r\n    return (\r\n      \r\n      <Pressable onPress={handleCardPress} id='card'>\r\n          <View style={styles.cardContainer}>\r\n            <Text style={styles.title}>{title}</Text>\r\n            {expanded && \r\n              <View style={styles.descriptionContainer}>\r\n                <View style={styleM}>                \r\n                    <View style={styles.infoAgendas}>\r\n                      <Text style={styles.label}><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Horario:</Text> {moment(description.hora).format('HH:mm')}</Text>\r\n                      <Text style={styles.label}><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Nome:</Text> {description.nome}</Text>\r\n                      <Text style={styles.label} ><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Email:</Text> {description.email}</Text>\r\n                      <Text style={styles.label} ><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Telefone:</Text> {description.telefone}</Text>                      \r\n                      <Text style={styles.label} ><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Setor:</Text> {description.setor}</Text>\r\n                      <Text style={styles.label} ><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Comparecimento:</Text> {comp}</Text>\r\n                    </View> \r\n\r\n                    <TouchableOpacity id='#2' onPress={() => reagendar(description, 'reagendar')} style={{\r\n                    borderWidth: 1,\r\n                    height: 50,\r\n                    borderColor: '#000',\r\n                    borderRadius: 30,\r\n                    padding: 10,\r\n                    alignItems: 'center',\r\n  \r\n                  }}>\r\n                    <Text style={{ fontFamily: 'Harabara', fontSize: 20 }}>\r\n                      <FontAwesome name=\"send-o\" size={24} color=\"black\" />\r\n                      Reagendar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>                                 \r\n              </View>\r\n            }\r\n            \r\n          </View>\r\n    </Pressable> \r\n    \r\n    );\r\n  \r\n  };\r\n  \r\n\r\n  if(dados.length > 0){\r\n\r\n    return (\r\n      <View style={{justifyContent:'center'}}>\r\n      <View style={[styles.header, {justifyContent: 'center' }]}>\r\n        <View style={{left: '33%'}}>\r\n        <UserIcon/>\r\n\r\n        </View>\r\n\r\n        <LogoMundial/>\r\n     \r\n        <View style={styles.headerBtn}>\r\n        <TouchableOpacity id='menu' style={styles.btn} onPress={() =>handleTelaPsicologa(\"UserPsicologa\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Pendentes</Text>\r\n          </TouchableOpacity>\r\n        <TouchableOpacity id='menu' style={styles.btn} onPress={() => handleTelaHistórico(\"Tela Historico\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Histórico</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity id='menu' style={styles.btn} onPress={() => handleTelaDisponibilidade(\"Atendimento Especialista\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Disponibilidade</Text>\r\n          </TouchableOpacity>\r\n          \r\n        </View>\r\n      </View>\r\n          <View style={{backgroundColor: '#eeeeec'}}>\r\n\r\n            <Button onPress={exportToExcel} title='exportar' color={'green'} />\r\n          <ScrollView>\r\n        <View style={styles.grid}>\r\n          {resultado.map((agendamento) => (\r\n\r\n            <View key={agendamento.id} style={styles.card}>\r\n                        <Card   title={moment(agendamento.data).format('DD/MM/YYYY')} description={agendamento}></Card>\r\n            \r\n\r\n            </View>\r\n          ))}\r\n         <View style={{flexDirection: 'row', justifyContent:'flex-end', alignItems:'flex-end'}}>\r\n\r\n          <TouchableOpacity id='menu' style={styles.btnNextPrev} onPress={() => nextPreviuos(1)}>\r\n            <MaterialCommunityIcons name=\"page-next\" size={24} color=\"black\" /><Text>Próxima</Text></TouchableOpacity>\r\n          <TouchableOpacity id='menu' style={styles.btnNextPrev} onPress={() => nextPreviuos(-1)}>\r\n            <MaterialCommunityIcons name=\"page-previous\" size={24} color=\"black\" /><Text>Anteriror</Text></TouchableOpacity>\r\n\r\n          </View>\r\n        </View>\r\n    </ScrollView>\r\n          </View>\r\n    </View>\r\n    )\r\n} else{\r\n  return (\r\n    <View style={{justifyContent:'center',backgroundColor: '#eeeeec'}}>\r\n    <View style={[styles.header, {justifyContent: 'center' }]}>\r\n      <View style={{left: '33%'}}>\r\n      <UserIcon/>\r\n     \r\n      </View>\r\n      \r\n      <LogoMundial/>\r\n      <View style={styles.headerBtn}>\r\n        <TouchableOpacity style={styles.btn} onPress={() =>handleTelaPsicologa(\"UserPsicologa\")}>\r\n          <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Pendentes</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.btn} onPress={() => handleTelaHistórico(\"Tela Historico\")}>\r\n          <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Histórico</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.btn} onPress={() => handleTelaDisponibilidade(\"Atendimento Especialista\")}>\r\n          <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Disponibilidade</Text>\r\n        </TouchableOpacity>\r\n        \r\n      </View>\r\n    </View>\r\n    <Text style={{textAlign: 'center', fontSize: 50,alignItems: 'center'}}>Nenhum agendamento pendente....</Text>\r\n    <TouchableOpacity style={{textAlign: 'center', fontSize: 50,alignItems: 'center'}} onPress={() => window.location.reload()}>\r\n      <Text style={{textAlign: 'center', fontSize: 25,alignItems: 'center', marginTop: 30}}>Caso tenha algum agendamento, atualize a página clicando aqui!! </Text>\r\n    </TouchableOpacity>\r\n   \r\n   </View>\r\n   \r\n     )\r\n\r\n}\r\n\r\n}\r\n\r\nconst styles = styleWebMobileUsers;\r\n/*\r\nStyleSheet.create({\r\n    container:\r\n    {       \r\n      width: '100%',\r\n      backgroundColor: '#ffff',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: 50,\r\n },\r\n    header: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: 20,\r\n      backgroundColor: 'white',\r\n      borderRadius: 4,\r\n    },\r\n    headerBtn: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-around',\r\n      alignItems: 'center',\r\n      flexWrap: 'wrap',\r\n      marginTop: 10,\r\n    },\r\n    btn: {\r\n      width: '33,3%',\r\n      height: 50,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: 15,\r\n      marginBottom: 10,\r\n    },\r\n    logo: {\r\n      //resizeMode:'contain',\r\n      width: 100,\r\n      height: 100,\r\n      position: \"absolute\",\r\n      justifyContent: 'flex-start',\r\n      alignContent: 'flex-start',\r\n      left: '50%',\r\n      marginTop: -15\r\n},\r\nlogo2: {\r\n  //resizeMode:'contain',\r\n  width: 100,\r\n  height: 100,\r\n  position: \"absolute\",\r\n  justifyContent: 'flex-start',\r\n  alignContent: 'flex-start',\r\n  left: '15%',\r\n    marginTop: -15\r\n  \r\n},\r\n    btnNextPrev:{\r\n      flex: 1,\r\n      justifyContent:\"space-evenly\",\r\n      alignItems: 'center',\r\n      maxWidth: 75,\r\n      \r\n    },\r\n    grid: {\r\n    \r\n      width:'100%',\r\n      maxWidth:900,\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-between',\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: 'white',\r\n      padding: 20,\r\n      borderRadius: 20,\r\n      marginTop: 10,\r\n      \r\n      },\r\n      infoContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n      },\r\n      label: {\r\n       \r\n        marginRight: 5,\r\n      },\r\n      \r\n  card: {\r\n    margin: 5,\r\n    backgroundColor: 'white',\r\n    \r\n      },\r\n  item: {\r\n    width: '100%',\r\n    height: 80,\r\n  backgroundColor: '#f9c2ff',\r\n          marginVertical: 8,\r\n          marginHorizontal: 16,\r\n          flexDirection: 'row',\r\n        },\r\n  cardContainer: {\r\n          borderWidth: 1,\r\n          borderColor: '#e77825',\r\n          padding: 10,\r\n          marginBottom: 10,\r\n          borderRadius: 15,\r\n         \r\n        },\r\n  descriptionContainer: {\r\n          flexDirection: 'row',\r\n          padding: 20,\r\n          margin: 10,\r\n  \r\n        },\r\n  title: {\r\n          fontSize: 18,\r\n          fontWeight: 'bold',\r\n          marginBottom: 5,\r\n        },\r\n  description: {\r\n          fontSize: 14,\r\n          color: 'gray',\r\n          flexWrap: 'wrap',\r\n          padding: 5\r\n         \r\n        },\r\n  text: {\r\n    fontSize: 18,\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    justifyContent:  'space-between',\r\n    padding: 20,\r\n  \r\n  }\r\n})*/\r\n\r\nexport default Telahistorico;","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, ActivityIndicator, Button, Dimensions } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment/moment\";\r\nimport { Feather, FontAwesome, FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\r\n//import { Feather,FontAwesome,FontAwesome5  } from '@expo/vector-icons'; \r\nimport UserIcon from \"../../components/iconUsers\";\r\nimport Telahistorico from \"./historico\";\r\nimport AtendimentoEspecialista from \"./GerenciamentoAtendimento\";\r\nimport util, { urlPUTcomparecimento } from \"../../util/util\";\r\nimport Reagendamento from \"../../components/reagendar\";\r\nimport LogoMundial from \"../../components/logosMundial\";\r\nimport styleWebMobileUsers from \"../../styleUsers\";\r\nimport styleWebMobile from \"../../style\";\r\n\r\nconst TelaPsicologa = ({ navigation }) => {\r\n  const [dados, setDados] = useState([]);\r\n  const [exibirTela, setexibirTela] = useState(false);\r\n  const [navegacao, setnavegacao] = useState();\r\n  const [pageAtual, setPageAtual] = useState(1);\r\n  const [pageTotal, setPageTotal] = useState(1);\r\n  const [reAgendar, setReagendar] = useState();\r\n\r\n  const dadosArmazenados = sessionStorage.getItem('dados');\r\n  const dadosLogados = JSON.parse(dadosArmazenados);\r\n  //console.log(dadosLogados)\r\n\r\n  // console.log(dadosLogados.match())\r\n  //console.log(\"Token:\",Asyncstorage.getItem('token'))\r\n  //console.log(`Nome do usuario logado ${JSON.parse(dadosLogados[\r\n\r\n\r\n\r\n  const headers = {\r\n    headers: {\r\n      'authorization': `Bearer ${dadosLogados.token}`\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(util.urlGetAgendamento + dadosLogados.especialidade + '/' + dadosLogados.user,\r\n          headers\r\n\r\n        );\r\n        setDados(response.data)\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert('erro ao buscar informações, faça o login novamente')\r\n        navigation.navigate('Login')\r\n\r\n      }\r\n    }\r\n  fetchData();\r\n  }, []);\r\n\r\n\r\n  //console.log(token)\r\n\r\n\r\n\r\n\r\n  //Renderizar tela Psicologa > Pendentes\r\n  const handleTelaPsicologa = (event) => {\r\n\r\n    setnavegacao(event)\r\n    setexibirTela(true)\r\n  }\r\n  const handleTelaHistórico = (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n    setexibirTela(true)\r\n\r\n  }\r\n  const handleTelaDisponibilidade = (event) => {\r\n    // console.log(event)\r\n    setnavegacao(event)\r\n    setexibirTela(true)\r\n  }\r\n\r\n  if (exibirTela && navegacao === 'UserPsicologa') {\r\n    // setexibirTela(false)\r\n    return (\r\n      <View>\r\n        <TelaPsicologa />\r\n      </View>)\r\n  }\r\n  if (exibirTela && navegacao === 'Tela Historico') {\r\n    // setexibirTela(false)\r\n    return (\r\n      <View>\r\n        <Telahistorico />\r\n      </View>)\r\n\r\n\r\n  } else if (exibirTela && navegacao === 'Atendimento Especialista') {\r\n    return (\r\n      <View>\r\n        <AtendimentoEspecialista />\r\n      </View>\r\n    )\r\n  } else if (exibirTela && navegacao === 'reagendar') {\r\n    return (\r\n      <View>\r\n        <Reagendamento data={reAgendar.data} horario={reAgendar.hora} id={reAgendar.id} id_especialista={reAgendar.id_especialista} servicoId={reAgendar.servicoId} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\n  //filter para os agendamentos recente\r\n\r\n  function filtroDataRecente(itens, pageAtual, limitador) {\r\n    // let data = moment().format('DD/MM/YYYY')\r\n    let result = [];\r\n\r\n    itens.sort((a, b) => moment(b.data).diff(moment(a.data)));\r\n\r\n    let totalPage = Math.ceil(pageAtual * limitador / limitador);\r\n\r\n    let count = (pageAtual * limitador) - limitador;\r\n\r\n    let delimitador = count + limitador\r\n\r\n\r\n    if (pageAtual <= totalPage) {\r\n      for (let i = count; i < delimitador; i++) {\r\n        if (itens[i] != null) {\r\n          //result.push(<Agenda key={i+1}/>)\r\n          result.push(itens[i]);\r\n        }\r\n        count++;\r\n      }\r\n\r\n      return {\r\n        resultado: result,\r\n        totalPages: totalPage\r\n      };\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  const limitador = 10\r\n\r\n\r\n  function nextPreviuos(value) {\r\n    // console.log(value)\r\n    let NovapageAtual = pageAtual + value;\r\n\r\n    if (NovapageAtual > 0 && NovapageAtual <= Math.ceil(dados.length / limitador)) {\r\n      setPageAtual(NovapageAtual)\r\n    }\r\n  }\r\n  //dados filtrados e ordenados pelo mais recente\r\n  const { resultado, totalPages } = filtroDataRecente(dados, pageAtual, limitador);\r\n\r\n  async function exportToExcel() {\r\n    try {\r\n      if (resultado.length === 0) {\r\n        console.log('Não há dados para exportar para o Excel.');\r\n        return;\r\n      }\r\n\r\n      await util.ExportToExcel('pendentes', resultado);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //console.log(totalPages)\r\n\r\n  async function cancelarAgenda(event) {\r\n\r\n    await axios.delete(util.urlDeleteAgendamento + event, headers)\r\n      .then((response) => {\r\n        console.log(response)\r\n        alert('Agendamento deletado com sucesso!')\r\n        util.refrestPage();\r\n      })\r\n      .catch(() => alert(\"Erro ao deletar agendamento\"), util.refrestPage())\r\n\r\n\r\n\r\n\r\n  }\r\n  function reagendar(event, tela) {\r\n    alert('Tem certeza que deseja reagendar?')\r\n    setReagendar(event)\r\n    setnavegacao(tela)\r\n    setexibirTela(true)\r\n  }\r\n async function handleComparecimento(comparecimento, v){\r\n    //console.log(comparecimento.target.value)\r\n    //console.log(comparecimento,v)\r\n    alert('confirmar campo de comparecimento?')\r\n\r\n   await axios.put(urlPUTcomparecimento, {\r\n      id: comparecimento.target.value,\r\n      comparecimento: v\r\n    }).then(() => alert('campo de comparecimento atualizado!'), window.location.reload())\r\n    .catch((err) => alert(err))\r\n    \r\n  }\r\n\r\n  const width = Dimensions.get('window').width\r\n\r\n  const Card = ({ title, description }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    let comp = description.comparecimento != 0 || null ? 'SIM' : 'NÃO';\r\n    const styleM = width < 800 ? styles.infoContainerM : styles.infoContainer\r\n    const handleCardPress = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n    if (!title && !description) {\r\n      return (\r\n        <>\r\n          <ActivityIndicator size={100} />\r\n          <Text>Nenhum agendamento pendente</Text>\r\n        </>);\r\n    }\r\n\r\n    if (description.comparecimento != null) {\r\n      return (\r\n\r\n        <TouchableOpacity id='*' onPress={handleCardPress}>\r\n          <View style={styles.cardContainer}>\r\n            <Text style={styles.title1}>{title}</Text>\r\n            {expanded &&\r\n              <View style={styles.descriptionContainer}>\r\n                <View style={styleM}>\r\n  \r\n                  <View style={styles.infoAgendas}>\r\n  \r\n                    <Text style={styles.label}><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Horario:</Text> {moment(description.hora).format('HH:mm')}</Text>\r\n                    <Text style={styles.label}><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Nome:</Text> {description.nome}</Text>\r\n                    <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Email:</Text> {description.email}</Text>\r\n                    <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Telefone:</Text> {description.telefone}</Text>\r\n                    <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Setor:</Text> {description.setor}</Text>\r\n                    <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Comparecimento:</Text> {comp}</Text>\r\n                  </View>\r\n  \r\n  \r\n                  <TouchableOpacity id='#1' onPress={() => cancelarAgenda(description.id)}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: '#000',\r\n                      borderRadius: 30,\r\n                      padding: 10,\r\n                      alignItems: 'center',\r\n                      marginRight: 5,\r\n                    }}>\r\n                    <Text style={{ fontFamily: 'Harabara', fontSize: 20 }} >\r\n                      <Feather name=\"trash-2\" size={24} color=\"black\" />\r\n                      Cancelar\r\n                    </Text>\r\n  \r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity id='#2' onPress={() => reagendar(description, 'reagendar')} style={{\r\n                    borderWidth: 1,\r\n  \r\n                    borderColor: '#000',\r\n                    borderRadius: 30,\r\n                    padding: 10,\r\n                    alignItems: 'center',\r\n  \r\n                  }}>\r\n                    <Text style={{ fontFamily: 'Harabara', fontSize: 20 }}>\r\n                      <FontAwesome name=\"send-o\" size={24} color=\"black\" />\r\n                      Reagendar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                  </View>\r\n              </View>\r\n  \r\n            }\r\n            \r\n          </View>\r\n  \r\n              \r\n        </TouchableOpacity>\r\n  \r\n  \r\n      );\r\n      \r\n    } else {\r\n      return (\r\n\r\n        <TouchableOpacity id='*' onPress={handleCardPress}>\r\n          <View style={styles.cardContainer}>\r\n            <Text style={styles.title1}>{title}</Text>\r\n            {expanded &&\r\n              <View style={styles.descriptionContainer}>\r\n                <View style={styleM}>\r\n  \r\n                  <View style={styles.infoAgendas}>\r\n  \r\n                    <Text style={styles.label}><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Horario:</Text> {moment(description.hora).format('HH:mm')}</Text>\r\n                    <Text style={styles.label}><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Nome:</Text> {description.nome}</Text>\r\n                    <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Email:</Text> {description.email}</Text>\r\n                    <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Telefone:</Text> {description.telefone}</Text>\r\n                    <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Setor:</Text> {description.setor}</Text>\r\n                    <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Comparecimento:</Text> {comp}</Text>\r\n                  </View>\r\n  \r\n  \r\n                  <TouchableOpacity id='#1' onPress={() => cancelarAgenda(description.id)}\r\n                    style={{\r\n                      borderWidth: 1,\r\n                      borderColor: '#000',\r\n                      borderRadius: 30,\r\n                      padding: 10,\r\n                      alignItems: 'center',\r\n                      marginRight: 5,\r\n                    }}>\r\n                    <Text style={{ fontFamily: 'Harabara', fontSize: 20 }} >\r\n                      <Feather name=\"trash-2\" size={24} color=\"black\" />\r\n                      Cancelar\r\n                    </Text>\r\n  \r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity id='#2' onPress={() => reagendar(description, 'reagendar')} style={{\r\n                    borderWidth: 1,\r\n  \r\n                    borderColor: '#000',\r\n                    borderRadius: 30,\r\n                    padding: 10,\r\n                    alignItems: 'center',\r\n  \r\n                  }}>\r\n                    <Text style={{ fontFamily: 'Harabara', fontSize: 20 }}>\r\n                      <FontAwesome name=\"send-o\" size={24} color=\"black\" />\r\n                      Reagendar\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n  \r\n                  <div style={{ width: 'auto', backgroundColor: 'white', display: 'block', marginLeft: 15, flexDirection:'column' }}>\r\n                    <label>\r\n                      <input type=\"checkbox\" value={description.id} onChange={(e) => handleComparecimento(e, true)} />\r\n                      comparecimento\r\n                    </label>\r\n                  <label>\r\n                      <input type=\"checkbox\" value={description.id} onChange={(e) => handleComparecimento(e,false)} />\r\n                      não comparecimento\r\n                    </label>\r\n                  </div>\r\n  \r\n                    \r\n                </View>\r\n              </View>\r\n  \r\n            }\r\n            \r\n          </View>\r\n  \r\n              \r\n        </TouchableOpacity>\r\n  \r\n  \r\n      );\r\n    }\r\n  };\r\n\r\n\r\n\r\n  if (dados.length > 0) {\r\n\r\n    return (\r\n      <View style={{ justifyContent: 'center', backgroundColor: '#eeeeec' }}>\r\n        <View style={[styles.header, { justifyContent: 'center' }]}>\r\n          <View style={{ left: '33%' }}>\r\n            <UserIcon />\r\n          </View>\r\n          <LogoMundial />\r\n\r\n          <View style={styles.headerBtn}>\r\n            <TouchableOpacity style={[styles.btn]} onPress={() => handleTelaPsicologa(\"UserPsicologa\")}>\r\n              <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Pendentes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={[styles.btn]} onPress={() => handleTelaHistórico(\"Tela Historico\")}>\r\n              <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Histórico</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={[styles.btn]} onPress={() => handleTelaDisponibilidade(\"Atendimento Especialista\")}>\r\n              <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Disponibilidade</Text>\r\n            </TouchableOpacity>\r\n\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{ backgroundColor: '#eeeeec' }}>\r\n          <Button onPress={exportToExcel} title='exportar' color={'green'} />\r\n\r\n          <ScrollView>\r\n            <View style={styles.grid}>\r\n              \r\n\r\n              {resultado.map((agendamento) => (\r\n\r\n                <View key={agendamento.id} style={styles.card}>\r\n                  <Card title={moment(agendamento.data).format('DD/MM/YYYY')} description={agendamento}></Card>\r\n                </View>\r\n              ))}\r\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'flex-end' }}>\r\n\r\n                <TouchableOpacity id='menu' style={styles.btnNextPrev} onPress={() => nextPreviuos(1)}>\r\n                  <MaterialCommunityIcons name=\"page-next\" size={24} color=\"black\" /><Text>Próxima</Text></TouchableOpacity>\r\n                <TouchableOpacity id='menu' style={styles.btnNextPrev} onPress={() => nextPreviuos(-1)}>\r\n                  <MaterialCommunityIcons name=\"page-previous\" size={24} color=\"black\" /><Text>Anteriror</Text></TouchableOpacity>\r\n\r\n              </View>\r\n\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n\r\n\r\n      </View>\r\n\r\n\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ justifyContent: 'center', backgroundColor: '#eeeeec' }}>\r\n        <View style={[styles.header, { justifyContent: 'center' }]}>\r\n          <View style={{ left: '33%' }}>\r\n            <UserIcon />\r\n\r\n          </View>\r\n\r\n          <LogoMundial />\r\n          <View style={styles.headerBtn}>\r\n            <TouchableOpacity style={styles.btn} onPress={() => handleTelaPsicologa(\"UserPsicologa\")}>\r\n              <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Pendentes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.btn} onPress={() => handleTelaHistórico(\"Tela Historico\")}>\r\n              <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Histórico</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.btn} onPress={() => handleTelaDisponibilidade(\"Atendimento Especialista\")}>\r\n              <Text style={{ fontSize: 22, alignItems: 'center', fontFamily: 'Harabara' }}>Disponibilidade</Text>\r\n            </TouchableOpacity>\r\n\r\n          </View>\r\n        </View>\r\n        <Text style={{ textAlign: 'center', fontSize: 50, alignItems: 'center' }}>Nenhum agendamento pendente....</Text>\r\n        <TouchableOpacity style={{ textAlign: 'center', fontSize: 50, alignItems: 'center' }} onPress={() => window.location.reload()}>\r\n          <Text style={{ textAlign: 'center', fontSize: 25, alignItems: 'center', marginTop: 30 }}>Caso tenha algum agendamento, atualize a página clicando aqui!! </Text>\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst styles = styleWebMobileUsers;\r\n/*\r\nStyleSheet.create({\r\n    container:\r\n    {       \r\n      width: '100%',\r\n      backgroundColor: '#ffff',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: 50,\r\n },\r\n    header: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: 20,\r\n      backgroundColor: 'white',\r\n      borderRadius: 4,\r\n      width: '100%',\r\n      \r\n    },\r\n    logo: {\r\n      //resizeMode:'contain',\r\n      width: 100,\r\n      height: 100,\r\n      position: \"absolute\",\r\n      justifyContent: 'flex-start',\r\n      alignContent: 'flex-start',\r\n      left: '9%',\r\n      marginTop: -15\r\n},\r\nlogo2: {\r\n  //resizeMode:'contain',\r\n  width: 100,\r\n  height: 100,\r\n  position: \"absolute\",\r\n  justifyContent: 'flex-start',\r\n  alignContent: 'flex-start',\r\n  left: '15%',\r\n    marginTop: -15\r\n  \r\n},\r\n    headerBtn: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-around',\r\n      alignItems: 'center',\r\n      flexWrap: 'wrap',\r\n      marginTop: 10,\r\n    },\r\n    btn: {\r\n      width: '33,3%',\r\n      height: 50,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: 15,\r\n      marginBottom: 10,\r\n    },\r\n    btnNextPrev:{\r\n      flex: 1,\r\n      justifyContent:\"space-evenly\",\r\n      alignItems: 'center',\r\n      maxWidth: 75,\r\n      \r\n    },\r\n    grid: {\r\n    \r\n      width:'100%',\r\n      maxWidth:900,\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-between',\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: 'white',\r\n      padding: 20,\r\n      borderRadius: 20,\r\n      marginTop: 10,\r\n      \r\n      },\r\n      infoContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n      },\r\n      label: {\r\n       \r\n        marginRight: 5,\r\n      },\r\n      \r\n  card: {\r\n    margin: 5,\r\n    backgroundColor: 'white',\r\n    \r\n      },\r\n  item: {\r\n    width: '100%',\r\n    height: 80,\r\n  backgroundColor: '#f9c2ff',\r\n          marginVertical: 8,\r\n          marginHorizontal: 16,\r\n          flexDirection: 'row',\r\n        },\r\n  cardContainer: {\r\n          borderWidth: 1,\r\n          borderColor: '#e77825',\r\n          padding: 10,\r\n          marginBottom: 10,\r\n          borderRadius: 15,\r\n         \r\n        },\r\n  descriptionContainer: {\r\n          flexDirection: 'row',\r\n          padding: 20,\r\n          margin: 10,\r\n  \r\n        },\r\n  title1: {\r\n          fontSize: 18,\r\n          fontWeight: 'bold',\r\n          marginBottom: 5,\r\n        },\r\n  description: {\r\n          fontSize: 14,\r\n          color: 'gray',\r\n          flexWrap: 'wrap',\r\n          padding: 5\r\n         \r\n        },\r\n  text: {\r\n    fontSize: 18,\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    justifyContent:  'space-between',\r\n    padding: 20,\r\n  \r\n  }\r\n})*/\r\nexport default TelaPsicologa;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, StyleSheet, Button, TextInput, Image} from 'react-native';\r\nimport { AuthContext } from '../contexts/auth';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setPassword] = useState('');\r\n  const { SignIn, SignOUt } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    document.title = 'Login';\r\n  }, []);\r\n  alert( document.title)\r\n  //console.log(AuthContext.Provider)\r\n  function handledados() {\r\n    if (email && senha) {\r\n      const userData = { email, senha };\r\n      SignIn(email, senha);\r\n    } else {\r\n      alert('Por favor, preencha todos os campos.');\r\n    }\r\n  }\r\n\r\n  function regexPassword(pass) {\r\n    const regex = /^(?=.*\\d)(?=.*[A-Z]).{8,}$/; \r\n    /*\r\n    Deve conter pelo menos um dígito (0 a 9).\r\n    Deve conter pelo menos uma letra maiúscula (A a Z).\r\n    Deve ter pelo menos 8 caracteres.\r\n    */\r\n    console.log(regex.test(pass))\r\n    if (regex.test(pass)) {\r\n      // Senha válida, pode prosseguir\r\n      setPassword(pass);\r\n    } \r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <form style={{ justifyContent: 'center', alignItems: 'center', alignContent: 'center' }}>\r\n        <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{ width: 300, height: 300 }} />\r\n        <View style={{ marginTop: 20, justifyContent: 'center' }}>\r\n          <TextInput\r\n            nativeID='email'\r\n            style={styles.inputs}\r\n            placeholder='email@exemplo.com....'\r\n            onChangeText={(text) => setEmail(text)}\r\n          />\r\n          <TextInput\r\n            nativeID='senha'\r\n            style={styles.inputs}\r\n            placeholder='SenhaDeExemplo123....'\r\n            secureTextEntry={true} // Oculta a senha\r\n            onChangeText={(text) => regexPassword(text)}\r\n          />\r\n          <Button title=\"enviar\" onPress={handledados} />\r\n        </View>\r\n      </form>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,           \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputs: {\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    padding: 10,\r\n    marginBottom: 5,\r\n    borderRadius: 20\r\n  }\r\n});\r\n\r\nexport default Login;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Text, View, StyleSheet,Image, Button,ActivityIndicator, TouchableOpacity, Pressable, Alert, Dimensions } from 'react-native';\r\nimport moment from 'moment/moment';\r\nimport {Calendar,LocaleConfig} from 'react-native-calendars';\r\nimport axios from  'axios';\r\nimport { MaterialIcons,Feather, Ionicons  } from '@expo/vector-icons'; \r\nimport { FlatList, ScrollView } from 'react-native-web';\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\r\nimport FormsAgendamento from '../../components/FormsAgendamento';\r\nimport util, { refrestPage } from '../../util/util';\r\nimport styleWebMobile from '../../style';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst AgendamentoPsicologaNeolog =   () => {\r\n\r\n  const [date, setDate] = useState(new Date())\r\n  const [markedDates, setMarkedDates] = useState({});\r\n  const [hora, setHorario] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedHorario, setselectedHorario] = useState();\r\n  const [horaa, sethoraa] = useState([]);\r\n  const [showCalendar, setshowCalendar] = useState(true);\r\n  const [showHorarios, setshowHorarios] = useState(false);\r\n  const [navegar, setNavegar] = useState();\r\n  const [dimensions, setDimension] = useState();\r\n\r\n  const navigation = useNavigate();\r\n  const especialidade = 'psicologa';\r\n  const servicoId = 'psicologaGLP';\r\n \r\n\r\n    const fetchApi = async () => {\r\n      const especialidade = 'psicologa';\r\n      const servicoId = 'psicologaGLP';\r\n      const dataApi = new Date();\r\n      const dados = {\r\n        dataApi,\r\n        especialidade,\r\n        servicoId\r\n      };\r\n  try{\r\n      const response = await axios.post(util.urlHorariosDisponiveis, dados);\r\n      const diasSemanaDisponiveis = response.data.agenda || [];\r\n     \r\n      if(diasSemanaDisponiveis.length <= 0){\r\n        alert('Sem horarios disponiveis!!');\r\n         navigation('/')\r\n       }\r\n       else{\r\n       setHorario(diasSemanaDisponiveis)\r\n       // Atualize as marcações de datas\r\n       const marked = {};\r\n       diasSemanaDisponiveis.forEach((dia) => {\r\n         marked[dia.data[0]] = { selected: true, selectedColor: '#e77825' };\r\n       });\r\n   \r\n       setMarkedDates(marked);\r\n       setshowCalendar(true)\r\n       setIsLoading(false);\r\n     }}\r\n    catch (erro){\r\n      console.warn('Não foi possível buscar os dados da API');\r\n      alert('Não foi possível buscar os dados da API');\r\n      navigation('/');\r\n    }\r\n    };\r\n  \r\n    useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchApi();\r\n      \r\n    }, []);\r\n  \r\n  \r\n\r\n  function CompCalendario() {\r\n\r\n    LocaleConfig.locales['pt-br'] = {\r\n      monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n  \r\n      monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n      dayNames: [\r\n  \r\n        'Domingo',\r\n        'Segunda-feira',\r\n        'Terça-feira',\r\n        'Quarta-feira',\r\n        'Quinta-feira',\r\n        'Sexta-feira',\r\n        'Sábado'\r\n  \r\n      ],\r\n      dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\r\n      today: 'Hoje',\r\n    }\r\n  \r\n    LocaleConfig.defaultLocale='pt-br';\r\n\r\n    // Dia pressionado\r\n   const handleDayPress = (day) => {\r\n      setSelectedDate(day.dateString);\r\n      \r\n    const horarioSelecionado = hora.find(\r\n        (horario) => horario.data.toString() === day.dateString\r\n      );\r\n\r\n  if(horarioSelecionado){\r\n    const horariosDisponiveis =  horarioSelecionado.horariosLivres;\r\n   \r\n    sethoraa(horariosDisponiveis)\r\n    setshowHorarios(true)\r\n    setshowCalendar(false)\r\n     \r\n}\r\n\r\nsetselectedHorario('')\r\n}\r\n     \r\n  \r\n    return (\r\n      <View>\r\n        {isLoading ? (\r\n          <ActivityIndicator size=\"large\" color=\"blue\" />\r\n        ) : (\r\n          <>\r\n            <Calendar\r\n            style={{width: '99%', height: '99%'}}\r\n               onDayPress={handleDayPress}\r\n              markedDates={{\r\n                ...markedDates,\r\n                [selectedDate]: { selected: true, selectedColor: 'orange' },\r\n                //disableTouchEvent: {...markedDates} \r\n              }\r\n             \r\n            }\r\n              //disableAllTouchEventsForDisabledDays={true}\r\n              \r\n              theme={{\r\n                backgroundColor: 'white',\r\n                calendarBackground: 'black',\r\n               // todayBackgroundColor: 'orange',\r\n                textSectionTitleColor: 'white',\r\n                selectedDayBackgroundColor: 'white',\r\n                selectedDayTextColor: 'white',\r\n                todayTextColor: 'white',\r\n                dayTextColor: 'white',\r\n                textDisabledColor: 'gray',\r\n                arrowHeight: 20,\r\n                monthTextColor: 'white',\r\n                 arrowWidth: 20,\r\n                arrowColor: 'white',\r\n                arrowsHitSlop: 20,\r\n                textMonthFontSize: 20,\r\n                textDayHeaderFontSize: 14,\r\n                \r\n               // contentStyle: styles.containerDate\r\n              }}\r\n              minDate= {moment().format('YYYY-MM-DD')}\r\n             disabledByDefault={true}\r\n            />\r\n          </>\r\n        )\r\n       }\r\n      </View>\r\n        )\r\n        \r\n  }\r\n\r\n  // Array de dias disponíveis\r\n  const dataFormat = moment(date).format('DD/MM/YYYY')\r\n\r\n  //Selecionar horario disponivel\r\n\r\n  function handleHorarioSelecionado(event, horarios) {\r\n    console.log('Horário selecionado:', horarios);\r\n    setselectedHorario(horarios)\r\n    \r\n    \r\n  }\r\n\r\n  // Navegar para tela forms\r\n\r\n  function agendar(tela) {\r\n   setNavegar(tela)\r\n   \r\n  }\r\n  const dataHoje = moment().format('YYYY-MM-DD')\r\n  const horaHoje = moment().format('HH:mm')\r\n    //navegação para telas\r\n  \r\n  if(navegar) {    \r\n    return <FormsAgendamento  dataSelecionada= {selectedDate} horarioSelecionada= {selectedHorario} id_especialista={especialidade} servicoId={servicoId}/>\r\n  \r\n  }\r\n  \r\n  \r\n  const width = Dimensions.get('window').width\r\n  //setDimension(width)\r\n//console.log(width)\r\n  if (width > 800) {\r\n  return (\r\n    <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n    <View style={styles.container}>\r\n      <View style={styles.containerGrid}>\r\n        <View style={styles.containerInfo}>\r\n          <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n          <Text style={styles.textDate}>Data: {dataFormat}</Text>\r\n          \r\n          <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Psicologa Neolog</Text>\r\n         \r\n          <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>1h</Text>\r\n          \r\n          </View>\r\n            <View style={{justifyContent:  'center'}} aria-valuetext='image'>\r\n                      <Image source={require('../../../assets/logo_mundial_cores.png')} style={{width: 250, height: 250, alignItems: 'center', marginTop: 15}}/> \r\n\r\n            </View>\r\n\r\n        </View>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>\r\n                  <Text style={styles.textDate}\r\n                          >Escolha uma data e horário</Text>\r\n                <View style={styles.containerDate}>\r\n                <CompCalendario />\r\n                \r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n    \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorario}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorario}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n\r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n\r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorario}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n      </View>\r\n\r\n     \r\n    </View>\r\n   </View>\r\n  \r\n  \r\n  )}\r\n  else{\r\n    return(\r\n      <>\r\n     <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n      <View style={styles.containerM}>\r\n          <View style={styles.containerGridM}>\r\n            <View style={styles.containerInfoM}>\r\n              <Text style={styles.textDate}>Data: {dataFormat}</Text>\r\n              \r\n              <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Massoterapeuta Matriz</Text>\r\n            \r\n              <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>20 min</Text>\r\n            \r\n            </View>\r\n            {/* Calendário!! */}\r\n            {\r\n              showCalendar? \r\n            <View style={styles.Calendar}>\r\n\r\n            <CompCalendario/>\r\n            </View>\r\n              : null\r\n\r\n            }\r\n\r\n            {/* Horarios*/}\r\n            {\r\n              showHorarios? \r\n              <View style={styles.containerGridsM}>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>   \r\n                 <Text style={styles.textDate}>Data Selecionada: {selectedDate}</Text>\r\n                 <View style={{alignContent: 'flex-start', alignItems: 'flex-start'}}>\r\n                        <TouchableOpacity  onPress={() => {setshowHorarios(false), setshowCalendar(true), setSelectedDate('')}}><Ionicons name=\"ios-arrow-back\" size={24} color=\"white\"  /></TouchableOpacity>\r\n\r\n                  </View>\r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                       \r\n\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n        \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorarioM}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorarioM}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n        \r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n        \r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorarioM}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n              : null\r\n            }\r\n           \r\n           \r\n\r\n          </View>\r\n\r\n        </View>\r\n    </View>\r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n//const widht = Dimensions.get('') \r\nconst styles = styleWebMobile;\r\n//const stylesM = styleMobile;\r\n\r\nexport default AgendamentoPsicologaNeolog;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Text, View, StyleSheet,Image, Button,ActivityIndicator, TouchableOpacity, Pressable, Alert, Dimensions, Platform } from 'react-native';\r\nimport moment from 'moment/moment';\r\nimport {Calendar,LocaleConfig} from 'react-native-calendars';\r\nimport axios from  'axios';\r\nimport { MaterialIcons,Feather,Ionicons   } from '@expo/vector-icons'; \r\nimport { FlatList, ScrollView } from 'react-native-web';\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\r\nimport FormsAgendamento from '../../components/FormsAgendamento';\r\nimport util from '../../util/util';\r\n//import styles from '../../style';\r\nimport styleWebMobile  from '../../style';\r\nimport { useNavigate } from 'react-router-dom';\r\n//import styleMobile  from '../../style';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AgendamentoMassoMatriz =   () => {\r\n\r\n  const [date, setDate] = useState(new Date())\r\n  const [markedDates, setMarkedDates] = useState({});\r\n  const [hora, setHorario] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedHorario, setselectedHorario] = useState();\r\n  const [horaa, sethoraa] = useState([]);\r\n  const [showCalendar, setshowCalendar] = useState(true);\r\n  const [showHorarios, setshowHorarios] = useState(false);\r\n  const [navegar, setNavegar] = useState();\r\n  const [dimensions, setDimension] = useState();\r\n\r\n  const navigation = useNavigate();\r\n  const especialidade = 'massoterapia';\r\n  const servicoId = 'massoterapiaMatriz';\r\n \r\n\r\n    const fetchApi = async () => {\r\n      const especialidade = 'massoterapia';\r\n      const servicoId = 'massoterapiaMatriz';\r\n      const dataApi = new Date();\r\n      const dados = {\r\n        dataApi,\r\n        especialidade,\r\n        servicoId\r\n      };\r\n  try{\r\n      const response = await axios.post(util.urlHorariosDisponiveis, dados);\r\n      const diasSemanaDisponiveis = response.data.agenda;\r\n     \r\n      if(diasSemanaDisponiveis.length <= 0){\r\n        alert('Sem horarios disponiveis!!');\r\n         navigation('/')\r\n       }\r\n       else{\r\n       setHorario(diasSemanaDisponiveis)\r\n       // Atualize as marcações de datas\r\n       const marked = {};\r\n       diasSemanaDisponiveis.forEach((dia) => {\r\n         marked[dia.data[0]] = { selected: true, selectedColor: '#e77825' };\r\n       });\r\n   \r\n       setMarkedDates(marked);\r\n       setshowCalendar(true)\r\n       setIsLoading(false);\r\n     }}\r\n    catch (erro){\r\n      console.warn('Não foi possível buscar os dados da API');\r\n      alert('Não foi possível buscar os dados da API');\r\n    navigation('/');\r\n    }\r\n    };\r\n  \r\n    useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchApi();\r\n      \r\n    }, []);\r\n  \r\n  \r\n\r\n  function CompCalendario() {\r\n\r\n    LocaleConfig.locales['pt-br'] = {\r\n      monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n  \r\n      monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n      dayNames: [\r\n  \r\n        'Domingo',\r\n        'Segunda-feira',\r\n        'Terça-feira',\r\n        'Quarta-feira',\r\n        'Quinta-feira',\r\n        'Sexta-feira',\r\n        'Sábado'\r\n  \r\n      ],\r\n      dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\r\n      today: 'Hoje',\r\n    }\r\n  \r\n    LocaleConfig.defaultLocale='pt-br';\r\n\r\n    // Dia pressionado\r\n   const handleDayPress = (day) => {\r\n      setSelectedDate(day.dateString);\r\n      \r\n    const horarioSelecionado = hora.find(\r\n        (horario) => horario.data.toString() === day.dateString\r\n      );\r\n\r\n  if(horarioSelecionado){\r\n    const horariosDisponiveis =  horarioSelecionado.horariosLivres;\r\n   \r\n    sethoraa(horariosDisponiveis)\r\n    setshowHorarios(true)\r\n    setshowCalendar(false)\r\n     \r\n}\r\n\r\nsetselectedHorario('')\r\n}\r\n     \r\n  \r\n    return (\r\n      <View>\r\n        {isLoading ? (\r\n          <ActivityIndicator size=\"large\" color=\"blue\" />\r\n        ) : (\r\n          <>\r\n            <Calendar\r\n            style={{width: '99%', height: '99%'}}\r\n               onDayPress={handleDayPress}\r\n              markedDates={{\r\n                ...markedDates,\r\n                [selectedDate]: { selected: true, selectedColor: 'orange' },\r\n                //disableTouchEvent: {...markedDates} \r\n              }\r\n             \r\n            }\r\n              //disableAllTouchEventsForDisabledDays={true}\r\n              \r\n              theme={{\r\n                backgroundColor: 'white',\r\n                calendarBackground: 'black',\r\n               // todayBackgroundColor: 'orange',\r\n                textSectionTitleColor: 'white',\r\n                selectedDayBackgroundColor: 'white',\r\n                selectedDayTextColor: 'white',\r\n                todayTextColor: 'white',\r\n                dayTextColor: 'white',\r\n                textDisabledColor: 'gray',\r\n                arrowHeight: 20,\r\n                monthTextColor: 'white',\r\n                 arrowWidth: 20,\r\n                arrowColor: 'white',\r\n                arrowsHitSlop: 20,\r\n                textMonthFontSize: 20,\r\n                textDayHeaderFontSize: 14,\r\n                \r\n               // contentStyle: styles.containerDate\r\n              }}\r\n              minDate= {moment().format('YYYY-MM-DD')}\r\n             disabledByDefault={true}\r\n            />\r\n          </>\r\n        )\r\n       }\r\n      </View>\r\n        )\r\n        \r\n  }\r\n\r\n  // Array de dias disponíveis\r\n  const dataFormat = moment(date).format('DD/MM/YYYY')\r\n\r\n  //Selecionar horario disponivel\r\n\r\n  function handleHorarioSelecionado(event, horarios) {\r\n    console.log('Horário selecionado:', horarios);\r\n    setselectedHorario(horarios)\r\n    \r\n    \r\n  }\r\n\r\n  // Navegar para tela forms\r\n\r\n  function agendar(tela) {\r\n   setNavegar(tela)\r\n   \r\n  }\r\n  const dataHoje = moment().format('YYYY-MM-DD')\r\n  const horaHoje = moment().format('HH:mm')\r\n    //navegação para telas\r\n  \r\n  if(navegar) {    \r\n    return <FormsAgendamento  dataSelecionada= {selectedDate} horarioSelecionada= {selectedHorario} id_especialista={especialidade} servicoId={servicoId}/>\r\n  \r\n  }\r\n  \r\n  \r\n  const width = Dimensions.get('window').width\r\n  //setDimension(width)\r\n//console.log(width)\r\n  if (width > 800) {\r\n  return (\r\n    <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n    <View style={styles.container}>\r\n      <View style={styles.containerGrid}>\r\n        <View style={styles.containerInfo}>\r\n          <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n          <Text style={styles.textDate}>Data: {dataFormat}</Text>\r\n          \r\n          <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Massoterapeuta Matriz</Text>\r\n         \r\n          <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>20 min</Text>\r\n          \r\n          </View>\r\n            <View style={{justifyContent:  'center'}} aria-valuetext='image'>\r\n                      <Image source={require('../../../assets/logo_mundial_cores.png')} style={{width: 250, height: 250, alignItems: 'center', marginTop: 15}}/> \r\n\r\n            </View>\r\n\r\n        </View>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>\r\n                  <Text style={styles.textDate}\r\n                          >Escolha uma data e horário</Text>\r\n                <View style={styles.containerDate}>\r\n                <CompCalendario />\r\n                \r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n    \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorario}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorario}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n\r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n\r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorario}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n      </View>\r\n\r\n     \r\n    </View>\r\n   </View>\r\n  \r\n  \r\n  )}\r\n  else{\r\n    return(\r\n      <>\r\n     <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1, width: '100%'}}>\r\n      <View style={styles.containerM}>\r\n          <View style={styles.containerGridM}>\r\n            <View style={styles.containerInfoM}>\r\n              <Text style={styles.textDate}>Data: {dataFormat}</Text>\r\n              \r\n              <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Massoterapeuta Matriz</Text>\r\n            \r\n              <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>20 min</Text>\r\n            \r\n            </View>\r\n            {/* Calendário!! */}\r\n            {\r\n              showCalendar? \r\n            <View style={styles.Calendar}>\r\n\r\n            <CompCalendario/>\r\n            </View>\r\n              : null\r\n\r\n            }\r\n\r\n            {/* Horarios*/}\r\n            {\r\n              showHorarios? \r\n              <View style={styles.containerGridsM}>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>   \r\n                 <Text style={styles.textDate}>Data Selecionada: {selectedDate}</Text>\r\n                 <View style={{alignContent: 'flex-start', alignItems: 'flex-start'}}>\r\n                        <TouchableOpacity  onPress={() => {setshowHorarios(false), setshowCalendar(true), setSelectedDate('')}}><Ionicons name=\"ios-arrow-back\" size={24} color=\"white\"  /></TouchableOpacity>\r\n\r\n                  </View>\r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                       \r\n\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n        \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorarioM}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorarioM}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n        \r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n        \r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorarioM}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n              : null\r\n            }\r\n           \r\n           \r\n\r\n          </View>\r\n\r\n        </View>\r\n    </View>\r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n//const widht = Dimensions.get('') \r\nconst styles = styleWebMobile;\r\n//const stylesM = styleMobile;\r\n\r\nexport default AgendamentoMassoMatriz;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Text, View, StyleSheet,Image, Button,ActivityIndicator, TouchableOpacity, Pressable, Alert, Dimensions } from 'react-native';\r\nimport moment from 'moment/moment';\r\nimport {Calendar,LocaleConfig} from 'react-native-calendars';\r\nimport axios from  'axios';\r\nimport { MaterialIcons,Feather, Ionicons } from '@expo/vector-icons'; \r\nimport { FlatList, ScrollView } from 'react-native-web';\r\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\r\nimport FormsAgendamento from '../../components/FormsAgendamento';\r\nimport util from '../../util/util';\r\nimport styleWebMobile from '../../style';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst AgendamentoMassoNeolog =   () => {\r\n\r\n  const [date, setDate] = useState(new Date())\r\n  const [markedDates, setMarkedDates] = useState({});\r\n  const [hora, setHorario] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedHorario, setselectedHorario] = useState();\r\n  const [horaa, sethoraa] = useState([]);\r\n  const [showCalendar, setshowCalendar] = useState(true);\r\n  const [showHorarios, setshowHorarios] = useState(false);\r\n  const [navegar, setNavegar] = useState();\r\n  const [dimensions, setDimension] = useState();\r\n\r\n  const navigation = useNavigate();\r\n  const especialidade = 'massoterapia';\r\n  const servicoId = 'massoterapiaGLP';\r\n \r\n\r\n    const fetchApi = async () => {\r\n      const especialidade = 'massoterapia';\r\n      const servicoId = 'massoterapiaGLP';\r\n      const dataApi = new Date();\r\n      const dados = {\r\n        dataApi,\r\n        especialidade,\r\n        servicoId\r\n      };\r\n  try{\r\n      const response = await axios.post(util.urlHorariosDisponiveis, dados);\r\n      const diasSemanaDisponiveis = response.data.agenda || [];\r\n     \r\n      if(diasSemanaDisponiveis.length <= 0){\r\n        alert('Sem horarios disponiveis!!');\r\n         navigation('/')\r\n       }\r\n       else{\r\n       setHorario(diasSemanaDisponiveis)\r\n       // Atualize as marcações de datas\r\n       const marked = {};\r\n       diasSemanaDisponiveis.forEach((dia) => {\r\n         marked[dia.data[0]] = { selected: true, selectedColor: '#e77825' };\r\n       });\r\n   \r\n       setMarkedDates(marked);\r\n       setshowCalendar(true)\r\n       setIsLoading(false);\r\n     }}\r\n    catch (erro){\r\n      console.warn('Não foi possível buscar os dados da API');\r\n      alert('Não foi possível buscar os dados da API');\r\n   navigation('/')\r\n    }\r\n    };\r\n  \r\n    useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchApi();\r\n      \r\n    }, []);\r\n  \r\n  \r\n\r\n  function CompCalendario() {\r\n\r\n    LocaleConfig.locales['pt-br'] = {\r\n      monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n  \r\n      monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n      dayNames: [\r\n  \r\n        'Domingo',\r\n        'Segunda-feira',\r\n        'Terça-feira',\r\n        'Quarta-feira',\r\n        'Quinta-feira',\r\n        'Sexta-feira',\r\n        'Sábado'\r\n  \r\n      ],\r\n      dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\r\n      today: 'Hoje',\r\n    }\r\n  \r\n    LocaleConfig.defaultLocale='pt-br';\r\n\r\n    // Dia pressionado\r\n   const handleDayPress = (day) => {\r\n      setSelectedDate(day.dateString);\r\n      \r\n    const horarioSelecionado = hora.find(\r\n        (horario) => horario.data.toString() === day.dateString\r\n      );\r\n\r\n  if(horarioSelecionado){\r\n    const horariosDisponiveis =  horarioSelecionado.horariosLivres;\r\n   \r\n    sethoraa(horariosDisponiveis)\r\n    setshowHorarios(true)\r\n    setshowCalendar(false)\r\n     \r\n}\r\n\r\nsetselectedHorario('')\r\n}\r\n     \r\n  \r\n    return (\r\n      <View>\r\n        {isLoading ? (\r\n          <ActivityIndicator size=\"large\" color=\"blue\" />\r\n        ) : (\r\n          <>\r\n            <Calendar\r\n            style={{width: '99%', height: '99%'}}\r\n               onDayPress={handleDayPress}\r\n              markedDates={{\r\n                ...markedDates,\r\n                [selectedDate]: { selected: true, selectedColor: 'orange' },\r\n                //disableTouchEvent: {...markedDates} \r\n              }\r\n             \r\n            }\r\n              //disableAllTouchEventsForDisabledDays={true}\r\n              \r\n              theme={{\r\n                backgroundColor: 'white',\r\n                calendarBackground: 'black',\r\n               // todayBackgroundColor: 'orange',\r\n                textSectionTitleColor: 'white',\r\n                selectedDayBackgroundColor: 'white',\r\n                selectedDayTextColor: 'white',\r\n                todayTextColor: 'white',\r\n                dayTextColor: 'white',\r\n                textDisabledColor: 'gray',\r\n                arrowHeight: 20,\r\n                monthTextColor: 'white',\r\n                 arrowWidth: 20,\r\n                arrowColor: 'white',\r\n                arrowsHitSlop: 20,\r\n                textMonthFontSize: 20,\r\n                textDayHeaderFontSize: 14,\r\n                \r\n               // contentStyle: styles.containerDate\r\n              }}\r\n              minDate= {moment().format('YYYY-MM-DD')}\r\n             disabledByDefault={true}\r\n            />\r\n          </>\r\n        )\r\n       }\r\n      </View>\r\n        )\r\n        \r\n  }\r\n\r\n  // Array de dias disponíveis\r\n  const dataFormat = moment(date).format('DD/MM/YYYY')\r\n\r\n  //Selecionar horario disponivel\r\n\r\n  function handleHorarioSelecionado(event, horarios) {\r\n    console.log('Horário selecionado:', horarios);\r\n    setselectedHorario(horarios)\r\n    \r\n    \r\n  }\r\n\r\n  // Navegar para tela forms\r\n\r\n  function agendar(tela) {\r\n   setNavegar(tela)\r\n   \r\n  }\r\n  const dataHoje = moment().format('YYYY-MM-DD')\r\n  const horaHoje = moment().format('HH:mm')\r\n    //navegação para telas\r\n  \r\n  if(navegar) {    \r\n    return <FormsAgendamento  dataSelecionada= {selectedDate} horarioSelecionada= {selectedHorario} id_especialista={especialidade} servicoId={servicoId}/>\r\n  \r\n  }\r\n  \r\n  \r\n  const width = Dimensions.get('window').width\r\n  //setDimension(width)\r\n//console.log(width)\r\n  if (width > 800) {\r\n  return (\r\n    <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1}}>\r\n    <View style={styles.container}>\r\n      <View style={styles.containerGrid}>\r\n        <View style={styles.containerInfo}>\r\n          <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n          <Text style={styles.textDate}>Data: {dataFormat}</Text>\r\n          \r\n          <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Massoterapeuta Neolog</Text>\r\n         \r\n          <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>20 min</Text>\r\n          \r\n          </View>\r\n            <View style={{justifyContent:  'center'}} aria-valuetext='image'>\r\n                      <Image source={require('../../../assets/logo_mundial_cores.png')} style={{width: 250, height: 250, alignItems: 'center', marginTop: 15}}/> \r\n\r\n            </View>\r\n\r\n        </View>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>\r\n                  <Text style={styles.textDate}\r\n                          >Escolha uma data e horário</Text>\r\n                <View style={styles.containerDate}>\r\n                <CompCalendario />\r\n                \r\n                \r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n    \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorario}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorario}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n\r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n\r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorario}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n      </View>\r\n\r\n     \r\n    </View>\r\n  </View>\r\n  \r\n  \r\n  )}\r\n  else{\r\n    return(\r\n      <>\r\n     <View style={{backgroundColor: '#4B4544', justifyContent: 'center', alignItems: 'center', flex: 1, width: '100%'}}>\r\n      <View style={styles.containerM}>\r\n          <View style={styles.containerGridM}>\r\n            <View style={styles.containerInfoM}>\r\n              <Text style={styles.textDate}>Data: {dataFormat}</Text>\r\n              \r\n              <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />Massoterapeuta Matriz</Text>\r\n            \r\n              <Text style={styles.textDateh}> <MaterialIcons name=\"timer\" size={15} color=\"white\" style={{marginRight: 5}}/>20 min</Text>\r\n            \r\n            </View>\r\n            {/* Calendário!! */}\r\n            {\r\n              showCalendar? \r\n            <View style={styles.Calendar}>\r\n\r\n            <CompCalendario/>\r\n            </View>\r\n              : null\r\n\r\n            }\r\n\r\n            {/* Horarios*/}\r\n            {\r\n              showHorarios? \r\n              <View style={styles.containerGridsM}>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>   \r\n                 <Text style={styles.textDate}>Data Selecionada: {selectedDate}</Text>\r\n                 <View style={{alignContent: 'flex-start', alignItems: 'flex-start'}}>\r\n                        <TouchableOpacity  onPress={() => {setshowHorarios(false), setshowCalendar(true), setSelectedDate('')}}><Ionicons name=\"ios-arrow-back\" size={24} color=\"white\"  /></TouchableOpacity>\r\n\r\n                  </View>\r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                       \r\n\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                          { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                    // console.log(horarios, selectedDate, dataHoje, horaHoje)\r\n                                    \r\n                            if(selectedHorario === horarios ){\r\n                            \r\n                              if( selectedDate === dataHoje && selectedHorario < horaHoje ){\r\n                                 alert('Horário indiponivel!!');\r\n                                return(\r\n                              \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n        \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={styles.btnHorarioM}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                )\r\n                              }else {\r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorarioM}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n        \r\n                            </View>\r\n                           \r\n                          )}\r\n                       \r\n                        }else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n        \r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorarioM}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            )\r\n                          }\r\n                          \r\n                        \r\n                        })\r\n                       ) })\r\n                       : <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n              : null\r\n            }\r\n           \r\n           \r\n\r\n          </View>\r\n\r\n        </View>\r\n    </View>\r\n    \r\n      </>\r\n    )\r\n  }\r\n}\r\n  \r\n//const widht = Dimensions.get('') \r\nconst styles = styleWebMobile;\r\n//const stylesM = styleMobile;\r\n\r\nexport default AgendamentoMassoNeolog;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Text, View, StyleSheet,Image, Button,ActivityIndicator, TouchableOpacity, ScrollView, Alert, Dimensions } from 'react-native';\r\nimport moment from 'moment/moment';\r\nimport {Calendar,LocaleConfig} from 'react-native-calendars';\r\nimport axios from  'axios';\r\nimport { MaterialIcons,Feather,Ionicons   } from '@expo/vector-icons'; \r\n//import { ScrollView } from 'react-native-web';\r\nimport {  useNavigation } from '@react-navigation/native';\r\nimport Reagendar from '../screensUsers/Reagendamento';\r\nimport util from '../util/util';\r\nimport TelaErro from './telaErro';\r\nimport styleWebMobile from '../style';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Reagendamentos =   ({data, horario , id, id_especialista, servicoId}) => {\r\n\r\n  const [date, setDate] = useState(new Date())\r\n  const [markedDates, setMarkedDates] = useState({});\r\n  const [hora, setHorario] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedHorario, setselectedHorario] = useState();\r\n  const [setdados, setDados] = useState(true);\r\n  const [dados, setDatas] = useState([]);\r\n  const [horaa, sethoraa] = useState([]);\r\n  const [navegar, setNavegar] = useState();\r\n  const [showCalendar, setshowCalendar] = useState(true);\r\n  const [showHorarios, setshowHorarios] = useState(false);\r\n \r\n\r\n // const navigation = useNavigation();\r\n  const queryString = window.location.search;\r\n\r\n  // Cria um objeto URLSearchParams a partir da string de consulta\r\n  const params = new URLSearchParams(queryString);\r\n  \r\n  // Obtém os valores dos parâmetros\r\n  const param1 = params.get('param1');\r\n  const param2 = params.get('param2');\r\n  const param3 = params.get('param3');\r\n  const param4 = params.get('param4');\r\n  const param5 = params.get('ref');\r\n  \r\n // console.log(p,d,r,t,i);\r\n    const fetchApi = async () => {\r\n      \r\n        const dataApi = new Date();\r\n    \r\n        const dados = {\r\n          dataApi,\r\n          especialidade: param4,\r\n          servicoId: param1\r\n        };\r\n       // console.log(dados)\r\n               \r\n  try{\r\n\r\n    const response = await axios.get(util.urlGetAgendamento + param5)\r\n    const res = response.data\r\n\r\n    //console.log(res.length)\r\n\r\n    if(res.length > 0){\r\n    \r\n    \r\n    const response = await axios.post(util.urlHorariosDisponiveis, dados);\r\n    const diasSemanaDisponiveis = response.data.agenda || [];\r\n   \r\n    setHorario(diasSemanaDisponiveis)\r\n    // Atualize as marcações de datas\r\n    const marked = {};\r\n    diasSemanaDisponiveis.forEach((dia) => {\r\n      marked[dia.data[0]] = { selected: true, selectedColor: '#e77825' };\r\n    });\r\n\r\n    setMarkedDates(marked);\r\n    setIsLoading(false);\r\n    setshowCalendar(true);\r\n    //setDados(true)\r\n  }\r\n  else {\r\n\r\n    params.delete(queryString)\r\n    setDados(false);\r\n\r\n  \r\n  \r\n}}\r\n  catch (erro){\r\n    console.warn('Não foi possível buscar os dados da API');\r\n    alert('Não foi possível buscar os dados da API');\r\n   \r\n  }\r\n  \r\n  }; \r\n \r\n  \r\n    useEffect(() => {\r\n    setIsLoading(true);\r\n    //fetchApiReagendar();\r\n    fetchApi();\r\n      \r\n    }, []);\r\n  \r\n  if(!setdados){\r\n    return (\r\n       \r\n      <View style={{flex:1, justifyContent:'center', alignItems:\"center\"}}>\r\n      <TelaErro/>\r\n    </View>\r\n    )\r\n  }\r\n\r\n  function CompCalendario() {\r\n\r\n    LocaleConfig.locales['pt-br'] = {\r\n      monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\r\n  \r\n      monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\r\n      dayNames: [\r\n  \r\n        'Domingo',\r\n        'Segunda-feira',\r\n        'Terça-feira',\r\n        'Quarta-feira',\r\n        'Quinta-feira',\r\n        'Sexta-feira',\r\n        'Sábado'\r\n  \r\n      ],\r\n      dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\r\n      today: 'Hoje',\r\n    }\r\n  \r\n    LocaleConfig.defaultLocale='pt-br';\r\n\r\n    // Dia pressionado\r\n   const handleDayPress = (day) => {\r\n      setSelectedDate(day.dateString);\r\n      \r\n    const horarioSelecionado = hora.find(\r\n        (horario) => horario.data.toString() === day.dateString\r\n      );\r\n\r\n  if(horarioSelecionado){\r\n    const horariosDisponiveis =  horarioSelecionado.horariosLivres;\r\n   \r\n    sethoraa(horariosDisponiveis)\r\n    setshowHorarios(true)\r\n    setshowCalendar(false)\r\n     \r\n}\r\n\r\nsetselectedHorario('')\r\n}\r\n     \r\n  \r\n    return (\r\n      <View>\r\n        {isLoading ? (\r\n          <ActivityIndicator size=\"large\" color=\"blue\" />\r\n        ) : (\r\n          <>\r\n            <Calendar\r\n            style={styles.Calendar}\r\n               onDayPress={handleDayPress}\r\n              markedDates={{\r\n                ...markedDates,\r\n                [selectedDate]: { selected: true, selectedColor: 'orange' },\r\n                \r\n              }}\r\n              theme={{\r\n                backgroundColor: 'white',\r\n                calendarBackground: 'black',\r\n               // todayBackgroundColor: 'orange',\r\n                textSectionTitleColor: 'white',\r\n                selectedDayBackgroundColor: 'white',\r\n                selectedDayTextColor: 'white',\r\n                todayTextColor: 'white',\r\n                dayTextColor: 'white',\r\n                textDisabledColor: 'gray',\r\n                arrowHeight: 20,\r\n                monthTextColor: 'white',\r\n                 arrowWidth: 20,\r\n                arrowColor: 'white',\r\n                arrowsHitSlop: 20,\r\n                textMonthFontSize: 20,\r\n                textDayHeaderFontSize: 14,\r\n                \r\n               // contentStyle: styles.containerDate\r\n              }}\r\n              minDate= {moment().format('YYYY-MM-DD')}\r\n              disabledByDefault={true}\r\n            />\r\n          </>\r\n        )\r\n       }\r\n      </View>\r\n        )\r\n        \r\n  }\r\n\r\n  //Selecionar horario disponivel\r\n\r\n  function handleHorarioSelecionado(event, horarios) {\r\n    console.log('Horário selecionado:', horarios);\r\n    setselectedHorario(horarios)\r\n    \r\n    \r\n  }\r\n\r\n  // Navegar para tela forms\r\n\r\n  function agendar(tela) {\r\n   setNavegar(tela)\r\n   \r\n  }\r\n  const dataHoje = moment(data).format('DD/MM/YYYY')\r\n  const dataHojeHoras = moment(horario).format('HH:mm')\r\n\r\n\r\n    //navegação para telas\r\n  \r\n  if(navegar) {    \r\n    return <Reagendar  dataSelecionada= {selectedDate} horarioSelecionada= {selectedHorario} id={param5} id_especialista={id_especialista} servicoId={servicoId}/>\r\n  \r\n  }\r\n\r\n  const dimensions = Dimensions.get('window').width;\r\n\r\n\r\n  if(dimensions < 400) {\r\n    return (\r\n      <View style={{flex:1,justifyContent: 'center', alignItems: 'center', alignContent:'center', backgroundColor: '#4B4544'}}>\r\n        <View style={style.containerM}>\r\n          <View style={style.containerGridM}>\r\n            <View style={style.containerInfoM}>\r\n             <Text style={style.textDate}>Data agendada: {param2}</Text>\r\n              <Text style={style.textDate}>Hora agendada: {param3}</Text>\r\n              \r\n              <Text style={style.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />{param1}</Text>  \r\n            </View>\r\n           {/* Calendário!! */}\r\n            \r\n            {\r\n              showCalendar? \r\n                <View style={style.Calendar}>\r\n                  <CompCalendario/>\r\n                </View>\r\n                        : null\r\n            }\r\n             {\r\n                showHorarios?\r\n                  <View style={styles.containerGridsM}>\r\n                    <View style={{alignContent: 'flex-start', alignItems: 'flex-start'}}>\r\n                        \r\n                        <TouchableOpacity  onPress={() => {setshowHorarios(false), setshowCalendar(true), setSelectedDate('')}}><Ionicons name=\"ios-arrow-back\" size={24} color=\"white\"  /></TouchableOpacity>\r\n                        <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n\r\n                    </View>\r\n                    \r\n                          <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                          <View style={styles.containerHorariosDisponiveis}>\r\n                        \r\n                            { hora ? horaa.map((horario, indice1) => {\r\n                              return(\r\n                              \r\n                              horario.map((horarios, indice2) => {\r\n                                         \r\n                                if(selectedHorario === horarios){\r\n                                  if(selectedDate === dataHoje && horarios < dataHoje){\r\n                                     alert('HORARIO INDISPONIVEL');\r\n                                  } else{                             \r\n                                     \r\n                                  \r\n                                return(\r\n                             \r\n                                <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                    <View style={{padding: 10}}>\r\n                                    <TouchableOpacity \r\n                                    onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                    style={style.btnHorarioM}\r\n                                  >\r\n                                    <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                   \r\n                                  </TouchableOpacity>\r\n                                    \r\n                                    </View>\r\n                                     <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n    \r\n                                </View>\r\n                               \r\n                              );}}else{\r\n                              \r\n                                return(\r\n                                  \r\n                                  <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                      <View>\r\n    \r\n                                      <TouchableOpacity\r\n                                      onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                      style={style.btnHorarioM}\r\n                                    >\r\n                                      <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                    </TouchableOpacity>\r\n                                      </View>\r\n                                  </View>\r\n                                );\r\n                              }\r\n                              \r\n                            \r\n                            })); \r\n                          })\r\n                           : \r\n                           <ActivityIndicator size={30} color={'blue'}/> \r\n                          }\r\n                          </View>\r\n                          </ScrollView> \r\n                  </View>\r\n                      : null\r\n              }\r\n                         \r\n          </View>\r\n        </View>\r\n      </View>     \r\n      \r\n      )\r\n  }\r\n\r\n  return (\r\n  <View style={{flex:1,justifyContent: 'center', alignItems: 'center', alignContent:'center', backgroundColor: '#4B4544'}}>\r\n    <View style={styles.container}>\r\n      <View style={styles.containerGrid}>\r\n        <View style={styles.containerInfo}>\r\n          <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n            \r\n          <Text style={styles.textDate}>Data agendada: {param2}</Text>\r\n          <Text style={styles.textDate}>Hora agendada: {param3}</Text>\r\n          \r\n          <Text style={styles.textDate}><Feather name=\"map-pin\" size={24} color=\"white\"style={{marginRight: 5}} />{param1}</Text>\r\n              <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{width: 200, height:200}}/>       \r\n          </View>\r\n            <View style={{justifyContent:  'center'}} aria-valuetext='image'>\r\n                     \r\n            </View>\r\n\r\n        </View>\r\n              <View style={{flexDirection: 'column', justifyContent:'center'}}>\r\n                  <Text style={[styles.textDate,{marginTop: 20} ]}\r\n                          >Escolha uma data e horário para reagendar</Text>\r\n                <View style={styles.containerDate}>\r\n                <CompCalendario />\r\n                \r\n                    <View style={styles.containerHorario}>\r\n                      <ScrollView contentContainerStyle={styles.contentContainer}>\r\n                      <View style={styles.containerHorariosDisponiveis}>\r\n                          <Text style={{fontSize: 14, color: 'white', marginBottom:15, alignItems:'center', marginRight:10}}>Horários disponíveis</Text>\r\n                    \r\n                        { hora ? horaa.map((horario, indice1) => {\r\n                          return(\r\n                          \r\n                          horario.map((horarios, indice2) => {\r\n                                     \r\n                            if(selectedHorario === horarios){\r\n                              if(selectedDate === dataHoje && horarios < dataHoje){\r\n                                 alert('HORARIO INDISPONIVEL');\r\n                              } else{                             \r\n                                 \r\n                              \r\n                            return(\r\n                         \r\n                            <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                <View style={{padding: 10}}>\r\n                                <TouchableOpacity \r\n                                onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                style={styles.btnHorario}\r\n                              >\r\n                                <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                               \r\n                              </TouchableOpacity>\r\n                                \r\n                                </View>\r\n                                 <Button title='avancar' color={'#e77825'} onPress={() => agendar('formsAgendamento')}/>\r\n\r\n                            </View>\r\n                           \r\n                          );}}else{\r\n                          \r\n                            return(\r\n                              \r\n                              <View key={`${indice1}-${indice2}`} style={styles.horarioContainer}>\r\n                                  <View>\r\n\r\n                                  <TouchableOpacity\r\n                                  onPress={(event) => handleHorarioSelecionado(event, horarios)}\r\n                                  style={styles.btnHorario}\r\n                                >\r\n                                  <Text style={{color: 'white', fontSize: 14, padding:10}}>{horarios}</Text>\r\n                                </TouchableOpacity>\r\n                                  </View>\r\n                              </View>\r\n                            );\r\n                          }\r\n                          \r\n                        \r\n                        })); \r\n                      })\r\n                       : \r\n                       <ActivityIndicator size={30} color={'blue'}/> \r\n                      }\r\n                      </View>\r\n                      </ScrollView> \r\n                    </View>\r\n                     \r\n                </View>\r\n              </View>\r\n      </View>\r\n\r\n     \r\n    </View>\r\n  </View>\r\n   \r\n  \r\n  )};\r\n  \r\n const style = styleWebMobile;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#e77825',\r\n    width: '60%',\r\n    height: '40%',\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    margin: 50\r\n    \r\n  \r\n    \r\n  }, \r\n  containerGrid: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#090707',\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    maxWidth:'98%',\r\n    height: '98%',\r\n    //width: '100%'\r\n  \r\n    \r\n  },\r\n  \r\nCalendar: {\r\n  flex: 1,\r\n  justifyContent:  'center',\r\n  width: 300\r\n\r\n\r\n},\r\ncontainerDate: {\r\n  marginRight: 10,\r\n  width:500,\r\n  height: 500,\r\n  alignItems: 'center',\r\n  justifyContent: 'space-evenly',\r\n  borderRadius: 1,\r\n  flexDirection: 'row'\r\n},\r\ncontainerInfo: {\r\n  alignItems: 'center',\r\n  padding: 50,\r\n  marginBottom: 10,\r\n  borderRightColor: 'white',\r\n  borderRightWidth: 1,\r\n  width: '40%'\r\n},\r\n\r\ncontainerHeaderCalendario: {\r\n  flex: 1,\r\n  flexDirection: 'row',\r\n  alignItems: 'flex-start',\r\n  justifyContent: 'center',\r\n  height: 100,\r\n} ,\r\ntextDate: {\r\n  fontSize: 17,\r\n  fontWeight: 'bold',\r\n  color: 'white',\r\n  alignItems: 'center',\r\n  height: 50,\r\n  textAlign: 'center',\r\n \r\n},\r\ntextDateh: {\r\n  fontSize: 15,\r\n  color: 'white',\r\n  marginTop: 10\r\n},\r\ncontainerHorario: {\r\n  alignItems: 'center',\r\n  maxHeight: 350,\r\n \r\n\r\n},\r\nScrollContainer: {\r\n  paddingVertical: 20,\r\n  color: 'black',\r\n\r\n},\r\ncontainerHorariosDisponiveis: {\r\n  flexDirection: 'column',\r\n  flexWrap: 'wrap',\r\n},\r\nhorarioContainer: {\r\n  marginRight: 10,\r\n  marginBottom: 10,\r\n  alignItems: 'center',\r\n  \r\n\r\n},\r\nbtnHorario: {\r\n  fontFamily: 'sans-serif',\r\n  color: 'white',\r\n  padding: 6,\r\n  borderColor: '#e77825',\r\n  borderWidth: 1\r\n\r\n},\r\n\r\nheading: {\r\n  fontSize: 20,\r\n  textAlign: 'center',\r\n  margin: 10,\r\n  color: 'white'\r\n  \r\n\r\n},\r\ndatas: {\r\n    color: 'blue'\r\n  },\r\n\r\n  horarios: {\r\n  color: 'black',\r\n  fontSize: 20,\r\n  borderWidth: 1,\r\n  borderColor: 'blue',\r\n  padding: 20,\r\n  marginBottom: 5,\r\n  textAlign: 'center',\r\n  flexDirection: 'column',\r\n  },\r\n  containerHorarios: {\r\n    width: '100%',\r\n    color: 'black',\r\n    fontSize: 20,\r\n    padding: 20,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    fontWeight: 'bold',\r\n    flexWrap: 'wrap',\r\n    flex:1,\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n   \r\n\r\n  },\r\n\r\n  textHorariosSelecionado: {\r\n  borderWidth: 1,\r\n  borderColor: 'black',\r\n  padding: 20,\r\n  marginBottom: 5,\r\n  textAlign: 'center',\r\n\r\n  },\r\n  textHorarios: {\r\n  borderWidth: 1,\r\n  borderColor: 'blue',\r\n  padding: 20,\r\n  marginBottom: 5,\r\n  textAlign: 'center',   \r\n    \r\n  },\r\n  containerButton: {\r\n  marginTop: 20,\r\n  alignItems: 'center',\r\n  },\r\n  });\r\n\r\nexport default Reagendamentos;\r\n","import {View, TouchableOpacity,Button, Text, StyleSheet,ScrollView} from 'react-native';\r\nimport { useState, useEffect } from 'react';\r\nimport {MaterialCommunityIcons  } from '@expo/vector-icons'; \r\nimport UserIcon from '../../components/iconUsers';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport util from '../../util/util';\r\nimport TelaMasso from './massoterapia';\r\nimport AtendimentoEspecialista from './gerenciarAtendimento';\r\nimport LogoMundial from '../../components/logosMundial';\r\n\r\n\r\nconst Telahistorico = () => {\r\n\r\n  const [exibirTela, setexibirTela] = useState(false);\r\n  const [navegacao, setnavegacao] = useState();\r\n  const [dados, setDados] = useState([]);\r\n  const [pageAtual, setPageAtual] = useState(1);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const dadosArmazenados = sessionStorage.getItem('dados');\r\n  const dadosLogados = JSON.parse(dadosArmazenados);\r\n\r\n  const headers ={\r\n    headers: {\r\n    'authorization': `Bearer ${dadosLogados.token}`\r\n  }\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  useEffect(() => {  \r\n\r\n    async function fetchApi () {\r\n\r\n      try {\r\n        const response = await axios.get(util.urlGEThistorico+ dadosLogados.especialidade+ '/' + dadosLogados.user,\r\n           headers\r\n        \r\n        );\r\n        setDados(response.data)\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert('erro ao buscar informações, faça o login novamente')\r\n     }\r\n    }\r\n    fetchApi();\r\n  }, []);\r\n\r\nconst handleTelaPsicologa =  (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n   setexibirTela(true)\r\n  \r\n  \r\n  }\r\n  const handleTelaHistórico = (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n    setexibirTela(true)\r\n\r\n}\r\nconst handleTelaDisponibilidade = (event) => {\r\n    // console.log(event)\r\n     setnavegacao(event)\r\n     setexibirTela(true)\r\n     }\r\n\r\nif(exibirTela && navegacao === 'UserPsicologa'){\r\n  return(\r\n      <View>\r\n          <TelaMasso />\r\n      </View>\r\n  )\r\n} if(exibirTela && navegacao === 'Tela Historico'){\r\n  return(\r\n    <View>\r\n        <Telahistorico/>\r\n      </View>\r\n  )\r\n}else if(exibirTela && navegacao === 'Atendimento Especialista'){\r\n    return(\r\n         <View>\r\n        <AtendimentoEspecialista/>\r\n        </View>\r\n        )\r\n  }\r\n  function filtroDataRecente(itens, pageAtual, limitador){\r\n    // let data = moment().format('DD/MM/YYYY')\r\n     let result = [];\r\n   \r\n     itens.sort((a, b) => moment(b.data).diff(moment(a.data)));\r\n   \r\n     let totalPage = Math.ceil(pageAtual * limitador /  pageAtual);\r\n   \r\n     let count = ( pageAtual * limitador) - limitador;\r\n   \r\n     let delimitador = count + limitador\r\n   \r\n   \r\n     if (pageAtual <= totalPage){\r\n       for (let i=count ;i<delimitador;i++){\r\n         if (itens[i] != null){\r\n           //result.push(<Agenda key={i+1}/>)\r\n           result.push(itens[i]);\r\n   }\r\n     count++;\r\n   }\r\n   \r\n   return {\r\n     resultado: result,\r\n    totalPages: totalPage\r\n   };\r\n   }\r\n   \r\n   }\r\n    const limitador = 10\r\n   \r\n   \r\n   function nextPreviuos(value){\r\n    // console.log(value)\r\n     let NovapageAtual = pageAtual + value;\r\n   \r\n     if (NovapageAtual > 0 && NovapageAtual <= Math.ceil(dados.length / limitador)){\r\n       setPageAtual(NovapageAtual)\r\n     }\r\n   }\r\n\r\n   //dados filtrados e ordenados pelo mais recente\r\n   const {resultado, totalPages} = filtroDataRecente(dados,pageAtual,limitador);\r\n\r\n\r\n   async function exportToExcel() {\r\n    try {\r\n      if (resultado.length === 0) {\r\n        console.log('Não há dados para exportar para o Excel.');\r\n        return;\r\n      }\r\n  \r\n      await util.ExportToExcel('historico',resultado);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  const Card = ({ title, description }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    let comp = description.comparecimento === true ? 'SIM' : 'NÃO CONFIRMADO';\r\n\r\n    //console.log(title, description)\r\n  \r\n    const handleCardPress = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n    if(!title && !description){\r\n        return(<>\r\n        <ActivityIndicator size={100}  />\r\n        <Text>Nenhum agendamento pendente</Text>\r\n        </>);\r\n      }\r\n  \r\n    return (\r\n      \r\n      <Pressable onPress={handleCardPress} id='card'>\r\n          <View style={styles.cardContainer}>\r\n            <Text style={styles.title}>{title}</Text>\r\n            {expanded && \r\n              <View style={styles.descriptionContainer}>\r\n                <View style={styles.infoContainer}>                \r\n                <View style={styles.infoAgendas}>\r\n                      <Text style={styles.label}><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Horario:</Text> {moment(description.hora).format('HH:mm')}</Text>\r\n                      <Text style={styles.label}><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Nome:</Text> {description.nome}</Text>\r\n                      <Text style={styles.label} ><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Email:</Text> {description.email}</Text>\r\n                      <Text style={styles.label} ><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Telefone:</Text> {description.telefone}</Text>                      \r\n                      <Text style={styles.label} ><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Setor:</Text> {description.setor}</Text>\r\n                      <Text style={styles.label} ><Text style={{fontStyle: 'normal', fontWeight:'bold'}}>Comparecimento:</Text> {comp}</Text>\r\n                    </View> \r\n                  </View>\r\n              </View>\r\n            }\r\n          </View>\r\n    </Pressable> \r\n    \r\n    );\r\n  \r\n  };\r\n  \r\n\r\n  if(dados.length > 0){\r\n\r\n    return (\r\n      <View style={{justifyContent:'center'}}>\r\n      <View style={[styles.header, {justifyContent: 'center' }]}>\r\n        <View style={{left: '33%'}}>\r\n        <UserIcon/>\r\n\r\n        </View>\r\n        <LogoMundial/>\r\n     \r\n        <View style={styles.headerBtn}>\r\n        <TouchableOpacity id='menu' style={styles.btn} onPress={() =>handleTelaPsicologa(\"UserPsicologa\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Pendentes</Text>\r\n          </TouchableOpacity>\r\n        <TouchableOpacity id='menu' style={styles.btn} onPress={() => handleTelaHistórico(\"Tela Historico\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Histórico</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity id='menu' style={styles.btn} onPress={() => handleTelaDisponibilidade(\"Atendimento Especialista\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Disponibilidade</Text>\r\n          </TouchableOpacity>\r\n          \r\n        </View>\r\n      </View>\r\n      <View style={{backgroundColor: '#babcb4'}}>\r\n      <Button onPress={exportToExcel} title='exportar' color={'green'} />\r\n\r\n          <ScrollView  >\r\n        <View style={styles.grid}>\r\n          \r\n          {resultado.map((agendamento) => (\r\n\r\n            <View key={agendamento.id} style={styles.card}>\r\n            <Card   title={moment(agendamento.data).format('DD/MM/YYYY')} description={agendamento}></Card>\r\n            \r\n\r\n            </View>\r\n          ))}\r\n         <View style={{flexDirection: 'row', justifyContent:'flex-end', alignItems:'flex-end'}}>\r\n\r\n          <TouchableOpacity id='menu' style={styles.btnNextPrev} onPress={() => nextPreviuos(1)}>\r\n            <MaterialCommunityIcons name=\"page-next\" size={24} color=\"black\" /><Text>Próxima</Text></TouchableOpacity>\r\n          <TouchableOpacity id='menu' style={styles.btnNextPrev} onPress={() => nextPreviuos(-1)}>\r\n            <MaterialCommunityIcons name=\"page-previous\" size={24} color=\"black\" /><Text>Anteriror</Text></TouchableOpacity>\r\n\r\n          </View>\r\n        </View>\r\n    </ScrollView>\r\n          </View>\r\n    </View>\r\n    )\r\n} else{\r\n  return (\r\n    <View style={{justifyContent:'center',backgroundColor: '#eeeeec'}}>\r\n    <View style={[styles.header, {justifyContent: 'center' }]}>\r\n      <View style={{left: '33%'}}>\r\n      <UserIcon/>\r\n     \r\n      </View>\r\n      \r\n      <LogoMundial/>\r\n      <View style={styles.headerBtn}>\r\n        <TouchableOpacity style={styles.btn} onPress={() =>handleTelaPsicologa(\"UserPsicologa\")}>\r\n          <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Pendentes</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.btn} onPress={() => handleTelaHistórico(\"Tela Historico\")}>\r\n          <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Histórico</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.btn} onPress={() => handleTelaDisponibilidade(\"Atendimento Especialista\")}>\r\n          <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Disponibilidade</Text>\r\n        </TouchableOpacity>\r\n        \r\n      </View>\r\n    </View>\r\n    <Text style={{textAlign: 'center', fontSize: 50,alignItems: 'center'}}>Nenhum agendamento pendente....</Text>\r\n    <TouchableOpacity style={{textAlign: 'center', fontSize: 50,alignItems: 'center'}} onPress={() => window.location.reload()}>\r\n      <Text style={{textAlign: 'center', fontSize: 25,alignItems: 'center', marginTop: 30}}>Caso tenha algum agendamento, atualize a página clicando aqui!! </Text>\r\n    </TouchableOpacity>\r\n   \r\n   </View>\r\n   \r\n     )\r\n\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:\r\n    {       \r\n      width: '100%',\r\n      backgroundColor: '#ffff',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: 50,\r\n },\r\n    header: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: 20,\r\n      backgroundColor: 'white',\r\n      borderRadius: 4,\r\n    },\r\n    headerBtn: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-around',\r\n      alignItems: 'center',\r\n      flexWrap: 'wrap',\r\n      marginTop: 10,\r\n    },\r\n    btn: {\r\n      width: '33,3%',\r\n      height: 50,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      padding: 15,\r\n      marginBottom: 10,\r\n    },\r\n    logo: {\r\n      //resizeMode:'contain',\r\n      width: 100,\r\n      height: 100,\r\n      position: \"absolute\",\r\n      justifyContent: 'flex-start',\r\n      alignContent: 'flex-start',\r\n      left: '9%',\r\n      marginTop: -15\r\n},\r\nlogo2: {\r\n  //resizeMode:'contain',\r\n  width: 100,\r\n  height: 100,\r\n  position: \"absolute\",\r\n  justifyContent: 'flex-start',\r\n  alignContent: 'flex-start',\r\n  left: '15%',\r\n    marginTop: -15\r\n  \r\n},\r\n    btnNextPrev:{\r\n      flex: 1,\r\n      justifyContent:\"space-evenly\",\r\n      alignItems: 'center',\r\n      maxWidth: 75,\r\n      \r\n    },\r\n    grid: {\r\n    \r\n      width:'100%',\r\n      maxWidth:900,\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-between',\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: 'white',\r\n      padding: 20,\r\n      borderRadius: 20,\r\n      marginTop: 10,\r\n      \r\n      },\r\n      infoContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n      },\r\n      label: {\r\n       \r\n        marginRight: 5,\r\n      },\r\n      \r\n  card: {\r\n    margin: 5,\r\n    backgroundColor: 'white',\r\n    \r\n      },\r\n  item: {\r\n    width: '100%',\r\n    height: 80,\r\n  backgroundColor: '#f9c2ff',\r\n          marginVertical: 8,\r\n          marginHorizontal: 16,\r\n          flexDirection: 'row',\r\n        },\r\n  cardContainer: {\r\n          borderWidth: 1,\r\n          borderColor: '#e77825',\r\n          padding: 10,\r\n          marginBottom: 10,\r\n          borderRadius: 15,\r\n         \r\n        },\r\n  descriptionContainer: {\r\n          flexDirection: 'row',\r\n          padding: 20,\r\n          margin: 10,\r\n  \r\n        },\r\n  title: {\r\n          fontSize: 18,\r\n          fontWeight: 'bold',\r\n          marginBottom: 5,\r\n        },\r\n  description: {\r\n          fontSize: 14,\r\n          color: 'gray',\r\n          flexWrap: 'wrap',\r\n          padding: 5\r\n         \r\n        },\r\n  text: {\r\n    fontSize: 18,\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    justifyContent:  'space-between',\r\n    padding: 20,\r\n  \r\n  }\r\n})\r\n\r\nexport default Telahistorico;","import React, { useEffect, useState } from 'react';\r\nimport { View, Text,Image, CheckBox,StyleSheet, TouchableOpacity,ScrollView } from 'react-native';\r\nimport UserIcon from '../../components/iconUsers';\r\nimport WeekdayButtons from '../../components/DiasDaSemana'\r\nimport ControleAgendas from '../../components/controlAgendas';\r\nimport TelaMasso from './massoterapia';\r\nimport Telahistorico from './historico';\r\nimport LogoMundial from '../../components/logosMundial';\r\n\r\n\r\n\r\n\r\nconst AtendimentoEspecialista = ({navigation}) => {\r\n  const [diasSelecionados, setDiasSelecionados] = useState([]);\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n  const [exibirTela, setexibirTela] = useState(false);\r\n  const [navegacao, setnavegacao] = useState();\r\n  const [dados, setDados] = useState();\r\n\r\n\r\n  const handleTelaPsicologa =  (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n   setexibirTela(true)\r\n  \r\n  \r\n  }\r\n  const handleTelaHistórico = (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n\r\n    setexibirTela(true)\r\n\r\n}\r\nconst handleTelaDisponibilidade = (event) => {\r\n  //console.log(event)\r\n  setnavegacao(event)\r\n\r\n  setexibirTela(true)\r\n\r\n}\r\n\r\nif(exibirTela && navegacao === 'UserMasso'){\r\n // setexibirTela(false)\r\n  return(\r\n      <View><TelaMasso /></View>\r\n  )\r\n\r\n  \r\n}else if(exibirTela && navegacao === 'Tela Historico'){\r\n // setexibirTela(false)\r\n  return(\r\n    <View><Telahistorico/></View>\r\n  )\r\n}else if(exibirTela && navegacao === 'Atendimento Especialista'){\r\n  return(\r\n       <View><AtendimentoEspecialista/></View>\r\n      )\r\n}\r\n\r\n  return (\r\n    <View style={{justifyContent:'center'}}>\r\n        <View style={[styles.header, {justifyContent: 'center' }]}>\r\n          <View style={{left: '33%'}}>\r\n          <UserIcon/>\r\n\r\n          </View>\r\n\r\n          <LogoMundial/>\r\n       \r\n          <View style={styles.headerBtn}>\r\n            <TouchableOpacity  id='especialidade' style={styles.btn} onPress={() =>handleTelaPsicologa('UserMasso')}>\r\n              <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Pendentes</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity  id='especialidade' style={styles.btn} onPress={() => handleTelaHistórico('Tela Historico')}>\r\n              <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Histórico</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity  id='especialidade' style={styles.btn} onPress={() => handleTelaDisponibilidade('Atendimento Especialista')}>\r\n              <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Disponibilidade</Text>\r\n            </TouchableOpacity>\r\n            \r\n          </View>\r\n        </View>\r\n        \r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <ScrollView contentContainerStyle={styles.container} showsVerticalScrollIndicator={true} >\r\n        <Text style={{ fontFamily: 'Harabara', fontSize: 20}}>Definir Dias de Atendimento</Text>\r\n      <WeekdayButtons/>\r\n      <View>\r\n      <ControleAgendas />\r\n\r\n      </View>\r\n\r\n      \r\n    \r\n        </ScrollView>\r\n\r\n        \r\n      </View>\r\n        \r\n     \r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AtendimentoEspecialista;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    backgroundColor: '#ffff',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 50, // Ajuste este valor conforme necessário\r\n  },\r\n  header: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 4,\r\n  },\r\n  headerBtn: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    marginTop: 10,\r\n  },\r\n  btn: {\r\n    width: '33,3%',\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    fontSize:22\r\n  },\r\n  logo: {\r\n    //resizeMode:'contain',\r\n    width: 100,\r\n    height: 100,\r\n    position: \"absolute\",\r\n    justifyContent: 'flex-start',\r\n    alignContent: 'flex-start',\r\n    left: '9%',\r\n    marginTop: -15\r\n},\r\nlogo2: {\r\n//resizeMode:'contain',\r\nwidth: 100,\r\nheight: 100,\r\nposition: \"absolute\",\r\njustifyContent: 'flex-start',\r\nalignContent: 'flex-start',\r\nleft: '15%',\r\n  marginTop: -15\r\n\r\n},\r\n  \r\n    });","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet,TouchableOpacity,Button, ScrollView, ActivityIndicator } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { Feather,FontAwesome, MaterialCommunityIcons  } from '@expo/vector-icons'; \r\nimport moment from \"moment/moment\";\r\n//import { Feather,FontAwesome } from '@expo/vector-icons'; \r\nimport UserIcon from \"../../components/iconUsers\";\r\nimport util from \"../../util/util\";\r\nimport AtendimentoEspecialista from \"./gerenciarAtendimento\";\r\nimport Telahistorico from \"./historico\";\r\nimport LogoMundial from \"../../components/logosMundial\";\r\nimport Reagendamento from \"../../components/reagendar\";\r\n\r\n\r\nconst TelaMasso = ({navigation}) => {\r\n    const [dados, setDados] = useState([]);\r\n    const [exibirTela, setexibirTela] = useState(false);\r\n    const [navegacao, setnavegacao] = useState();\r\n    const [pageAtual, setPageAtual] = useState(1);\r\n    const [reAgendar, setReagendar] = useState();\r\n\r\n\r\n    const dadosArmazenados = sessionStorage.getItem('dados');\r\n    const dadosLogados = JSON.parse(dadosArmazenados);\r\n    const headers ={\r\n      headers: {\r\n      'authorization': `Bearer ${dadosLogados.token}`\r\n    }\r\n    }\r\n    \r\n\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await axios.get(util.urlGetAgendamento + dadosLogados.especialidade + '/' + dadosLogados.user,\r\n          headers);\r\n          setDados(response.data);\r\n  \r\n        } catch (error) {\r\n          console.log(error);\r\n          alert('erro ao buscar os dados')\r\n        }\r\n      };\r\n\r\n  \r\n      fetchData();\r\n    }, []);\r\n\r\n   \r\n\r\nconst handleTelaMasso =  (event) => {\r\n\r\n    setnavegacao(event)\r\n    setexibirTela(true)\r\n}\r\n  const handleTelaHistórico = (event) => {\r\n    //console.log(event)\r\n    setnavegacao(event)\r\n    setexibirTela(true)\r\n\r\n}\r\nconst handleTelaDisponibilidade = (event) => {\r\n // console.log(event)\r\n  setnavegacao(event)\r\n  setexibirTela(true)\r\n  }\r\n\r\nif(exibirTela && navegacao === 'UserMasso'){\r\n // setexibirTela(false)\r\n  return (\r\n  <View>\r\n    <TelaMasso />\r\n  </View>)\r\n}\r\n if(exibirTela && navegacao === 'Tela Historico'){\r\n // setexibirTela(false)\r\n  return (\r\n  <View>\r\n    <Telahistorico/>\r\n    </View>)\r\n      \r\n  \r\n}else if(exibirTela && navegacao === 'Atendimento Especialista'){\r\n  return(\r\n       <View>\r\n      <AtendimentoEspecialista/>\r\n      </View>\r\n      )\r\n}\r\n\r\n\r\n//filter para os agendamentos recente\r\n\r\n\r\nfunction filtroDataRecente(itens, pageAtual, limitador){\r\n  // let data = moment().format('DD/MM/YYYY')\r\n   let result = [];\r\n \r\n   itens.sort((a, b) => moment(b.data).diff(moment(a.data)));\r\n \r\n   let totalPage = Math.ceil(pageAtual * limitador / limitador);\r\n \r\n   let count = ( pageAtual * limitador) - limitador;\r\n \r\n   let delimitador = count + limitador\r\n \r\n \r\n   if (pageAtual <= totalPage){\r\n     for (let i=count ;i<delimitador;i++){\r\n       if (itens[i] != null){\r\n         //result.push(<Agenda key={i+1}/>)\r\n         result.push(itens[i]);\r\n }\r\n   count++;\r\n }\r\n \r\n return {\r\n   resultado: result,\r\n  totalPages: totalPage\r\n };\r\n }\r\n \r\n \r\n }\r\n \r\n \r\n const limitador = 10\r\n \r\n \r\n function nextPreviuos(value){\r\n  // console.log(value)\r\n   let NovapageAtual = pageAtual + value;\r\n \r\n   if (NovapageAtual > 0 && NovapageAtual <= Math.ceil(dados.length / limitador)){\r\n     setPageAtual(NovapageAtual)\r\n   }\r\n }\r\n //dados filtrados e ordenados pelo mais recente\r\n const {resultado, totalPages}=  filtroDataRecente(dados,pageAtual,limitador);\r\n \r\n async function exportToExcel() {\r\n  try {\r\n    if (resultado.length === 0) {\r\n      console.log('Não há dados para exportar para o Excel.');\r\n      return;\r\n    }\r\n\r\n    await util.ExportToExcel('pendentes',resultado);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nasync function cancelarAgenda(event) {\r\n\r\n  await axios.delete(util.urlDeleteAgendamento + event, headers)\r\n  .then((response)=>{\r\n    //console.log(response)\r\n    alert('Agendamento deletado com sucesso!')\r\n    util.refrestPage();\r\n  })\r\n  .catch(()=>alert(\"Erro ao deletar agendamento\"), util.refrestPage())\r\n  \r\n \r\n\r\n  \r\n}\r\nfunction reagendar(event){\r\n  alert(event)\r\n  setReagendar(event)\r\nsetexibirTela(true)\r\n\r\n\r\n}\r\nif(exibirTela){\r\n  return (\r\n  <View>\r\n    <Reagendamento data={reAgendar.data} horario={reAgendar.hora} id={reAgendar.id} id_especialista={reAgendar.id_especialista} servicoId={reAgendar.servicoId}/>\r\n    </View>)\r\n}\r\n  \r\nconst Card = ({ title, description }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  let comp = description.comparecimento === true ? 'SIM' : 'NÃO CONFIRMADO';\r\n  const styleM = width < 800 ? styles.infoContainerM : styles.infoContainer\r\n  const handleCardPress = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  if (!title && !description) {\r\n    return (\r\n      <>\r\n        <ActivityIndicator size={100} />\r\n        <Text>Nenhum agendamento pendente</Text>\r\n      </>);\r\n  }\r\n\r\n  if (comp === 'SIM') {\r\n    return (\r\n\r\n      <TouchableOpacity id='*' onPress={handleCardPress}>\r\n        <View style={styles.cardContainer}>\r\n          <Text style={styles.title1}>{title}</Text>\r\n          {expanded &&\r\n            <View style={styles.descriptionContainer}>\r\n              <View style={styleM}>\r\n\r\n                <View style={styles.infoAgendas}>\r\n\r\n                  <Text style={styles.label}><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Horario:</Text> {moment(description.hora).format('HH:mm')}</Text>\r\n                  <Text style={styles.label}><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Nome:</Text> {description.nome}</Text>\r\n                  <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Email:</Text> {description.email}</Text>\r\n                  <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Telefone:</Text> {description.telefone}</Text>\r\n                  <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Setor:</Text> {description.setor}</Text>\r\n                  <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Comparecimento:</Text> {comp}</Text>\r\n                </View>\r\n\r\n\r\n                <TouchableOpacity id='#1' onPress={() => cancelarAgenda(description.id)}\r\n                  style={{\r\n                    borderWidth: 1,\r\n                    borderColor: '#000',\r\n                    borderRadius: 30,\r\n                    padding: 10,\r\n                    alignItems: 'center',\r\n                    marginRight: 5,\r\n                  }}>\r\n                  <Text style={{ fontFamily: 'Harabara', fontSize: 20 }} >\r\n                    <Feather name=\"trash-2\" size={24} color=\"black\" />\r\n                    Cancelar\r\n                  </Text>\r\n\r\n                </TouchableOpacity>\r\n                <TouchableOpacity id='#2' onPress={() => reagendar(description, 'reagendar')} style={{\r\n                  borderWidth: 1,\r\n\r\n                  borderColor: '#000',\r\n                  borderRadius: 30,\r\n                  padding: 10,\r\n                  alignItems: 'center',\r\n\r\n                }}>\r\n                  <Text style={{ fontFamily: 'Harabara', fontSize: 20 }}>\r\n                    <FontAwesome name=\"send-o\" size={24} color=\"black\" />\r\n                    Reagendar\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n\r\n          }\r\n          \r\n        </View>\r\n\r\n            \r\n      </TouchableOpacity>\r\n\r\n\r\n    );\r\n    \r\n  } else {\r\n    return (\r\n\r\n      <TouchableOpacity id='*' onPress={handleCardPress}>\r\n        <View style={styles.cardContainer}>\r\n          <Text style={styles.title1}>{title}</Text>\r\n          {expanded &&\r\n            <View style={styles.descriptionContainer}>\r\n              <View style={styleM}>\r\n\r\n                <View style={styles.infoAgendas}>\r\n\r\n                  <Text style={styles.label}><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Horario:</Text> {moment(description.hora).format('HH:mm')}</Text>\r\n                  <Text style={styles.label}><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Nome:</Text> {description.nome}</Text>\r\n                  <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Email:</Text> {description.email}</Text>\r\n                  <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Telefone:</Text> {description.telefone}</Text>\r\n                  <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Setor:</Text> {description.setor}</Text>\r\n                  <Text style={styles.label} ><Text style={{ fontStyle: 'normal', fontWeight: 'bold' }}>Comparecimento:</Text> {comp}</Text>\r\n                </View>\r\n\r\n\r\n                <TouchableOpacity id='#1' onPress={() => cancelarAgenda(description.id)}\r\n                  style={{\r\n                    borderWidth: 1,\r\n                    borderColor: '#000',\r\n                    borderRadius: 30,\r\n                    padding: 10,\r\n                    alignItems: 'center',\r\n                    marginRight: 5,\r\n                  }}>\r\n                  <Text style={{ fontFamily: 'Harabara', fontSize: 20 }} >\r\n                    <Feather name=\"trash-2\" size={24} color=\"black\" />\r\n                    Cancelar\r\n                  </Text>\r\n\r\n                </TouchableOpacity>\r\n                <TouchableOpacity id='#2' onPress={() => reagendar(description, 'reagendar')} style={{\r\n                  borderWidth: 1,\r\n\r\n                  borderColor: '#000',\r\n                  borderRadius: 30,\r\n                  padding: 10,\r\n                  alignItems: 'center',\r\n\r\n                }}>\r\n                  <Text style={{ fontFamily: 'Harabara', fontSize: 20 }}>\r\n                    <FontAwesome name=\"send-o\" size={24} color=\"black\" />\r\n                    Reagendar\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                <div style={{ width: 'auto', backgroundColor: 'white', display: 'inline-block', marginLeft: 30 }}>\r\n                  <label>\r\n                    <input type=\"checkbox\" value={description.id} onChange={(e) => handleComparecimento(e)} />\r\n                    comparecimento\r\n                  </label>\r\n                </div>\r\n\r\n                  \r\n              </View>\r\n            </View>\r\n\r\n          }\r\n          \r\n        </View>\r\n\r\n            \r\n      </TouchableOpacity>\r\n\r\n\r\n    );\r\n  }\r\n};\r\n\r\n\r\n    if(dados.length > 0){\r\n   \r\n    return (\r\n      <View style={{justifyContent:'center'}}>\r\n      <View style={[styles.header, {justifyContent: 'center' }]}>\r\n        <View style={{left: '33%'}}>\r\n        <UserIcon/>\r\n\r\n        </View>\r\n\r\n        <LogoMundial/>\r\n     \r\n        <View style={styles.headerBtn}>\r\n          <TouchableOpacity style={styles.btn} onPress={() =>handleTelaMasso(\"UserMasso\")}>\r\n            <Text  style={{fontSize: 22, alignItems: 'center'}}>Pendentes</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.btn} onPress={() => handleTelaHistórico(\"Tela Historico\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center'}}>Histórico</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.btn} onPress={() => handleTelaDisponibilidade(\"Atendimento Especialista\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center'}}>Disponibilidade</Text>\r\n          </TouchableOpacity>\r\n          \r\n        </View>\r\n      </View>\r\n\r\n      <View style={{backgroundColor: '#eeeeec'}}>\r\n      <Button onPress={exportToExcel} title='exportar' color={'green'} />\r\n\r\n          <ScrollView  >\r\n        <View style={styles.grid}>\r\n          \r\n          {resultado.map((agendamento) => (\r\n\r\n            <View key={agendamento.id} style={styles.card}>\r\n            <Card   title={moment(agendamento.data).format('DD/MM/YYYY')} description={agendamento}></Card>\r\n            \r\n\r\n            </View>\r\n          ))}\r\n           <View style={{flexDirection: 'row', justifyContent:'flex-end', alignItems:'flex-end'}}>\r\n\r\n            <TouchableOpacity id='menu' style={styles.btnNextPrev} onPress={() => nextPreviuos(1)}>\r\n              <MaterialCommunityIcons name=\"page-next\" size={24} color=\"black\" /><Text>Próxima</Text></TouchableOpacity>\r\n            <TouchableOpacity id='menu' style={styles.btnNextPrev} onPress={() => nextPreviuos(-1)}>\r\n              <MaterialCommunityIcons name=\"page-previous\" size={24} color=\"black\" /><Text>Anteriror</Text></TouchableOpacity>\r\n\r\n            </View>\r\n                    \r\n        </View>\r\n    </ScrollView>\r\n          </View>\r\n           \r\n\r\n    </View>\r\n   \r\n      \r\n    );\r\n  }  else{\r\n    return (\r\n      <View style={{justifyContent:'center',backgroundColor: '#eeeeec'}}>\r\n      <View style={[styles.header, {justifyContent: 'center' }]}>\r\n        <View style={{left: '33%'}}>\r\n        <UserIcon/>\r\n       \r\n        </View>\r\n          <LogoMundial/>\r\n        <View style={styles.headerBtn}>\r\n          <TouchableOpacity style={styles.btn} onPress={() =>handleTelaPsicologa(\"UserPsicologa\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Pendentes</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.btn} onPress={() => handleTelaHistórico(\"Tela Historico\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Histórico</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.btn} onPress={() => handleTelaDisponibilidade(\"Atendimento Especialista\")}>\r\n            <Text style={{fontSize: 22, alignItems: 'center', fontFamily: 'Harabara'}}>Disponibilidade</Text>\r\n          </TouchableOpacity>\r\n          \r\n        </View>\r\n      </View>\r\n      <Text style={{textAlign: 'center', fontSize: 50,alignItems: 'center'}}>Nenhum agendamento pendente....</Text>\r\n      <TouchableOpacity style={{textAlign: 'center', fontSize: 50,alignItems: 'center'}} onPress={() => window.location.reload()}>\r\n        <Text style={{textAlign: 'center', fontSize: 25,alignItems: 'center', marginTop: 30}}>Caso tenha algum agendamento, atualize a página clicando aqui!! </Text>\r\n      </TouchableOpacity>\r\n     \r\n     </View>\r\n     \r\n       )\r\n\r\n  }\r\n}\r\nexport default TelaMasso;\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer:\r\n{\r\n  width: '100%',\r\n  backgroundColor: '#ffff',\r\n  marginTop: 50,\r\n},\r\nheader: {\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  padding: 20,\r\n  backgroundColor: 'white',\r\n  borderRadius: 4,\r\n},\r\nheaderBtn: {\r\n  flexDirection: 'row',\r\n  justifyContent: 'space-around',\r\n  alignItems: 'center',\r\n  flexWrap: 'wrap',\r\n  marginTop: 10,\r\n},\r\nbtn: {\r\n  width: '30%',\r\n  height: 50,\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: 15,\r\n  marginBottom: 10,\r\n  fontSize: 22,\r\n},\r\nlogo: {\r\n  //resizeMode:'contain',\r\n  width: 100,\r\n  height: 100,\r\n  position: \"absolute\",\r\n  justifyContent: 'flex-start',\r\n  alignContent: 'flex-start',\r\n  left: '9%',\r\n  marginTop: -15\r\n},\r\nlogo2: {\r\n//resizeMode:'contain',\r\nwidth: 100,\r\nheight: 100,\r\nposition: \"absolute\",\r\njustifyContent: 'flex-start',\r\nalignContent: 'flex-start',\r\nleft: '15%',\r\nmarginTop: -15\r\n\r\n},\r\nbtnNextPrev:{\r\n  flex: 1,\r\n  justifyContent:\"space-evenly\",\r\n  alignItems: 'center',\r\n  maxWidth: 75,\r\n  \r\n},\r\ngrid: {\r\n    \r\n    width:'100%',\r\n    maxWidth:900,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 20,\r\n    marginTop: 10,\r\n    \r\n    },\r\n    infoContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginBottom: 10,\r\n    },\r\n    label: {\r\n      fontWeight: 'bold',\r\n      marginRight: 5,\r\n    },\r\n    \r\ncard: {\r\n  margin: 5,\r\n  backgroundColor: 'white',\r\n  \r\n    },\r\nitem: {\r\n  width: '100%',\r\n  height: 80,\r\nbackgroundColor: '#f9c2ff',\r\n        marginVertical: 8,\r\n        marginHorizontal: 16,\r\n        flexDirection: 'row',\r\n      },\r\ncardContainer: {\r\n        borderWidth: 1,\r\n        borderColor: 'gray',\r\n        padding: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 15,\r\n       \r\n      },\r\ndescriptionContainer: {\r\n        flexDirection: 'row',\r\n        padding: 20,\r\n        margin: 10,\r\n\r\n      },\r\ntitle: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 5,\r\n      },\r\ndescription: {\r\n        fontSize: 14,\r\n        color: 'gray',\r\n        flexWrap: 'wrap',\r\n        padding: 5\r\n       \r\n      },\r\ntext: {\r\n  fontSize: 18,\r\n  color: 'black',\r\n  textAlign: 'center',\r\n  justifyContent:  'space-between',\r\n  padding: 20,\r\n\r\n}\r\n       \r\n})\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Text, View, StyleSheet,Image, Button,ActivityIndicator, TouchableOpacity, Pressable, Alert, TextInput, Dimensions } from 'react-native';\r\nimport moment from 'moment/moment';\r\nimport {Calendar,LocaleConfig} from 'react-native-calendars';\r\nimport axios from  'axios';\r\nimport { MaterialIcons,Feather  } from '@expo/vector-icons'; \r\nimport { ScrollView } from 'react-native-web';\r\nimport {  useNavigation } from '@react-navigation/native';\r\nimport Reagendar from '../screensUsers/Reagendamento';\r\nimport util from '../util/util';\r\nimport TelaErro from './telaErro';\r\nimport styleWebMobile from '../style';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CancelamentoagendamentosScreen =   () => {\r\n\r\n  \r\n  const [dados, setDados] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [setAgenda, setAgendamento] = useState();\r\n  \r\n\r\n  const navigation = useNavigate();\r\n  const queryString = window.location.search;\r\n\r\n  // Cria um objeto URLSearchParams a partir da string de consulta\r\n  const params = new URLSearchParams(queryString);\r\n  \r\n  // Obtém os valores dos parâmetros\r\n  const param1 = params.get('p');\r\n  \r\n    const fetchApi = async () => {\r\n    \r\n               \r\n  try{\r\n    \r\n    \r\n    const response = await axios.get(util.urlGetAgendamento + param1);\r\n    const agendamento = response.data;\r\n   if(agendamento.length > 0){\r\n    setAgendamento(agendamento)\r\n    // Atualize as marcações de datas\r\n   \r\n  }\r\n  else{\r\n    params.delete('p')\r\n    setDados(false)\r\n\r\n  }\r\n}\r\n  catch (erro){\r\n    console.warn('Não foi possível buscar os dados');\r\n    alert('Não foi possível buscar os dados');\r\n\r\n      }\r\n  \r\n  }; \r\n \r\n  \r\n    useEffect(() => {\r\n    setIsLoading(true);\r\n    //fetchApiReagendar();\r\n    fetchApi();\r\n      \r\n    }, []);\r\n\r\n  if(!dados){\r\n    return (\r\n    <View style={{flex:1, justifyContent:'center', alignItems:\"center\"}}>\r\n      <TelaErro/>\r\n    </View>)\r\n  }\r\n\r\n  async function  cancelarAgendamento() {\r\n    try{\r\n     \r\n        const response = await axios.delete(util.urlDelAgendamento + param1)\r\n          console.log(response.data)\r\n          alert(\"O agendamento foi cancelado com sucesso!\")\r\n\r\n    }\r\n    catch({message}){\r\n      console.error(\"Erro ao tentar excluir o agendamento\", message )\r\n      alert(`Falha na requisição! ${message}`)\r\n      //util.refrestPage()\r\n      setIsLoading(false)\r\n\r\n      }\r\n      finally{\r\n      navigation('/')\r\n\r\n      }\r\n      };\r\n\r\n  \r\n  const dimensions = Dimensions.get('window');\r\n\r\n  if(dimensions.width < 400){\r\n    return (\r\n      <View style={{flex:1,justifyContent: 'center', alignItems: 'center', alignContent:'center', backgroundColor: '#4B4544'}}>\r\n    <View style={style.containerM}>\r\n      <View style={style.containerGridM}>\r\n      <ScrollView>                           \r\n                         \r\n          <View style={style.containerInfoM}>\r\n            <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n              <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{width: 250, height:250}}/>\r\n            <Text style={styles.textDate}>Cancelar Agendamento</Text>\r\n          \r\n            \r\n            </View>\r\n              <View style={{justifyContent:  'center', width: '100%'}} aria-valuetext='image'>\r\n                            {isLoading ? (\r\n                <>\r\n                  {setAgenda && setAgenda.length > 0 ? (\r\n                    setAgenda.map((dados, indice1) => {\r\n                      console.log(dados);\r\n                      return (\r\n                        \r\n                        <View key={indice1} style={ {flex:1, justifyContent:'center', alignItems: 'center', flexDirection:'row', flexWrap:'wrap'}}>\r\n                          \r\n                          <TextInput\r\n                          id='data'\r\n                          value={moment(dados.data).format('DD/MM/YYYY').toUpperCase()}\r\n                          editable={false}\r\n                          style={styles.inputs}\r\n                          />\r\n                          <TextInput\r\n                          id='hora'\r\n                          value={moment(dados.hora).format(\"HH:mm\").toUpperCase()}\r\n                          editable={false}\r\n                          style={styles.inputs}/>\r\n                          <TextInput\r\n                          id='especialista'\r\n                          value={dados.id_especialista.toUpperCase()}\r\n                          editable={false}\r\n                          style={styles.inputs}/>\r\n                          <TextInput\r\n                          id='servicoId'\r\n                          value={dados.servicoId.toUpperCase()}\r\n                          editable={false}\r\n                          style={styles.inputs}/>\r\n\r\n                          <Button onPress={cancelarAgendamento} title='Cancelar' color={'#e77825'} testID='button'  />\r\n                        </View>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                   <TelaErro/>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Text>Aguarde......</Text>\r\n                  <ActivityIndicator size={100} color={'orange'} />\r\n                </>\r\n              )}\r\n\r\n              \r\n              </View>\r\n\r\n          </View>\r\n      </ScrollView>\r\n        </View>\r\n      </View>\r\n    </View>\r\n      )\r\n  }\r\n\r\n  return (\r\n  <View style={{flex:1,justifyContent: 'center', alignItems: 'center', alignContent:'center', backgroundColor: '#4B4544'}}>\r\n    <View style={styles.container}>\r\n      <View style={styles.containerGrid}>\r\n          <View style={styles.containerInfo}>\r\n            <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n              <Image source={require('../../assets/MicrosoftTeams-image (1).png')} style={{width: 250, height:250}}/>\r\n            <Text style={styles.textDate}>Cancelar Agendamento</Text>\r\n          \r\n            \r\n            </View>\r\n              <View style={{justifyContent:  'center', width: '100%'}} aria-valuetext='image'>\r\n                            {isLoading ? (\r\n                <>\r\n                  {setAgenda && setAgenda.length > 0 ? (\r\n                    setAgenda.map((dados, indice1) => {\r\n                      console.log(dados);\r\n                      return (\r\n                        // Aqui você pode renderizar os dados mapeados conforme necessário\r\n                        // Por exemplo, criar componentes para exibir as informações de cada 'dados'\r\n                        <View key={indice1} style={ {flex:1, justifyContent:'center', alignItems: 'center', flexDirection:'row', flexWrap:'wrap'}}>\r\n                          <TextInput\r\n                          id='data'\r\n                          value={moment(dados.data).format('DD/MM/YYYY').toUpperCase()}\r\n                          editable={false}\r\n                          style={styles.inputs}\r\n                          />\r\n                          <TextInput\r\n                          id='hora'\r\n                          value={moment(dados.hora).format(\"HH:mm\").toUpperCase()}\r\n                          editable={false}\r\n                          style={styles.inputs}/>\r\n                          <TextInput\r\n                          id='especialista'\r\n                          value={dados.id_especialista.toUpperCase()}\r\n                          editable={false}\r\n                          style={styles.inputs}/>\r\n                          <TextInput\r\n                          id='servicoId'\r\n                          value={dados.servicoId.toUpperCase()}\r\n                          editable={false}\r\n                          style={styles.inputs}/>\r\n\r\n                          <Button onPress={cancelarAgendamento} title='Cancelar' color={'#e77825'} testID='button'  />\r\n                        </View>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                   <TelaErro/>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Text>Aguarde......</Text>\r\n                  <ActivityIndicator size={100} color={'orange'} />\r\n                </>\r\n              )}\r\n\r\n              \r\n              </View>\r\n\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n\r\n      \r\n  \r\n  )};\r\n  \r\nconst style = styleWebMobile; \r\nconst styles = StyleSheet.create({\r\n container: {\r\n  flex: 1,\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  backgroundColor: '#e77825',\r\n  width: '60%',\r\n  height: '40%',\r\n  borderColor: 'black',\r\n  borderWidth: 1,\r\n  borderRadius: 30,\r\n  margin: 50\r\n  \r\n\r\n  \r\n}, \r\ncontainerGrid: {\r\n  flexDirection: 'row',\r\n  backgroundColor: '#090707',\r\n  borderWidth: 1,\r\n  borderRadius: 30,\r\n  maxWidth:'99%',\r\n  height: '98%',\r\n  //width: '100%'\r\n\r\n  \r\n},\r\n\r\ncontainerInfo: {\r\n  alignItems: 'center',\r\n  padding: 50,\r\n  marginBottom: 10,\r\n  width: '100%'\r\n},\r\ntextDate: {\r\n  fontSize: 22,\r\n  margin: 15,\r\n  fontWeight: 'bold',\r\n  color: 'white',\r\n  alignItems: 'center',\r\n  fontFamily: 'Harabara',\r\n  height: '100%',\r\n  width:'100%'\r\n,  textAlign: 'center'\r\n},\r\ntextDateh: {\r\n  fontSize: 15,\r\n  color: 'white',\r\n  marginTop: 10\r\n},\r\nheading: {\r\n  fontSize: 20,\r\n  textAlign: 'center',\r\n  margin: 10,\r\n  color: 'white'\r\n  \r\n\r\n},\r\ninputs: {\r\n  width:150,\r\n  color: 'black', \r\n  alignItems: 'center',\r\n  backgroundColor:'white',\r\n  borderRadius :20,\r\n  borderWidth:1.5,\r\n  padding: 20,\r\n  marginBottom: 20,\r\n\r\n},\r\nbutton: {\r\n  borderRadius: 10,\r\n  borderColor:\"#FFFFFF\",\r\n  width: '15%',\r\n  margin: 20\r\n}\r\n})\r\n\r\nexport default CancelamentoagendamentosScreen;\r\n","import * as React from 'react';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport HomeScreen from './components/home';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport AgendamentoPsicologaMatriz from './screens/psicologa/matriz';\r\nimport TelaPsicologa from './screensUsers/psicologa/psicologa';\r\nimport Login from './screens/login'\r\nimport FormsAgendamento from './components/FormsAgendamento';\r\nimport AgendamentoPsicologaNeolog from './screens/psicologa/achelog';\r\nimport AgendamentoMassoMatriz from './screens/massoterapeuta/matriz';\r\nimport AgendamentoMassoNeolog from './screens/massoterapeuta/Neolog';\r\nimport Reagendamentos from './screens/reagendamento';\r\nimport TelaMasso from './screensUsers/massoterapeuta/massoterapia';\r\nimport CancelamentoAgendamentoScreen from './screens/cancelar';\r\nimport AdminPanel from './screens/adm/administrador';\r\nimport Reagendar from './screensUsers/Reagendamento';\r\nimport Reagendamento from './components/reagendar';\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\nexport default function RotasAgendamentos() {\r\n  return (\r\n\r\n   \r\n   \r\n      <Stack.Navigator initialRouteName='Home'>            \r\n\r\n            {/* Telas dos Agendamentos Home*/}\r\n            <Stack.Screen options={{ headerShown: false }} name=\"Home\" navigationKey='/Home' key={'/Home'}  component={HomeScreen} />\r\n\r\n              {/* Telas dos Agendamentos Psicologa*/}\r\n            <Stack.Screen options={{ headerShown: false }} name=\"psicologaMatriz\" navigationKey='/PsicologaMatriz' key={'/PsicologaMatriz'} component={AgendamentoPsicologaMatriz} />\r\n            <Stack.Screen options={{ headerShown: false }} name=\"psicologaGLP\" navigationKey='/PsicologaGLP' key={'/PsicologaGLP'} component={AgendamentoPsicologaNeolog} />\r\n\r\n              {/* Telas dos Agendamentos Massoterapeuta*/}\r\n\r\n            <Stack.Screen options={{ headerShown: false }} name=\"massoterapiaMatriz\" navigationKey='/MatrixScreen' key={'/MatrixScreen'} component={AgendamentoMassoMatriz} />\r\n            <Stack.Screen options={{ headerShown: false }} name=\"massoterapiaGLP\" navigationKey='/MatrixScreen' key={'/MatrixScreen'} component={AgendamentoMassoNeolog} />\r\n\r\n              {/* Telas dos Formulario de Agendamentos*/}\r\n            <Stack.Screen options={{ headerShown: false }} name=\"formsAgendamento\" navigationKey='/formsAgendamento' key={'/formsAgendamento'} component={FormsAgendamento} />\r\n            <Stack.Screen options={{ headerShown: false }} name=\"Reagendamento\" navigationKey='/Reagendamento' key={'/Reagendamento'} component={Reagendamentos} />\r\n            <Stack.Screen options={{ headerShown: false }} name=\"Reagendamentos\" navigationKey='/Reagendamento' key={'/Reagendamento'} component={Reagendamento} />\r\n            <Stack.Screen options={{ headerShown: false }} name=\"Cancelar\" navigationKey='/Cancelar' key={'/Cancelar'} component={CancelamentoAgendamentoScreen} />\r\n\r\n              {/* Rotas Privadas*/}\r\n            <Stack.Screen options={{ headerShown: false }} name='Login'  component={Login} />\r\n            <Stack.Screen options={{ headerShown: false }} name=\"UserPsicologa\" component={TelaPsicologa} />\r\n            <Stack.Screen options={{ headerShown: false }} name=\"UserMasso\" component={TelaMasso} />\r\n            <Stack.Screen options={{ headerShown: false }} name=\"admin\" component={AdminPanel} />\r\n                   \r\n                \r\n      </Stack.Navigator>\r\n    \r\n  );\r\n}\r\n\r\n\r\n","import  {Linking}  from 'react-native';\r\n\r\n\r\n//const prefix = Linking.getInitialURL('/')\r\n\r\nconst linking = {\r\n    // TODO: Implement me! :D\r\n \r\n    prefixes: [Linking.getInitialURL('/bemEstar'), 'http://bemEstar.com'],\r\n}\r\n\r\nexport default linking;","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AuthProvider from './src/contexts/auth';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport RotasEspecialistas from './src/rotas';\nimport linking from './src/linking';\nimport HomeScreen from './src/components/home';\nimport { Platform } from 'react-native';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport AgendamentoPsicologaNeolog from './src/screens/psicologa/achelog';\nimport AgendamentoPsicologaMatriz from './src/screens/psicologa/matriz';\nimport AgendamentoMassoNeolog from './src/screens/massoterapeuta/Neolog';\nimport AgendamentoMassoMatriz from './src/screens/massoterapeuta/matriz';\nimport Login from './src/screens/login';\nimport { Helmet } from 'react-helmet';\n\nconst Stack = createNativeStackNavigator();\n\nfunction WebRoutes() {\n  return (\n    <BrowserRouter basename='/bemestar/'>\n    <Helmet>\n        <title>Bem Estar</title>\n      </Helmet>\n      <Routes >\n        <Route path=\"/\" id='Home'    element={<HomeScreen />} Component={HomeScreen} />\n        <Route path='/psicologaGLP' element={<AgendamentoPsicologaNeolog />} />\n        <Route path='/psicologaMatriz' element={<AgendamentoPsicologaMatriz />} />\n        <Route path='/massoterapiaGLP' element={<AgendamentoMassoNeolog />} />\n        <Route path='/massoterapiaMatriz' element={<AgendamentoMassoMatriz />} />\n        <Route path='/Login' element={<Login />} />\n        {/* Adicione mais rotas para outras telas */}\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\n\nfunction AppMobile() {\n  return (\n    <NavigationContainer linking={linking} \n    fallback={<Text>Carregando...</Text>}\n   \n    >\n      <AuthProvider>\n        <RotasEspecialistas />\n      </AuthProvider>\n    </NavigationContainer>\n  );\n}\n\nexport default function App() {\n\n  return (\n    <NavigationContainer  documentTitle={\n      Platform.OS === \"web\" ? \"\" : \"Bem estar\"\n    }>\n      <AuthProvider>\n        <WebRoutes />\n\n      </AuthProvider>\n\n    </NavigationContainer>\n  );\n\n}\n","const { StyleSheet } = require(\"react-native\");\r\n\r\nconst styleWebMobileUsers = StyleSheet.create({\r\n  \r\n})\r\n\r\nconst styleWebMobile = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#e77825',\r\n        width: '60%',\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        margin: 30,\r\n        flexDirection: 'column',\r\n      }, \r\n      containerGrid: {\r\n        flexDirection: 'row',\r\n        backgroundColor: '#090707',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderRadius: 30,\r\n        width: '98%',\r\n        height: '98%',\r\n        //maxWidth: 800,\r\n      \r\n        \r\n      },\r\n      Calendar: {\r\n        width: '95%',\r\n        height: '45%'\r\n    \r\n      },\r\n    \r\n    containerDate: {\r\n      marginRight: 10,\r\n      width:'50%',\r\n      height: '50%',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      borderRadius: 1,\r\n      flexDirection: 'row',\r\n      margin: 30\r\n    },\r\n    containerInfo: {\r\n      alignItems: 'center',\r\n      padding: 50,\r\n      marginBottom: 10,\r\n      borderRightColor: 'white',\r\n      borderRightWidth: 1,\r\n      width: '35%'\r\n    },\r\n    \r\n    containerHeaderCalendario: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      justifyContent: 'center',\r\n      height: 100,\r\n    } ,\r\n    textDate: {\r\n      fontSize: 15,\r\n      fontWeight: 'bold',\r\n      color: 'white',\r\n      alignItems: 'center',\r\n      textAlign: 'center'\r\n    },\r\n    textDateh: {\r\n      fontSize: 12,\r\n      color: 'white',\r\n      marginTop: 10\r\n    },\r\n    containerHorario: {\r\n      alignItems: 'center',\r\n      maxHeight: 350,\r\n     \r\n    \r\n    },\r\n    ScrollContainer: {\r\n      paddingVertical: 20,\r\n      color: 'black',\r\n    \r\n    },\r\n    containerHorariosDisponiveis: {\r\n      flexDirection: 'column',\r\n      flexWrap: 'wrap',\r\n    },\r\n    horarioContainer: {\r\n      marginRight: 10,\r\n      marginBottom: 10,\r\n      alignItems: 'center',\r\n      \r\n    \r\n    },\r\n    btnHorario: {\r\n      fontFamily: 'sans-serif',\r\n      color: 'white',\r\n      padding: 6,\r\n      borderColor: '#e77825',\r\n      borderWidth: 1\r\n    \r\n    },\r\n    \r\n    heading: {\r\n      fontSize: 20,\r\n      textAlign: 'center',\r\n      margin: 10,\r\n      color: 'white'\r\n      \r\n    \r\n    },\r\n    datas: {\r\n        color: 'blue'\r\n      },\r\n    \r\n      horarios: {\r\n      color: 'black',\r\n      fontSize: 20,\r\n      borderWidth: 1,\r\n      borderColor: 'blue',\r\n      padding: 20,\r\n      marginBottom: 5,\r\n      textAlign: 'center',\r\n      flexDirection: 'column',\r\n      },\r\n      containerHorarios: {\r\n        width: '100%',\r\n        color: 'black',\r\n        fontSize: 20,\r\n        padding: 20,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        fontWeight: 'bold',\r\n        flexWrap: 'wrap',\r\n        flex:1,\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n       \r\n    \r\n      },\r\n    \r\n      textHorariosSelecionado: {\r\n      borderWidth: 1,\r\n      borderColor: 'black',\r\n      padding: 20,\r\n      marginBottom: 5,\r\n      textAlign: 'center',\r\n    \r\n      },\r\n      textHorarios: {\r\n      borderWidth: 1,\r\n      borderColor: 'blue',\r\n      padding: 20,\r\n      marginBottom: 5,\r\n      textAlign: 'center',   \r\n        \r\n      },\r\n      containerButton: {\r\n      marginTop: 20,\r\n      alignItems: 'center',\r\n      },\r\n//Mobile\r\ncontainerM: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#e77825',\r\n    width: '90%',\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    margin: 30,\r\n    flexDirection: 'column',\r\n  }, \r\n  containerGridM: {\r\n    flexDirection: 'column',\r\n    backgroundColor: '#090707',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    width: '95%',\r\n    height: '98%',\r\n   // Width: '98%',\r\n  \r\n    \r\n  },\r\n Calendar: {\r\n    width: '95%',\r\n    height: '45%'\r\n\r\n  },\r\n\r\ncontainerDate: {\r\n  marginRight: 10,\r\n  width:'50%',\r\n  height: '50%',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  borderRadius: 1,\r\n  flexDirection: 'row',\r\n  margin: 30\r\n},\r\ncontainerInfoM: {\r\n  alignItems: 'center',\r\n  padding: 50,\r\n  marginBottom: 10,\r\n  borderBottomColor: 'white',\r\n  borderBottomWidth: 1,\r\n  width: '95%'\r\n},\r\nbtnHorarioM: {\r\n    alignSelf: \"flex-end\",\r\n    width: 200 ,\r\n    height: 50,\r\n    padding: 8,\r\n    alignItems: 'center',\r\n    borderColor: '#e77825',\r\n    borderWidth: 1\r\n},\r\n\r\n// formsAgendamento\r\n\r\ncontainerInput: {\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n\r\n},\r\ncontainerInputM: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexGrow : 1\r\n\r\n},\r\ninputBtnM: {\r\n    color: 'white',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n},\r\ninput: {\r\n    backgroundColor: \"#f3f4fa\",\r\n    marginHorizontal: 20,\r\n    padding: 10,\r\n    borderRadius: 20,\r\n    width: '100%'\r\n},\r\nbutton: {\r\n    flexDirection: 'row',\r\n    margin: 5\r\n}\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n\r\nmodule.exports = styleWebMobile;\r\n//module.exports = styleWebMobileUsers;\r\n  ","const { StyleSheet } = require(\"react-native\");\r\n\r\nconst styleWebMobileUsers = StyleSheet.create({\r\n    container:\r\n    {       \r\n      width: '100%',\r\n      backgroundColor: '#ffff',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: 50,\r\n },\r\n    header: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: 20,\r\n      backgroundColor: 'white',\r\n      borderRadius: 4,\r\n      width: '100%',\r\n      \r\n    },\r\n    logo: {\r\n      //resizeMode:'contain',\r\n      width: 100,\r\n      height: 100,\r\n      position: \"absolute\",\r\n      justifyContent: 'flex-start',\r\n      alignContent: 'flex-start',\r\n      left: '9%',\r\n      marginTop: -15\r\n},\r\nlogo2: {\r\n  //resizeMode:'contain',\r\n  width: 100,\r\n  height: 100,\r\n  position: \"absolute\",\r\n  justifyContent: 'flex-start',\r\n  alignContent: 'flex-start',\r\n  left: '15%',\r\n    marginTop: -15\r\n  \r\n},\r\n    headerBtn: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      top: 25,\r\n      minWidth: 370\r\n     // flexWrap: 'wrap',\r\n     // maxwidth: 600,\r\n     // backgroundColor: 'red'\r\n    },\r\n    btn: {\r\n     //flex: 1,\r\n    // width: '33.3%',\r\n      height: 25,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n     padding: 10,\r\n      marginBottom: 10,\r\n    },\r\n    btnNextPrev:{\r\n      flex: 1,\r\n      justifyContent:\"space-evenly\",\r\n      alignItems: 'center',\r\n      maxWidth: 75,\r\n      \r\n    },\r\n    grid: {\r\n    \r\n      width:'100%',\r\n      maxWidth:900,\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-between',\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: 'white',\r\n      padding: 20,\r\n      borderRadius: 20,\r\n      marginTop: 10,\r\n      \r\n      },\r\n      infoContainer: {\r\n       flexDirection: 'row',\r\n       alignItems: 'center',\r\n        marginBottom: 10,\r\n        flexWrap: 'wrap'\r\n      },\r\n      infoContainerM: {\r\n        //flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n        flexWrap: 'wrap',\r\n        //backgroundColor:'red'\r\n      },\r\n      label: {\r\n       \r\n        marginRight: 5,\r\n      },\r\n      \r\n  card: {\r\n    margin: 5,\r\n    backgroundColor: 'white',\r\n    \r\n      },\r\n  item: {\r\n    width: '100%',\r\n    height: 80,\r\n  backgroundColor: '#f9c2ff',\r\n          marginVertical: 8,\r\n          marginHorizontal: 16,\r\n          flexDirection: 'row',\r\n        },\r\n  cardContainer: {\r\n          borderWidth: 1,\r\n          borderColor: '#e77825',\r\n          padding: 10,\r\n          marginBottom: 10,\r\n          borderRadius: 15,\r\n          flexWrap: 'wrap',\r\n          \r\n         \r\n        },\r\n  descriptionContainer: {\r\n          flexDirection: 'row',\r\n          padding: 20,\r\n          margin: 10,\r\n  \r\n        },\r\n  title1: {\r\n          fontSize: 18,\r\n          fontWeight: 'bold',\r\n          marginBottom: 5,\r\n        },\r\n  description: {\r\n          fontSize: 14,\r\n          color: 'gray',\r\n          flexWrap: 'wrap',\r\n          padding: 5\r\n         \r\n        },\r\n  text: {\r\n    fontSize: 18,\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    justifyContent:  'space-between',\r\n    padding: 20,\r\n  \r\n  }\r\n})\r\n\r\n\r\nmodule.exports = styleWebMobileUsers;\r\n//module.exports = styleWebMobileUsers;\r\n  ","//export function refrestPage() { window.location.reload() }\r\n\r\nconst api = process.env.REACT_APP_API_URL || 'http://172.18.0.5:9091/bemEstar';\r\nvar XLSX = require('xlsx')\r\nconst moment = require('moment')\r\n\r\n\r\nmodule.exports = {\r\n   urlAgendamento: api +'/agendar',\r\n   urlDeleteAgendamento: api + '/deleteAgendamento/',\r\n   urlDelAgendamento: api + '/delAgendamento/',\r\n   urlHorariosDisponiveis: api + '/horariosDisponivies',\r\n   urlGetAgendamento : api + '/agendas/',\r\n   urlPUTagendamento: api + '/update/',\r\n   urlReagendamento: api + '/Reagendar/',\r\n   urlGEThistorico: api + '/agendash/',\r\n   urlGEThorarioFuncio: api + '/horarioFuncionamento/',\r\n   urlPUThorarioFuncio: api + '/horarioFuncio',\r\n   urlPUTcomparecimento: api + '/comparecimento',\r\n   urlPosthorarioServico:  api + '/criarHorarioServico',\r\n   urllogin:  api + '/login',\r\n   urllogout:  api + '/logout',\r\n   urlAdmin:  api + '/admin/users',\r\n\r\n\r\n   refrestPage:  () => { window.location.reload() },\r\n\r\n\r\n   ExportToExcel: async (modo,dados) => {\r\n     \r\n\r\n        // Verifica se os dados são um array e se não está vazio\r\n        if (!Array.isArray(dados) || dados.length === 0) {\r\n          console.log('Dados vazios ou inválidos');\r\n          return;\r\n        }\r\n      \r\n        const rows = [];\r\n      \r\n        // Cria um array com os cabeçalhos\r\n        const headers = Object.keys(dados[0]);\r\n        rows.push(headers);\r\n      \r\n        // Cria um objeto para cada item de dados e adiciona à matriz de linhas\r\n        dados.forEach((item) => {\r\n          const row = Object.values(item);\r\n          rows.push(row);\r\n        });\r\n      \r\n        // Cria uma nova planilha do Excel\r\n        const ws = XLSX.utils.aoa_to_sheet(rows);\r\n      \r\n        // Adiciona a data de criação no final do arquivo\r\n        XLSX.utils.sheet_add_aoa(ws, [['Created ' + new Date().toISOString()]], { origin: -1 });\r\n      \r\n        // Cria um novo livro do Excel e adiciona a planilha a ele\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Agendamentos');\r\n      \r\n        // Salva o arquivo no formato XLSX\r\n        XLSX.writeFile(wb, `agendamento-${modo}.xlsx`);\r\n      \r\n      \r\n      \r\n   } \r\n    \r\n\r\n \r\n\r\n};\r\n","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [415], () => (__webpack_require__(19386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["AuthContext","createContext","_ref","children","refreshPage","window","location","reload","_SignIn","_asyncToGenerator","_ref2","email","senha","data","response","axios","post","util","sessionStorage","setItem","JSON","stringify","status","tela","telasRenderizada","navigation","error","console","log","alert","apply","arguments","_jsx","Provider","value","SignIn","_x","useNavigate","handleCardPress","screenName","_jsxs","View","style","backgroundColor","flex","styles","header","login","Pressable","onPress","FontAwesome5","name","size","Text","fontFamily","Image","source","require","width","height","marginBottom","title","subtitle","heading","subheading","cards","TouchableOpacity","card","cardTitle","cardDescription","StyleSheet","create","alignItems","justifyContent","padding","flexDirection","flexWrap","marginTop","color","fontSize","fontWeight","maxheight","alignSelf","position","top","right","margin","textAlign","borderRadius","marginRight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","minWidth","maxWidth","minHeight","maxHeight","styleWebMobile","dataSelecionada","horarioSelecionada","id_especialista","servicoId","_useState","useState","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","selectedHorario","setSelectedHorario","_useState5","_useState6","setName","_useState7","_useState8","setEmail","_useState9","_useState10","fone","setTelefone","_useState11","_useState12","setor","setSetor","useEffect","dataCombinada","moment","format","dataFormatada","handleTelefone","tex","tel","telLimpo","replace","test","Validation","agendar","_agendar","dados","setTimeout","err","erro","toString","voltar","handleSelectChange","event","selectedValue","target","Dimensions","get","containerM","containerGridM","containerInfoM","textDate","Feather","textDateh","MaterialIcons","containerInputM","inputBtnM","TextInput","nativeID","input","onChangeText","text","defaultValue","editable","required","onChange","button","Button","accessibilityLabel","container","containerGrid","containerInfo","left","containerInput","Date","date","markedDates","setMarkedDates","hora","setHorario","isLoading","setIsLoading","setselectedHorario","_useState13","_useState14","horaa","sethoraa","_useState15","_useState16","showCalendar","setshowCalendar","_useState17","_useState18","showHorarios","setshowHorarios","_useState19","_useState20","navegar","setNavegar","_useState21","_useState22","fetchApi","dataApi","especialidade","diasSemanaDisponiveis","agenda","length","marked","forEach","dia","selected","selectedColor","warn","CompCalendario","LocaleConfig","locales","monthNames","monthNamesShort","dayNames","dayNamesShort","today","defaultLocale","ActivityIndicator","_Fragment","Calendar","onDayPress","day","dateString","horarioSelecionado","find","horario","horariosDisponiveis","horariosLivres","_objectSpread","_defineProperty","theme","calendarBackground","textSectionTitleColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","arrowHeight","monthTextColor","arrowWidth","arrowColor","arrowsHitSlop","textMonthFontSize","textDayHeaderFontSize","minDate","disabledByDefault","dataFormat","handleHorarioSelecionado","horarios","dataHoje","horaHoje","FormsAgendamento","containerDate","containerHorario","ScrollView","contentContainerStyle","contentContainer","containerHorariosDisponiveis","map","indice1","indice2","horarioContainer","btnHorario","containerGridsM","alignContent","Ionicons","btnHorarioM","containerUser","buttonsContainer","selectedButton","buttonText","marginLeft","selectedButtonText","hourButton","borderWidth","borderColor","selectedHourButton","hourButtonText","colaboradorIdrButton","flexGrow","selectedcolaboradorIdButton","borderBottomWidth","opacity","saveButton","bottom","zIndex","saveButtonText","cardHeader","paddingVertical","paddingHorizontal","expandedContent","paddingTop","paddingBottom","cardContainer","editableItem","label","logo","logo2","headerBtn","btn","inputBtn","borderRightColor","borderRightWidth","marginVertical","styleWebMobileUsers","inputs","setPassword","_useContext","useContext","SignOUt","document","placeholder","secureTextEntry","pass","regex","regexPassword","containerHeaderCalendario","ScrollContainer","datas","containerHorarios","textHorariosSelecionado","textHorarios","containerButton","btnNextPrev","grid","infoContainer","item","marginHorizontal","descriptionContainer","description","createDrawerNavigator","createNativeStackNavigator","Linking","getInitialURL","WebRoutes","BrowserRouter","basename","Helmet","Routes","Route","path","id","element","HomeScreen","Component","AgendamentoPsicologaNeolog","AgendamentoPsicologaMatriz","AgendamentoMassoNeolog","AgendamentoMassoMatriz","Login","App","NavigationContainer","documentTitle","Platform","OS","AuthProvider","borderBottomColor","module","exports","infoContainerM","title1","api","process","REACT_APP_API_URL","XLSX","urlAgendamento","urlDeleteAgendamento","urlDelAgendamento","urlHorariosDisponiveis","urlGetAgendamento","urlPUTagendamento","urlReagendamento","urlGEThistorico","urlGEThorarioFuncio","urlPUThorarioFuncio","urlPUTcomparecimento","urlPosthorarioServico","urllogin","urllogout","urlAdmin","refrestPage","ExportToExcel","_ExportToExcel","modo","Array","isArray","rows","headers","Object","keys","push","row","values","ws","utils","aoa_to_sheet","sheet_add_aoa","toISOString","origin","wb","book_new","book_append_sheet","writeFile","_x2","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","__webpack_module_cache__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","current","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}